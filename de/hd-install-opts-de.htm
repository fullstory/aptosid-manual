<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="de">
<head>
	<title>sidux Manuals - Hard Disk Installation Options-de</title>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<style type="text/css" media="all">@import url("../lib/css-js/content.css");</style>
        <style type="text/css" media="all">@import url("../lib/css-js/menu.css");</style>
        <style type="text/css" media="print">@import url("../lib/css-js/print.css");</style>
        <link rel ="shortcut icon" href="../lib/favicon/manual.ico" />
        <script type="text/javascript" src="../lib/css-js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-6_override.css">
        <![endif]-->
</head>
<body id="hd">
<!-- Last translation revision 28/10/2007 1430 UTC -->
<div id="menu"> <!-- menu starts here de lang maintainers hubi Zophod-->
<!--Welcome to the  sidux-manual Operating System Manual  -->
<!-- menu last updated by bluewater 30/11/2007 1700 hrs AEST 30/11/2007 0800 hrs UTC -->
<img src="../lib/logos/sidux-logo.png" alt="logo" id="menu-header" />
	<ul id="top-list">
		<li><a href="http://sidux.com/">Zu sidux.com</a></li>
		<li><a href="http://manual.sidux.com/meta-manual">sidux Meta-Manual</a></li>
	</ul>
	<div id="flags-2">
			<a href="../flag-index.html"><img src="../lib/logos/sidux-lang-50.png" title="Wählen Sie eine andere Sprache" alt="lang-switch" /></a>
	</div>
	<ul>
		<li  onmouseover="showHide( 1 );" onmouseout="startTime();" ><a href="welcome-de.htm">Zum sidux-Handbuch</a>
			<ul class="sub-menu" id="sm1">
				<li><a href="welcome-de.htm#welcome-gen">Willkommen</a></li>
				<li><a href="welcome-de.htm#how-to">Tipps zum Handbuch</a></li>
				<li><a href="welcome-de.htm#table-contents">Index</a></li>
				<li><a href="help-de.htm#help-gen">Wo es Hilfe gibt</a></li>
				<li><a href="help-de.htm#paste">IRC !paste</a></li>
				<li><a href="credits-de.htm#cred-team">Danksagungen</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 2 );" onmouseout="startTime();" ><a href="cd-content-de.htm">CD-Inhalt</a>
			<ul class="sub-menu" id="sm2">
				<li><a href="cd-content-de.htm#cd-content">Inhalt der Live-CD</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 3 );" onmouseout="startTime();" ><a href="cd-dl-burning-de.htm">CD Herunterladen &amp; Brennen</a>
			<ul class="sub-menu" id="sm3">
				<li><a href="cd-dl-burning-de.htm#download-sidux">Spiegelserver, CD herunterladen</a></li>
				<li><a href="cd-dl-burning-de.htm#md5">md5-Prüfsummen</a></li>
				<li><a href="cd-dl-burning-de.htm#burn-nero">Brennen in Windows</a></li>
				<li><a href="cd-dl-burning-de.htm#burn-linux">Brennen in Linux</a></li>
				<li><a href="cd-dl-burning-de.htm#xdelta">xdelta-Patches</a></li>
				<li><a href="cd-no-gui-burn-de.htm#burning-no-gui">Brennen ohne GUI</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 4 );" onmouseout="startTime();" ><a href="live-mode-de.htm">Live-CD-Modus</a>
			<ul class="sub-menu" id="sm4">
				<li><a href="live-mode-de.htm#rootpw">Das Rootpasswort der sidux-Live-CD</a></li>
				<li><a href="live-mode-de.htm#live-cd-installsoft">Installieren von Software während einer Live-CD Sitzung</a></li>
				<li><a href="live-mode-de.htm#ntfs-3g">Schreiben auf NTFS-Partitionen mit ntfs-3g</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 5 );" onmouseout="startTime();" ><a href="term-konsole-de.htm">Das Terminal / Die Konsole</a>
			<ul class="sub-menu" id="sm5">
				<li><a href="term-konsole-de.htm#sux"> sux</a></li>
				<li><a href="term-konsole-de.htm#term-kon"> Terminal/Konsole</a></li>
				<li><a href="term-konsole-de.htm#cli-help">Kommadozeilenhilfe</a></li>
				<li><a href="term-konsole-de.htm#term-cmds">Linux Konsolenbefehle</a></li>
				<li><a href="term-konsole-de.htm#shell-scripts">Installation von Shellskripten</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 6 );" onmouseout="startTime();" ><a href="cheatcodes-de.htm">Boot-Cheatcodes</a>
			<ul class="sub-menu" id="sm6">
				<li><a href="cheatcodes-de.htm#cheatcodes">sidux spezifische Parameter (nur Live-CD)</a></li>
				<li><a href="cheatcodes-de.htm#cheatcodes-linux">Allgemeine Parameter des Linux-Kernel</a></li>
				<li><a href="cheatcodes-vga-de.htm#vga">VGA-Codes</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 7 );" onmouseout="startTime();" ><a href="part-gparted-de.htm">Partitionieren der Festplatte</a>
			<ul class="sub-menu" id="sm7">
				<li><a href="part-gparted-de.htm#partition">mit GParted</a></li>
				<li><a href="part-gparted-de.htm#ntfs">NTFS-Partitionen mit GParted ändern</a></li>
				<li><a href="part-uuid-de.htm#uuid">UUID, Partitionsbezeichnung und fstab</a></li>
				<li><a href="part-cfdisk-de.htm#disknames">Bezeichnungsschema von Festplatten</a></li>
				<li><a href="part-cfdisk-de.htm#partition">Partitionieren mit cfdisk</a></li>
				<li><a href="part-cfdisk-de.htm#formating">Formatieren mit cfdisk</a></li>
				<li><a href="part-size-examp-de.htm#part-example">Beispiele für Partitionsgrößen</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 8 );" onmouseout="startTime();" ><a href="hd-install-de.htm">Installationsoptionen</a>
			<ul class="sub-menu" id="sm8">
				<li><a href="hd-install-de.htm#Inst-prep">Vorbereiten der Installation</a></li>
				<li><a href="hd-install-de.htm#Installation">Installation auf die Festplatte</a></li>
				<li><a href="hd-install-de.htm#first-hd-boot">Erstes Booten von der Festplatte</a></li>
				<li><a href="hd-install-opts-de.htm#fromiso">Booten 'fromiso'</a></li>
				<li><a href="hd-install-opts-de.htm#fromiso-persist">fromiso und persist</a></li>
				<li><a href="hd-install-opts-de.htm#usb-hd">Installation auf eine USB-Festplatte</a></li>
				<li><a href="hd-install-opts-de.htm#vtbox">Installation sidux über VirtualBox</a></li>
				<li><a href="hd-install-opts-de.htm#qemu">Installation sidux über qemu</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 9 );" onmouseout="startTime();" ><a href="hw-dev-hw-dri-de.htm">Grafikkarten, Hardware, Geräte und Treiber</a>
			<ul class="sub-menu" id="sm9">
				<li><a href="hw-dev-hw-dri-de.htm#hd-ntfs3g">Schreiben auf NTFS-Partitionen mit ntfs-3g</a></li>
				<li><a href="hw-dev-hw-dri-de.htm#mon-res">Bildschirmauflösung und Monitoreinstellungen</a></li>
				<li><a href="hw-dev-hw-dri-de.htm#non-free-3d">Binäre, nicht freie Treiber für Nvidia und ATI</a></li>
				<li><a href="hw-dev-hw-dri-de.htm#native-nv-ati">Freie xorg-Treiber für nVidia, ATI, Radeon, Intel</a></li>
				<li><a href="hw-dev-hw-dri-de.htm#non-free">Hardware mit proprietären Anforderungen</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 10 );" onmouseout="startTime();" ><a href="wm-kde-de.htm">Fenstermanager</a>
			<ul class="sub-menu" id="sm10">
				<li><a href="wm-kde-de.htm#desk-freeze">Falls der KDE-Desktop einfriert</a></li>
				<li><a href="wm-kde-de.htm#kde-login">Kein Login in KDE möglich</a></li>
				<li><a href="wm-kde-de.htm#ch-th">Themes ändern</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 11 );" onmouseout="startTime();" ><a href="lamp-apache-de.htm">sidux LAMP-Stack</a>
			<ul class="sub-menu" id="sm11">
				<li><a href="lamp-apache-de.htm#serv-apache">sidux LAMP-Paket</a></li>
				<li><a href="lamp-apache-de.htm#serv-ftp">FTP-Clients</a></li>
				<li><a href="lamp-apache-de.htm#serv-sec">Sichere Protokolle</a></li>
				<li><a href="lamp-apache-de.htm#serv-ssl">SSL</a></li>
				<li><a href="lamp-sql-de.htm#serv-mysql">MySQL-Setup</a></li>
				<li><a href="lamp-ppp-de.htm#serv-php">PHP in Apache</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 12 );" onmouseout="startTime();" ><a href="internet-connecting-de.htm">Internet und Netzwerk</a>
			<ul class="sub-menu" id="sm12">
				<li><a href="ntp-server-de.htm#ntp-server">Zeitserver-Setup</a></li>
				<li><a href="tor-privoxy-de.htm#tor">Tor</a></li>
				<li><a href="tor-privoxy-de.htm#privoxy">Privoxy</a></li>
				<li><a href="internet-connecting-de.htm#firewalls">Firewalls</a></li>
				<li><a href="samba-de.htm#configure">SAMBA: Windows-Freigaben nutzen</a></li>
				<li><a href="samba-de.htm#setup">Einen Samba-Server aufsetzen</a></li>
				<li><a href="ssh-de.htm#ssh-fs">SSH:Einbindung eines entfernten Computers</a></li>
				<li><a href="ssh-de.htm#ssh-x">X-Window-Programme via SSH verwenden</a></li>
				<li><a href="ssh-de.htm#ssh-f">SSH: GUI mit Konqueror</a></li>
				<li><a href="ssh-de.htm#ssh-w">SSH: X-Forwarding von Windows</a></li>
				<li><a href="ssh-de.htm#ssh">SSH: Sicherheit</a></li>
				<li><a href="internet-connecting-de.htm#dial-mod">56k-Modems</a></li>
				<li><a href="internet-connecting-ndis-de.htm#ndiswrapper-basic">Ndiswrapper aktivieren</a></li>
				<li><a href="internet-connecting-ndis-de.htm#ndiswrapper-advanced">Ndiswrapper aktivieren (ausführlicher)</a></li>
				<li><a href="internet-connecting-wpa-de.htm#wpa">WIFI - WLAN</a></li>
				<li><a href="internet-connecting-de.htm#netcardconfig">Internet &amp; Netzwerk</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 13 );" onmouseout="startTime();" ><a href="sys-admin-apt-de.htm">Paketverwaltung</a>
			<ul class="sub-menu" id="sm13">
				<li><a href="sys-admin-apt-de.htm#apt-cook">APT-Kochbuch, sources.list</a></li>
				<li><a href="sys-admin-meta-de.htm#meta-pack">Metapakete installieren</a></li>
				<li><a href="sys-admin-meta-de.htm#meta-proxy">Proxyserver für Metapaket-Installation</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-install">Neue Pakete installieren</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-delete">Pakete löschen</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-downgrade">Downgraden bzw. "Hold" eines Pakets</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-cache">Mit apt-cache nach Programmpaketen suchen</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-kio">Mit kio-apt nach Programmpaketen suchen</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 14 );" onmouseout="startTime();" ><a href="sm-siduxcc-de.htm">Systemadministration</a>
			<ul class="sub-menu" id="sm14">
				<li><a href="sm-siduxcc-de.htm#sm">smxi Befehls-Syntax</a></li>
				<li><a href="sm-siduxcc-de.htm#siduxcc">siduxcc</a></li>
				<li><a href="sys-admin-apt-de.htm#apt-upgrade">Upgrade eines installierten Systems</a></li>
				<li><a href="sys-admin-upgrade-de.htm#live-cd-upgrade">Upgrade durch die Live-CD</a></li>
				<li><a href="sys-admin-kern-upg-de.htm#kern-upgrade">Upgrade des Kernels</a></li>
				<li><a href="sys-admin-rdiff-de.htm#rdiff">Backup mit rdiff</a></li>
				<li><a href="sys-admin-rsync-de.htm#rsync">Backup mit rsync</a></li>
				<li><a href="vir-rkits-de.htm#virus-rkits">Virus- und Rootkitscanner</a></li>
				<li><a href="sys-admin-gen-de.htm#start-services">Einen Dienst in sidux starten</a></li>
				<li><a href="sys-admin-gen-de.htm#pw-lost">Rootpasswort vergessen</a></li>
				<li><a href="sys-admin-gen-de.htm#fonts">Schriftarten</a></li>
				<li><a href="sys-admin-gen-de.htm#cups">CUPS</a></li>
				<li><a href="sys-admin-gen-de.htm#init">sidux-Runlevels - init</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#mbr-grub-boot">MBR-Bootsektor überschrieben</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#dual-boot">Dual- und Multibooting</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#boot-grub-floppy">Eine Boot-Floppy erstellen</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#remove-grub">Grub aus MBR entfernen</a></li>
				<li><a href="sys-admin-grub-bootman2-de.htm#what-is-grub">Grub: der Bootmanager</a></li>
			</ul>
		</li>
	</ul>
<!-- menu ends here --> </div>
<div id="main-page">
	<div class="divider" id="fromiso">
		<h2 id="top-header">Booten "fromiso"</h2>

		<p  class="highlight-2">Für normalen Gebrauch empfehlen wir das Standarddateisystem von sidux, ext3, welches von den Maintainern gut gewartet ist.</p>
		
		<p>Dieser Cheatcode startet aus einer ISO-Datei auf der Festplatte (ext2/3). Das ist viel schneller als von einer CD (Festplatten-Installationen "fromiso" dauern nur einen Teil der normalen Zeit. Manche sagen weniger als 4 Minuten, aber 6-8 Minuten sind an sich schon schnell).</p>

		<p>Dies ist natürlich viel schneller als von einer CD, und das Laufwerk steht zur Verfügung. Alternativ kann man auch <a href="hd-install-opts-de.htm">QEMU</a> verwenden.</p>

		<h5>Voraussetzungen:</h5>

			<p>* eine funktionierende Grub-Installation (auf Floppy, einer Festplatteninstallation oder der Live-CD) <br />
			* eine Imagedatei sidux.iso und ein Linux-Dateisystem wie ext2/3 <br />
			* Wenn die Imagedatei umbenannt wird (zum Beispiel auf sidux.ISO), müssen die Befehle entsprechend angepasst werden, da das Dateibenennungssystem von Unix/Linux zwischen Groß- und Kleinschreibung unterscheidet.</p>

				<h4 class="highlight-3">Eros und Gaia Live-CD:</h4>
							<p>Zuerst wählt man einen leicht zu erreichenden Platz für das iso und zwei Dateien, die wir brauchen, aus. Hierfür erstellt man einen Basisordner "sidux" auf dem Laufwerk "/media/sdax" (z. B. sda1, oder sda2, oder 5, oder 6, oder ...) und kopiert die iso-Datei in ihn:</p>

<pre>
# mkdir /media/sdax/sidux
# mv sidux.iso /media/sdax/sidux
</pre>

							<p>Nun mountet man das iso-Image aus dem eben erstellten Ordner:</p>

<pre>
# mkdir -p /mnt/test
# mount -t iso9660 -o loop,ro /media/sdax/sidux/sidux.iso /mnt/test
</pre>

							<p>und kopiert anschließend die Dateien vmlinuz und initrd.img von dem eingebundenen iso-Image in den sidux-Ordner (wobei das "x" an die jeweilige Kernelversion und "sdax" an das entsprechende Laufwerk angepasst werden müssen, da sie Variablen sind):</p>

<pre>
# cp /mnt/test/boot/vmlinuz-2.6.23.9-rc1-slh-smp-1 /media/sdax/sidux/
# cp /mnt/test/boot/initrd.img-2.6.23.9-rc1-slh-smp-1 /media/sdax/sidux/
</pre>

							<p>Als nächstes muss man grub anpassen.  Dazu editiert man die Datei <span class="highlight-3">/boot/grub/menu.lst</span> und fügt Folgendes nach dem Eintrag <span class="highlight-3">### END DEBIAN AUTOMAGIC KERNELS LIST</span> hinzu <span class="highlight-2">(Anmerkung: keine "wildcards" in der Grubzeile für Dateinamem erlaubt!)</span>:</p>

<pre>
### ISO boot
title sidux 32bit from ISO
kernel (hd0,4)/sidux/vmlinuz-2.6.23.9-rc1-slh-smp-1 boot=fll quiet vga=791 fromiso=/sidux/sidux.iso
initrd (hd0,4)/sidux/initrd.img-2.6.23.9-rc1-slh-smp-1
</pre>

		<p>Mit dem nächsten Boot hat man einen neuen Menü-Eintrag in grub zum Starten des iso-Images.</p>

				<h4 class="highlight-3">Tartaros and Chaos Live-cds:</h4>
							<p>Zuerst suchen wir einen Ort für die ISO-Datei. Um kurze Pfadnamen zu erhalten, erstellen wir ein Basis-Verzeichnis namens sidux, z. B. auf /dev/hda5, und kopieren das ISO hinein:</p>

<pre># mkdir /media/hda5/sidux
# mv sidux.iso /media/hda5/sidux</pre>

							<p>Wir mounten das ISO:</p>

<pre># mkdir -p /mnt/test
# mount -t iso9660 -o loop,ro /media/hda5/sidux/sidux.iso /mnt/test</pre>

							<p>Wir kopieren die Dateien miniroot.gz und vmlinuz aus dem gemounteten ISO:</p>

<pre># cp /mnt/test/boot/vmlinuz /media/hda5/sidux/
# cp /mnt/test/boot/miniroot.gz /media/hda5/sidux/</pre>

							<p>Nun muss Grub noch angepasst werden. Dazu editiert man die Datei <span class="highlight-3">/boot/grub/menu.lst</span> und fügt Folgendes nach dem Eintrag <span class="highlight-3">### END DEBIAN AUTOMAGIC KERNELS LIST</span> hinzu <span class="highlight-2">(Anmerkung: keine "wildcards" in der Grubzeile für Dateinamem erlaubt!)</span>:</p>

<pre>### ISO boot
title sidux 32bit from ISO
kernel (hd0,4)/sidux/vmlinuz boot=fll quiet vga=791 fromiso=/sidux/sidux.iso
initrd (hd0,4)/sidux/miniroot.gz</pre>

							<p>Beim nächsten Booten ist eine neue Auswahl im Grub-Menü: "sidux 32bit from ISO".</p>

	<div class="divider" id="fromiso-persist">
		<h2>fromiso und persist (ab Eros)</h2>

							<p>Mit sidux (ab Eros) kann ein dauerhaftes (persistentes) Live-System auf einer beschreibbaren Partition eingerichtet werden, indem die Bootoptionen 'fromiso' und 'persist' kombiniert werden.</p>

							<p>sidux nutzt aufs, um mittels "copy on write" neue oder veränderte Daten im RAM zu speichern. Mit der Bootoption <span class="highlight-3">persist</span> können diese Daten auf derjenigen Partition gespeichert werden, auf welcher sich das fromiso-CD-Abbild befindet.</p>

							<p><span class="highlight-3">persist</span> verhilft zu einem Live-System, welches alle automatisierten Routinen der sidux-Live-CD enthält (zum Beispiel Hardwarekonfiguration), gleichzeitig aber mit persönlichen Daten und Einstellungen gebootet werden kann.</p> 

							<p><span class="highlight-3">Zur Verdeutlichung: das System speichert nicht die Einstellungen des graphischen Servers X (Grafikkarte, Tastatur, Maus) oder der Netzwerkkarte, sondern nur die persönlichen Daten und Einstellungen.Somit ist es ideal, um es auf mehr als einem Computer zu nutzen.</span>.</p>

							<p>persist ist ideal in Kombination mit install-usb-gui, um einen bootbaren USB-Stick mit eigenen Daten und selbstgewählter Software zu erstellen.</p>

							<p>Die persönlichen Daten werden in einem Unterverzeichnis der fromiso-Partition gespeichert. Wenn dieses Unterverzeichnis noch nicht vorhanden ist, wird es automatisch erstellt, wenn die Bootoptionen <span class="highlight-3">fromiso </span> und <span class="highlight-3">persist</span> gemeinsam benutzt werden.</p>

							<p><span class="highlight-3">persist</span> auf einem FAT-Dateisystem (vorformatiert auf den meisten Flash-Speichern) benötigt eine große Datei, die als Loop-Gerät benutzt wird. Diese Datei muss formatiert werden (<span class="highlight-3">empfohlen ist ext3</span>).</p>

							<p>Diese Datei soll <span class="highlight-3">sidux-rw</span> benannt werden und im Root-Verzeichnis der FAT-Partition (des mit FAT formatierten Flash-Speichers) platziert werden. Wenn die Partition zum Beispiel beschreibbar auf /media/sdb1 eingehängt ist und eine Datei mit 1GB Größe erstellt werden soll, um als dauerhaft genutzte Partition zu fungieren, werden folgende Befehle genutzt (es wird kein root benötigt, wenn der user Schreibrechte hat):</p>
<pre>
disc="/media/sdb1"
size=1024
dd if=/dev/zero of=${disc}/sidux-rw bs=1M count=${size} &amp;&amp; echo 'y' | /sbin/mkfs.ext3 ${disc}/sidux-rw
</pre>

							<p class="highlight-2">Mit NTFS formatierte Partitionen (Standard für Windows NT/2000/XP/Vista (TM)) können NICHT mit der Bootoption persist benutzt werden.</p>

	</div>
	<div class="divider" id="usb-hd"> 
		<h2>sidux auf einen USB-Stick oder eine USB-Festplatte installieren</h2>

							<p>sidux auf eine USB-Festplatte oder einen USB-Stick zu installieren ist genauso einfach wie eine normale Festplatteninstallation.</p>

							<p>Die empfohlene minimale Größe für eine Installation auf einen USB-Stick ist:<br /><br />
							sidux "Lite" braucht 1.2 GB. Dazu kommt noch Platz für die Daten.<br />
							sidux "Full" braucht 2.1 GB. Dazu kommt noch Platz für die Daten.<br /><br />
							<span class="highlight-1">Für die Lite-Installation sind daher USB-Sticks mit mindestens 2 GB, für eine Full-Installation USB-Sticks mit mindestens 3 GB empfohlen.</span></p>

							<p>Wir fangen mit der normalen Installation an und wählen die Partition auf der USB-Platte aus, auf der sidux installiert werden soll - wir sprechen im Folgenden von "sda1", aber Gleiches gilt für jede andere Partition auf einer USB-Festplatte.</p>

							<p>Die Partition muss ein Linux-Dateisystem verwenden. Empfohlen ist das ext3-Dateisystem. Eine bereits existierende Partition wird vom sidux-installer neu formatiert.</p>

							<p class="highlight-2">Alle Daten auf dieser Partition werden hierbei gelöscht!</p>

							<p>Man kann nun von seiner USB-Installation booten. Hierzu muss "Boot from USB" im BIOS aktiviert sein.</p>

	</div>
	<div class="divider" id="vtbox">
		<h2>sidux mit VirtualBox installieren</h2>
							<p>VirtualBox ist ideal für 32bit-Maschinen. Für 64bit muss QEMU verwendet werden.</p>
						<ul>
 							<li>1. Erstellung eines Festplattenabbilds für VirtualBox</li>
 							<li>2. Booten der ISO mit VirtualBox</li>
 							<li>3. Installation auf dem Abbild</li>
						</ul>

				<h4>Voraussetzungen</h4>
							<p><span class="highlight-3">1 GB RAM ist empfohlen</span>, idealerweise 512 MB für das Gastsystem und 512 MB für das Hostsystem. Bei weniger RAM ist mit Verlust an Performanz zu rechnen.</p>

							<p><span class="highlight-3">Freier Festplattenplatz:</span> VirtualBox selbst ist sehr schlank (eine typische Installation benötigt etwa 30 MB Speicherplatz), benötigt aber sehr große Dateien auf der Festplatte, auf der das Gastsystem gespeichert ist. Für eine Installation von MS Windows XP (TM) wird eine Datei benötigt, die leicht auf etliche Gigabyte anwachsen kann. Um sidux in VirtualBox verwenden zu können, sollte man ein fünf Gigabyte großes Image plus Platz für eine swap-Partition bereitstellen.</p>

							<p class="highlight-3">Vor der Installation der Kernelmodule der virtuellen Maschine - nach einem Kernel-Upgrade - muss ein dist-upgrade durchgeführt werden, um einen Konflikt mit gcc und einen Abbruch mit Fehler zu vermeiden. (Dieser Ratschlag bezieht sich auf alle externen Kernelmodule).</p>

						<h4>Der Mechanismus:</h4>
<pre>
Installallation des VirtualBox-Paketes
Klicken auf Applications &gt; System Tools &gt;InnoTek VirtualBox - Virtual Machine
Erstellen einer VM, Einlegen der CD/DVD des Betriebssystems in das CD/DVD-Laufwerk, Installieren des Gastsystems, Reboot.
</pre>

				<!--<h3>Automated installation with svmi</h3>
							<p>You can run the options manually, or use the auto install feature, non interactive mode, see <span class="highlight-3">svmi -h for autoinstall options</span>. svmi makes the vbox kernel module, it updates modules, it adds it to /etc/modules so it will start automatically (otherwise vbox won't run on reboot), and updates 'adduser'.</p>
<pre>
as root #
wget -Nc techpatterns.com/svmi
chmod +x svmi
svmi
</pre>
-->
				<h3>Installation:</h3>
<pre>
apt-get update
apt-get install virtualbox-ose 
m-a a-i virtualbox-ose
</pre>

							<p>Im Anschluss wird die Information des aktuellen Betriebssystems (Linux-Kernels) in die Struktur gespeichert:</p> 
	<!-- echo virtualbox-ose-module-$(uname -r) -->
<pre>
virtualbox-ose-module-$(uname -r)
</pre>
							<p class="highlight-3">Abschließend wird der User der Gruppe vboxusers zugefügt:</p>
<pre>
adduser &lt;username&gt; vboxusers 
</pre>

					<h3>Installation von sidux auf der virtuellen Maschine:</h3>
							<p>Am besten werden die Assistenten von VirtualBox benutzt, um eine virtuelle Maschine für sidux zu erzeugen. Danach wird den Anweisungen für eine reguläre Installation von sidux gefolgt.</p>

							<p><a href="http://www.virtualbox.org/">VirtualBox hat auf seiner Homepage eine umfassende Bedienungsanleitung, die man als PDF herunterladen kann.</a> </p>

	</div>
	<div class="divider" id="qemu">
		<h2>sidux installieren mit QEMU</h2>

		<ul>
 			<li>1. Erstellen eines Festplattenimages (iso) für QEMU</li>
 			<li>2. Booten der iso mit QEMU</li>
 			<li>3. Installation auf dem Image</li>

		</ul>

 			<h4>Erstellen eines Festplattenimages (iso)</h4>

				<p>Um  qemu laufen lassen zu können, braucht man ein Festplattenimage. Das ist eine Datei, welche den Inhalt einer Partition oder Festplatte trägt.</p>

				<p>Man verwendet den Befehl:</p>
<pre>
qemu-img create -f qcow sidux.qcow 3G
</pre>
				<p>Damit erstellt man eine Imagedatei mit dem Namen "sidux.qcow". Der Parameter "3G" spezifiziert die Größe der Platte, in diesem Fall 3 GB. Das Suffix M wird für Megabyte verwendet (zum Beispiel "256M"). Man muss sich über die Größe jedoch keine zu großen Gedanken machen - das Format qcow komprimiert das Image, sodass der unbenutzte Platz sich nicht auf die Größe des Files aufaddiert.</p>


			<h4>Installation des Betriebssystems</h4>

				<p>Jetzt wird zum ersten Mal der Emulator gestartet. Eines muss dabei beachtet werden: Wenn man innerhalb des qemu-Fensters mit der Maus klickt, wird der Mauszeiger "gefangen". Um ihn wieder frei zu geben, drückt man Ctrl+Alt.</p>

				<p>Falls man eine bootbare Diskette benötigt, wird Qemu so gestartet:</p>
<pre>
qemu -floppy sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
				<p>Wenn die CD-ROM bootbar ist, wird Qemu so gestartet:</p>
<pre>
qemu -cdrom sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
				<p>Nun kann sidux wie auf eine reale Festplatte installiert werden.</p>


			<h4>Verwendung des Systems</h4>

				<p>Um das System zu starten, gibt man ein:</p>
<pre>
qemu [hd_image]
</pre>
				<p>Eine gute Idee ist die Verwendung von sog. "überlagerten Images" (overlay images). Auf diese Weise braucht ein Image nur einmal angelegt zu werden und Qemu speichert Änderungen außerhalb dieses Images. Das System ist so stabiler, da es sehr einfach ist, auf einen früheren Installationsstand zurückzugreifen.</p>

				<p>Um ein "überlagertes Image" (overlay image) zu erstellen, gibt man ein:</p>
<pre>
qemu-img create -b [base_image] -f qcow [overlay_image]
</pre>
				<p>Das Festplattenimage ersetzt nun das Basis-Image (base_image), in unserem Fall win.qcow). Danach kann qemu gestartet werden:</p>
<pre>
qemu [overlay_image]
</pre>
				<p>Das originale Image bleibt unberührt. Es muss aber beachtet werden, dass das Basis-Image weder umbenannt noch verschoben werden kann, da das Overlay den genauen, absoluten Pfad des Basis-Images benötigt.</p>


			<h4>Wie man jede echte Partition als primäre Partition eines Festplattenimages benutzen kann</h4>

				<p>Manchmal möchte man eine Systempartition aus qemu heraus benutzen (man möchte zum Beispiel sowohl die echte Installation wie auch die virtuelle qemu-Installation mit einer gegebenen Partition als root starten). Dies erfolgt durch ein Software-RAID im Linearmodus (dazu braucht man den linear.ko Kernel-Treiber) und ein Loopback-Gerät: der Trick dabei ist, dynamisch einen Master Boot Record (MBR) an den Beginn der realen Partition zu stellen, welche in das Raw-Disk-Image von qemu eingebettet werden soll.</p>

				<p>Angenommen, man hat eine einfache, nicht eingebundene Partition /dev/hdaN mit einem Dateisystem, welche Teil eines qemu-Festplattenimages werden soll. Als erstes erstellt man eine kleine Datei, welche den MBR beinhalten soll:</p>
<pre>
dd if=/dev/zero of=/path/to/mbr count=32
</pre>
				<p>Hiermit wird eine 16 KB (32 * 512 bytes) große Datei erstellt. Es ist wichtig, diese Datei nicht zu klein zu veranschlagen (auch wenn der MBR nur einen einzelnen 512 Bytes großen Block benötigt), da die Chunk-Size des Software-RAID-Geräts umso kleiner sein muss, je kleiner jene Datei ist, was wiederum einen Einfluss auf die Leistung haben wird. Danach kann ein Loopback-Gerät zum MBR-File aufgesetzt werden:</p>
<pre>
losetup -f /path/to/mbr
</pre>
				<p>Gehen wir davon aus, dass das Gerät /dev/loop0 heißt, da noch kein weiteres Loopback existieren wird. Nächster Schritt ist das Erstellen eines zusammengeführten, "merged" Images mit MBR + /dev/hdaN unter Benutzung eines Software-RAIDS:</p>
<pre>
 modprobe linear
 mdadm --build --verbose /dev/md0 --chunk=16 --level=linear --raid-devices=2 /dev/loop0 /dev/hdaN
</pre>
				<p>Das daraus resultierende /dev/md0 wird als qemu-Raw-Diskimage benutzt (das Setzen der Berechtigungen nicht vergessen, damit der Emulator darauf zugreifen kann). Der letzte (und etwas heikle) Schritt ist die Erstellung der Festplattenkonfiguration (Plattengeometrie und Partitionstabellen), sodass der Startpunkt der primären Partition im MBR mit jenem von /dev/hdaN innerhalb von /dev/md0 übereinstimmt (ein Offset von genau 16 * 512 = 16384 Bytes in diesem Beispiel). Dazu wird fdisk auf der Host-Maschine benutzt, nicht auf dem Emulator: in den Grundeinstellungen resultiert die Raw-Disk-Erkennung von qemu oft in Offsets, die nicht auf Kilobyte gerundet werden können (wie 31.5 KB im vorangegangenen Abschnitt), was wiederum vom Code des Software-RAIDs nicht verstanden werden kann. Daher gibt man auf der Host-Maschine ein:</p>
<pre>
 fdisk /dev/md0
</pre>
				<p>Dort erstellt man eine primäre Partition entsprechend /dev/hdaN und spielt mit dem Befehl 's' (Sector) im Menü 'x' (Expert), bis der erste Zylinder (wo die erste Partition beginnt) genau zur Größe des MBR passt. Schließlich wird mit 'w' (write) das Ergebnis in den File geschrieben: damit ist die Arbeit abgeschlossen. Jetzt ist eine Partition vorhanden, welche sowohl direkt von der Host-Maschine eingebunden werden kann als auch vom qemu-Festplattenimage:</p>
<pre>
 qemu -hdc /dev/md0 [...]
</pre>
				<p>Natürlich kann gefahrlos jeder Bootloader auf das Festplattenimage mit qemu geschrieben werden, vorausgesetzt, die originale Partition /boot/hdaN enthält die dafür notwendigen Applikationen.</p>



			<h4>Das QEMU Accelerator Module</h4>

				<p>Die Entwickler von qemu haben ein optionales Kernelmodul erstellt, um qemu beinahe auf natives Niveau beschleunigen zu können. Dieses Modul sollte mit dieser Option geladen werden:</p>
<pre>
major=0
</pre>
				<p>Damit wird die Einrichtung des benötigten Geräts /dev/kqemu automatisiert. Weitere Befehle sind:</p>
<pre>
echo "options kqemu major=0" >> /etc/modprobe.conf
</pre>
				<p>Dieser erweitert modprobe.conf, um sicherzustellen, dass die Moduloption bei jedem Laden des Moduls aktiviert wird.</p>

<pre>
qemu [...] -kernel-kqemu
</pre>
				<p>Damit wird die volle Virtualisation ermöglicht und die Geschwindigkeit beträchtlich erhöht.</p>

			<h4>Aktivierung von QEMU:</h4>
<pre>
qemu -cdrom /tmp/pkg/sidux-debug.iso -net nic -net user -m 512
</pre>
		<p><a href="http://fabrice.bellard.free.fr/qemu/qemu-doc.html">Die offizielle Dokumentation des QEMU-Projekts </a> </p>
		<p><a href="http://wiki2.archlinux.org/index.php/Qemu">Einige Abschnitte für QEMU wurden für das sidux-Handbuch  unter der GNU Free Documentation License 1.2 verwendet und für das sidux-Handbuch angepasst. Die Übersetzung ins Deutsche erfolgte durch das sidux-Team.</a> </p>

		
	</div>
	<div class="spacer05"></div>
	<div id="rev">Content last revised 21/11/2007 0700hrs UTC</div>

</div>
</div>
</body>
</html>
