<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<title>sidux Manuals - Other Installation Options</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<style type="text/css" media="all">@import url("../lib/css-js/content.css");</style>
        <style type="text/css" media="all">@import url("../lib/css-js/menu.css");</style>
        <style type="text/css" media="print">@import url("../lib/css-js/print.css");</style>
        <link rel ="shortcut icon" href="../lib/favicon/manual.ico" />
        <script type="text/javascript" src="../lib/css-js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-6_override.css">
        <![endif]-->
</head>
<body>
<!-- Last translation revision by bluewater 22/04/2009 1350hrs UTC -->
<div id="menu"> <!-- menu starts here en lang maintainer bluewater-->
<!--sidux-manual Operating System Manual menu-version-01.89.2009.06.14 -->
<!-- menu last updated by bluewater 2009.06.14 0530 hrs UTC -->
	<div id="menu-header">
	      <a href="http://sidux.com/"><img src="../lib/logos/manual-sidux-logo.png" title="To sidux.com forums and wiki" alt="sidux.com logo" /></a>
	</div>
	<ul id="top-list">
		<li><a href="manual-search-en.htm#search-on"> <img src="../lib/logos/manual-search-22x22.png" title="Search Manual" alt="Search" />Search online - offline</a> </li>
		<li><a href="http://manual.sidux.com/meta-manual">sidux Meta-Manual</a></li>
	</ul>
	<div id="flags-2">
			<a href="../flag-index.html"><img src="../lib/logos/sidux-lang-100x64.png" title="Choose another language" alt="lang-switch" /></a>
	</div>
	<ul>
		<li  onmouseover="showHide( 1 );" onmouseout="startTime();" ><a href="welcome-en.htm">sidux OS Manual</a>
			<ul class="sub-menu" id="sm1">
				<li><a href="welcome-en.htm#welcome-gen">sidux OS Manual</a></li>
				<li><a href="welcome-en.htm#how-to">How to use this manual</a></li>
				<li><a href="welcome-en.htm#table-contents">Table of Contents</a></li>
				<li><a href="help-en.htm#help-gen">Where to get Help</a></li>
				<li><a href="help-en.htm#paste">IRC !paste</a></li>
				<li><a href="credits-en.htm#cred-team">Credits</a></li>
				<li><a href="wel-quickstart-en.htm#welcome-quick">sidux Quick Start Guide</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 2 );" onmouseout="startTime();" ><a href="cd-dl-burning-en.htm">ISO Content, Releases, Download Mirrors and Burning</a>
			<ul class="sub-menu" id="sm2">
				<li><a href="cd-content-en.htm#cd-content">ISO Content and system requirements</a></li>
				<li><a href="sys-admin-release-en.htm#rolling">Release Notes</a></li>
				<li><a href="cd-dl-burning-en.htm#download-sidux">sidux Mirrors, Downloading and Burning</a></li>
				<li><a href="cd-dl-burning-en.htm#md5">md5 Checksum</a></li>
				<li><a href="cd-dl-burning-en.htm#burn-nero">Burning in Windows</a></li>
				<li><a href="cd-dl-burning-en.htm#burn-linux">Burning in Linux</a></li>
				<li><a href="cd-dl-burning-en.htm#xdelta">xdelta Patching</a></li>
				<li><a href="cd-no-gui-burn-en.htm#burning-no-gui">burniso script</a></li>
				<li><a href="cd-no-gui-burn-en.htm#burn-no-gui-gen">Burning without a GUI</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 3 );" onmouseout="startTime();" ><a href="live-mode-en.htm">Live Mode</a>
			<ul class="sub-menu" id="sm3">
				<li><a href="live-mode-en.htm#rootpw">Root-password on the sidux-Live ISO</a></li>
				<li><a href="live-mode-en.htm#live-cd-installsoft">Installing software whilst on a Live-ISO</a></li>
				<li><a href="live-mode-en.htm#ntfs-3g">Writing on NTFS-partitions with ntfs-3g</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 4 );" onmouseout="startTime();" ><a href="term-konsole-en.htm">The Terminal/Konsole</a>
			<ul class="sub-menu" id="sm4">
				<li><a href="term-konsole-en.htm#sux"> sux</a></li>
				<li><a href="term-konsole-en.htm#term-kon"> Terminal/Konsole</a></li>
				<li><a href="term-konsole-en.htm#cli-help">Command Line Help</a></li>
				<li><a href="term-konsole-en.htm#term-cmds">Linux Terminal Commands List</a></li>
				<li><a href="term-konsole-en.htm#shell-scripts">Installing Scripts.sh</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 5 );" onmouseout="startTime();" ><a href="cheatcodes-en.htm">CheatCodes</a>
			<ul class="sub-menu" id="sm5">
				<li><a href="cheatcodes-en.htm#cheatcodes">sidux specific Live-ISO Cheatcodes</a></li>
				<li><a href="cheatcodes-en.htm#cheatcodes-linux">Linux generic Cheatcodes</a></li>
				<li><a href="cheatcodes-vga-en.htm#vga">VGA Codes</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 6 );" onmouseout="startTime();" ><a href="part-gparted-en.htm">Partitioning Your Hard Drive</a>
			<ul class="sub-menu" id="sm6">
				<li><a href="part-gparted-en.htm#partition">Partitioning your HD using GParted</a></li>
				<li><a href="part-gparted-en.htm#ntfs">NTFS partition Resizing using GParted</a></li>
				<li><a href="part-uuid-en.htm#uuid">UUID, Partition Labelling and fstab</a></li>
				<li><a href="part-cfdisk-en.htm#disknames">Disk Naming in brief</a></li>
				<li><a href="part-cfdisk-en.htm#partition">Partitioning  your HD using cfdisk</a></li>
				<li><a href="part-cfdisk-en.htm#formating">Formatting after partitioning with cfdisk</a></li>
				<li><a href="part-size-examp-en.htm#part-example">Partition Size Examples</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 7 );" onmouseout="startTime();" ><a href="hd-install-en.htm">Installation options</a>
			<ul class="sub-menu" id="sm7">
				<li><a href="hd-install-en.htm#Inst-prep">Install Preparation</a></li>
				<li><a href="hd-install-en.htm#Installation">Installing to your HD</a></li>
				<li><a href="hd-install-en.htm#first-hd-boot">First Boot Up</a></li>
				<li><a href="hd-install-opts-en.htm#fromiso">Booting 'fromiso'</a></li>
				<li><a href="hd-install-opts-en.htm#fromiso-persist">fromiso and persist</a></li>
				<li><a href="hd-install-opts-en.htm#usb-hd">Installing on a USB-HD</a></li>
				<li><a href="hd-install-opts-en.htm#vtbox">Installing sidux with VirtualBox</a></li>
				<li><a href="hd-install-opts-en.htm#qemu">Installing sidux with QEMU</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 8 );" onmouseout="startTime();" ><a href="hw-dev-hw-dri-en.htm">Graphic Cards, Monitors, &amp; miscellaneous Drivers</a>
			<ul class="sub-menu" id="sm8">
				<li><a href="hw-dev-hw-dri-en.htm#hd-ntfs3g">Writing on NTFS-partitions with ntfs-3g</a></li>
				<li><a href="hw-dev-mon-en.htm#mon-res">Screen Resolution and Monitors</a></li>
				<li><a href="hw-dev-mon-en.htm#xrandr">Dual Monitors and xrandr</a></li>
				<li><a href="hw-dev-mon-en.htm#mon-binary">Dual Monitors (using binaries)</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free-3d">Binary, non-free drivers for Nvidia</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free-3d-2">non-free drivers for ATI, Radeon and others</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free-firmware">Hardware needing non-free firmware drivers</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free">Adding non-free to Sources List</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#native-nv-ati">FOSS xorg drivers for nVidia, ATI, Radeon, Intel</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 9 );" onmouseout="startTime();" ><a href="wm-kde-en.htm">Window Managers</a>
			<ul class="sub-menu" id="sm9">
				<li><a href="wm-xfce-en.htm#xfce-notes">Useful Xfce extras</a></li>
				<li><a href="wm-kde-en.htm#install-add">Useful extra KDE Apps</a></li>
				<li><a href="wm-kde-en.htm#desk-freeze">Desktop Freezes</a></li>
				<li><a href="wm-kde-en.htm#kde-login">Cant login in KDE</a></li>
				<li><a href="wm-kde-en.htm#ch-th">Changing Themes</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 10 );" onmouseout="startTime();" ><a href="lamp-apache-en.htm">sidux LAMP Stack</a>
			<ul class="sub-menu" id="sm10">
				<li><a href="lamp-apache-en.htm#serv-apache">sidux LAMP Stack</a></li>
				<li><a href="lamp-apache-en.htm#serv-ftp">FTP Clients</a></li>
				<li><a href="lamp-apache-en.htm#serv-sec">Security Protocols</a></li>
				<li><a href="lamp-apache-en.htm#serv-ssl">SSL</a></li>
				<li><a href="lamp-sql-en.htm#serv-mysql">MySQL Setup</a></li>
				<li><a href="lamp-ppp-en.htm#serv-php">PHP in Apache</a></li>
				<li><a href="ntp-server-en.htm#ntp-server">Timeserver Setup</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 11 );" onmouseout="startTime();" ><a href="internet-connecting-en.htm">Internet and Networking</a>
			<ul class="sub-menu" id="sm11">
				<li><a href="tor-privoxy-en.htm#tor">Tor</a></li>
				<li><a href="tor-privoxy-en.htm#privoxy">Privoxy</a></li>
				<li><a href="internet-connecting-en.htm#firewalls">Firewalls</a></li>
				<li><a href="samba-en.htm#configure">Configuring SAMBA (Windows)</a></li>
				<li><a href="samba-en.htm#setup">Samba-Server Setup</a></li>
				<li><a href="ssh-en.htm#ssh-fs">SSH Remote Mounting</a></li>
				<li><a href="ssh-en.htm#ssh-x">X Window Apps via SSH</a></li>
				<li><a href="ssh-en.htm#ssh-f">GUI SSH with Konqueror</a></li>
				<li><a href="ssh-en.htm#ssh-w">SSH X-Forwarding from Windows-PC</a></li>
				<li><a href="ssh-en.htm#ssh">SSH and Security</a></li>
				<li><a href="internet-connecting-en.htm#dial-mod">56k Modems</a></li>
				<li><a href="internet-connecting-wpagui-en.htm#wpa-roaming-gui">WiFi - roaming WPA-GUI</a></li>
				<li><a href="internet-connecting-wpa-en.htm#wpa-basic">WiFi - Basic setup guide</a></li>
				<li><a href="internet-connecting-wpa-en.htm#wpa">WiFi - wpasupplicant</a></li>
				<li><a href="internet-connecting-en.htm#netcardconfig">Getting Online - Ceni</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 12 );" onmouseout="startTime();" ><a href="sys-admin-apt-en.htm">dist-upgrade and Package Management</a>
			<ul class="sub-menu" id="sm12">
				<li><a href="sys-admin-apt-en.htm#apt-cook">APT-Guide Cookbook and Sources list</a></li>
				<li><a href="sys-admin-meta-en.htm#meta-pack">Meta-Package Installer</a></li>
				<li><a href="sys-admin-meta-en.htm#meta-proxy">Meta Installer and Proxies</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-install">Installing a new package</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-delete">Deleting a package</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-downgrade">Package Hold and downgrading</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-cache">Package searching with apt-cache</a></li>
				<li><a href="sys-admin-apt-en.htm#gui-pacsea">GUI Package searching</a></li>
				<li><a href="siduxcc-en.htm#hermes">sidux-hermes</a></li>
				<li><a href="sys-admin-upgrade-en.htm#live-cd-upgrade">Upgrading by Live-ISO</a></li>
				<li><a href="sys-admin-kern-upg-en.htm#kern-upgrade">Upgrading the kernel</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-upgrade">Upgrade an Installed System -  dist-upgrade</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 13 );" onmouseout="startTime();" ><a href="sys-admin-gen-en.htm">System Administration</a>
			<ul class="sub-menu" id="sm13">
				<li><a href="hd-install-en.htm#adduser">Adding a new user</a></li>
				<li><a href="home-en.htm#home-bu">Moving /home</a></li>
				<li><a href="siduxcc-en.htm#siduxcc">sidux Control Centre</a></li>
				<li><a href="sys-admin-rdiff-en.htm#rdiff">Back-Up with rdiff</a></li>
				<li><a href="sys-admin-rsync-en.htm#rsync">Back-Up with rsync</a></li>
				<li><a href="vir-rkits-en.htm#virus-rkits">Virus and Rootkit Scanners</a></li>
				<li><a href="sys-admin-gen-en.htm#start-services">Services enable/disable</a></li>
				<li><a href="sys-admin-gen-en.htm#pw-lost">Lost root passwords</a></li>
				<li><a href="sys-admin-gen-en.htm#fonts">Fonts</a></li>
				<li><a href="sys-admin-gen-en.htm#cups">CUPS</a></li>
				<li><a href="sys-admin-gen-en.htm#init">sidux runlevels - init</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#mbr-grub-boot">MBR Overwritten bootsector</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#dual-boot">Dual and Multibooting</a></li>
				<li><a href="bios-freedos-en.htm#bois-prep">Upgrading the BIOS with FreeDOS</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#boot-grub-floppy">Creating a Boot-Floppy</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#remove-grub">Removing grub from MBR</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#what-is-grub">Grub the boot manager</a></li>
			</ul>
		</li>
	</ul>
<!-- menu ends here --> </div>
<div id="main-page">
		<div class="divider" id="fromiso">
				<h2 id="top-header">Booting with "fromiso"</h2>

							<p class="highlight-2">For normal use we recommend the ext3 file system. It is the default file system for sidux and well maintained.</p>

							<p>With this cheatcode you can start from an iso out of a partition ,(ext2/3), which is much faster then from a CD (HD installations with "fromiso" only takes a fraction of time).</p>

							<p>'fromiso' is of course much faster then from the CD- /DVD-drive and keeps the drive available. As an alternative you could use virtualbox-ose or QEMU.</p>

					<h5>Requirements:</h5>

							<p>* a functioning grub (on a floppy, a HD-Installation or the Live-CD)<br />
							* a sidux ISO Image e.g.: sidux.iso and a Linux file system like ext2/3.  <span class="highlight-1">(If you rename your image to sidux.ISO instead of sidux.iso you will need to alter the commands accordingly as a unix file naming system is case sensitive.)</span></p>

					<h4 class="highlight-3">Process:</h4>

							<p>Choose a place for the iso and 2 files we need, so we get shorter names. Therefore create a base-directory: for example "/media/sdaX", (sda1 or, 2, or 5, or 6, or whatever, for example) create the directory "sidux" and copy the iso into it:</p>
<pre>$ sux
mkdir -p /media/sdaX/sidux
mv sidux.iso /media/sdaX/sidux
</pre>
							<p>Now mount the ISO image (Alternatively mc [midnight commander] can be used, as it transparently auto-mounts .iso files and lets you copy out the files needed.):</p>
										
<pre>
mount -t iso9660 -o loop,ro /media/sdaX/sidux/sidux.iso /mnt
</pre>
							<p>Now copy the vmlinuz and initrd.img files from the mounted iso image to the directory <span class="highlight-3">and the HD is YOUR known variable::This is an example only :</span></p>

<pre>
cp /mnt/boot/vmlinuz* /media/sda5/sidux/vmlinuz
cp /mnt/boot/initrd.img* /media/sda5/sidux/initrd.img
umount /mnt
</pre>
							<p>Next you have to customise grub. Therefore edit the file<span class="highlight-3"> /boot/grub/menu.lst </span> and add the following lines <span class="highlight-3"> AFTER the ### END DEBIAN AUTOMAGIC KERNELS LIST</span>: <span class="highlight-2">NOTE no wildcards on grub line for filenames allowed! </span> <span class="highlight-3">The HD is YOUR known variable::This is an example only:</span> </p>
<pre>
### ISO boot
title sidux 32bit from ISO
kernel (hd0,4)/sidux/vmlinuz boot=fll quiet vga=791 fromiso=/sidux/sidux.iso
initrd (hd0,4)/sidux/initrd.img
</pre>
							<p>With next boot you have a new menu item in grub to start the iso image. Should you upgrade your sidux.iso, vmlinuz and intird.img files with later releases, grub's menu.lst does not need to be altered.</p>
</div>

	<div class="divider" id="fromiso-persist">
		<h2>General information on fromiso with persist</h2>

				<h3>fromiso and persist on a HD</h3>

							<p>You can have a persistent live system on a writable disc by combining a fromiso setup with the persist cheatcode. The default is simply:</p>

<pre>
persist
</pre>

							<p>sidux uses aufs to enable what is known as "copy on write" over your ISO to allow you to write new files and folders and update existing ones by keeping the new files in memory. The <span class="highlight-3">persist</span> cheatcode, will store your new files on the same hard drive partition as you use to store your fromiso ISO image.</p>

							<p><span class="highlight-3">fromiso</span> gives you a live system which performs all the automatic features of the sidux live ISO. This has the benefit of doing things like automatically configuring the hardware but it also means  that it will recreate the same files each time you boot up unless you use additional codes.</p> 

							<p>Using <span class="highlight-3">persist</span> along with other sidux specific cheatcodes such as noxorgconf, nonetwork, means that it will not recreate the same files each time you boot up. </p>

							<p>Using persist also means that you can install packages from apt and have the application and any data you have saved available for you to access at next boot up.</p>

				<h3>fromiso and persist on a bootable USB Key</h3>
							<p>Perhaps the ideal use of persistence is in conjunction with the install-usb-gui tool to create your own bootable flash drive with your files and the software you need.</p>

							<p>Your files will be stored in a subfolder on your drive. This subfolder is created if it does not exist when the <span class="highlight-3">fromiso </span> and <span class="highlight-3">persist</span> cheatcodes are used together. </p>

							<p><span class="highlight-3">persist</span> on a FAT filesystem, as commonly used for dos/Windows 9x installations and usually found by default on flash devices, requires you to create a single large file to use as a loop device, you then format this file.</p>

							<p><span class="highlight-3">On USB sticks, ext2 and vfat are the recommended file systems and most likely to give better cross platform ability for data rescue when needed most, as an MS Windows&#8482; driver is available for data-swapping. Rewrites to flash type drives are contingent on the specifications of your USB stick.</span></p>

					<h6>ext2/3 file systems</h6>
							<p>With ext2/3 the full partition will be used, the current root is taken and a directory /fll is created which is used for the persist allowing the usage of all free place in the device for the persist system.</p>

					<h6>vfat file system</h6>
							<p>When vfat is used, persistance is made through a file that can be maximum 2GB  but not less than 100MB (as it would be of no use). This file should be named <span class="highlight-3">sidux-rw</span>. Assuming the disc you want to use is mounted and writable on /media/sdb1 and you want to create a 1GB file to use as your persistent drive you could use the following commands (no need for root if you can write to the file).</p>

<pre>
disc="/media/sdb1" 
size=1024 
mkdir /media/sdb1/sidux 
dd if=/dev/zero of=${disc}/sidux/sidux-rw bs=1M count=${size} &amp;&amp; echo 'y' | LANG=C /sbin/mkfs.vfat ${disc}/sidux/sidux-rw
</pre>


							<p class="highlight-2">NTFS partitions, commonly used for Windows NT/2000/XP (TM)  installations, CANNOT be used at all for persistence.</p>

	</div>
	<div class="divider" id="usb-hd">
		<h2>Installation of sidux on a USB-device</h2>

							<p>To do an installation of sidux on a USB-Stick or a USB-HD is as easy as a normal HD-Install. Just follow this simple guideline.</p>

				<h5>Two kinds of installation to USB</h5> 
							<p>1) - fromiso (to create a bootable USB from an installed system you need to have a sidux.iso)<br />
							2) - full (the full installation to a USB HD/stick behaves as normal HD installation and is done through the normal installer).</p>

				<h3>USB fromiso Installation</h3>
							<p> <span class="highlight-3">Pre format your device with ext2 or fat32 before proceeding.</span></p>

							<p>If 'install-sidux-usb-gui' is not present on your installation 'apt-get install fll-iso2usb'.</p>

							<p>The <span class="highlight-3">fromiso</span> installation is done through <span class="highlight-3">Kmenu>System>install-sidux-usb-gui</span> on a HD installed system, or clicking on <span class="highlight-3">sidux Installer Icon </span> on the ISO, and choosing <span class="highlight-3">Install to USB</span>. It is mostly directed to install 'fromiso' on the first partition the USB stick.</p>

							<p>You are given the opportunity to make language, timezone and other bootcodes choices and whether or not to activate persist via a checkbox.</p>

							<p>You now have a bootable USB stick. If you did not activate persist you are able to turn it on by adding <span class="highlight-3">persist</span> on the grubline of the grub screen, or hardcoding it into #kopt= line in the menu.lst.</p>


						<h6>Terminal example:</h6>
<pre>
fll-iso2usb -D /dev/sdb --iso /home/sidux/sidux.iso -p  -- toram lang=no tz=Pacific/Auckland
</pre>
							<p>This installs  the  iso  image  to  the  USB device <span class="highlight-3">sdb</span> with persist, toram, Norwegian language localisation and Pacific/Auckland (NZL) time on the grub default line.</p>

							<p>Your X (video card, keyboard, mouse) configuration or your network interfaces file  have not been stored, which makes it ideal to use on other computers.</p>

							<p>For more documentation including customisation options see:</p>

<pre>
$ man fll-iso2usb
</pre>


			<h3>Full installation (behaves as normal HD installation)</h3>
							<p>The recommended mininmum size of a usb stick is:<br />
							sidux "LITE" needs 1.7gig PLUS you need data space,<br />
							sidux "FULL" needs 3.5gig PLUS you need data space</p>

							<p> <span class="highlight-3">Pre format your device with ext3 and partition the USB-HD or USB-Key as you would a standard PC.</span></p>

							<p>Start the installation from the Live-ISO and choose the partition on the USB-device, where sidux is to be installed, for example <span class="highlight-3">sdbX </span>and follow the sidux installer prompts. Read <a href="hd-install-en.htm#Installation">Installing to your HD</a></p>

							<p><span class="highlight-3">To boot from your USB-HD or USB-Key 'Boot from USB' must be enabled in your BIOS.</span></p>

	</div>
	<div class="divider" id="vtbox">
		<h2>Installing sidux with VirtualBox</h2>
							<p>The Steps.</p>
						<ul>
 							<li>1. create a harddiskimage for VirtualBox</li>
 							<li>2. boot the iso with VirtualBox</li>
 							<li>3. install on the image</li>
						</ul>

				<h4>Requirements</h4>
							<p><span class="highlight-3">Recommended ram: 1 gig </span>: Ideally 512 MB for the guest and 512 MB for the host. (it can be run on less, but do not expect to have good performance).</p>

							<p><span class="highlight-3">Hard disk space:</span> While VirtualBox itself is very lean (a typical installation will only need about 30 MB of hard disk space), the virtual machines will require fairly huge files on disk to represent their own hard disk storage. So, to install MS Windows XP (TM), for example, you will need a file that will easily grow to several GB in size. To have sidux in VirtualBox you need to allocate a 5 gig image plus a swap allocation.</p>

				<h3>Installation:</h3>
						 <h6>32 bit</h6>
<pre>
apt-get update
apt-get install virtualbox-ose-qt virtualbox-ose-modules-2.6-sidux-686
</pre>
						 <h6>64 bit</h6>
<pre>
apt-get update
apt-get install virtualbox-ose-qt virtualbox-ose-modules-2.6-sidux-amd64
</pre>

							<p>Then copy and paste this line into the terminal:</p>
<pre>
sed -i "s/^\(LOAD_VBOXDRV_MODULE\=\).*/\11/" /etc/default/virtualbox-ose
</pre>
							<p>Now add your user name to vboxusers:</p>
<pre>
adduser &lt;username&gt; vboxusers 
</pre>
							<p>Next:</p>
<pre>
modprobe vboxdrv
</pre>
							<p class="highlight-3">Finally log out from the desktop and then log back in and start Virtualbox from the Menu</p>
							
			<h3>Installing sidux to the virtual machine</h3>
							<p>Use virtualbox's wizard to create a new virtual machine for sidux, then follow the instructions for a regular sidux-installation.</p>

							<p><a href="http://www.virtualbox.org/">VirtualBox has a comprehesive PDF Help, that you can download</a> </p>


	</div>
	<div class="divider" id="qemu">
		<h2>Installing sidux with QEMU</h2>

						<ul>
 							<li>1. create a harddiskimage for QEMU</li>
 							<li>2. boot the iso with QEMU</li>
 							<li>3. install on the image</li>
						</ul>

 				<h4>Creating the hard disk image</h4>

							<p>To run qemu you will probably need a hard disk image. This is a file which stores the contents of the emulated hard disk.</p>

							<p>Use the command:</p>
<pre>
qemu-img create -f qcow sidux.qcow 3G
</pre>
							<p>To create the image file named "sidux.qcow". The "3G" parameter specifies the size of the disk - in this case 3 GB. You can use suffix M for megabytes (for example "256M"). You shouldn't worry too much about the size of the disk - the qcow format compresses the image so that the empty space doesn't add up to the size of the file.</p>


				<h4>Installing the operating system</h4>

							<p>This is the first time you will need to start the emulator. <span class="highlight-3">One thing to keep in mind: when you click inside qemu window, the mouse pointer is grabbed. To release it press :</span></p>
<pre>
Ctrl+Alt
</pre>

							<p>If you need to use a bootable floppy, run Qemu with:</p>
<pre>
qemu -floppy sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
							<p>If your CD-ROM is bootable, run Qemu with:</p>
<pre>
qemu -cdrom sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
							<p>Now install sidux as if you were going to install it on a real HD</p>


				<h4>Running the system</h4>

							<p>To run the system simply type:</p>
<pre>
qemu [hd_image]
</pre>
							<p>A good idea is to use overlay images. This way you can create hard disk image once and tell Qemu to store changes in external file. You get rid of all the instability, because it is so easy to revert to previous system state.</p>

							<p>To create an overlay image, type:</p>
<pre>
qemu-img create -b [[base''image]] -f qcow [[overlay''image]]
</pre>
							<p>Substitute the hard disk image for base_image (in our case sidux.qcow). After that you can run qemu with:</p>
<pre>
qemu [overlay_image]
</pre>
							<p>The original image will be left untouched. One hitch, the base image cannot be renamed or moved, the overlay remembers the base's full path.</p>


				<h4>Using any real partition as the single primary partition of a hard disk image</h4>

							<p>Sometimes, you may wish to use one of your system partition from within qemu (for instance, if you wish booting both your real machine or qemu using a given partition as root). You can do this using software RAID in linear mode (you need the linear.ko kernel driver) and a loopback device: the trick is to dynamically prepend a master boot record (MBR) to the real partition you wish to embed in a qemu raw disk image.</p>

							<p>Suppose you have a plain, unmounted /dev/sdaN partition with some filesystem on it you wish to make part of a qemu disk image. First, you create some small file to hold the MBR:</p>
<pre>
dd if=/dev/zero of=/path/to/mbr count=32
</pre>
							<p>Here, a 16 KB (32 * 512 bytes) file is created. It is important not to make it too small (even if the MBR only needs a single 512 bytes block), since the smaller it will be, the smaller the chunk size of the software RAID device will have to be, which could have an impact on performance. Then, you setup a loopback device to the MBR file:</p>
<pre>
losetup -f /path/to/mbr
</pre>
							<p>Let's assume the resulting device is /dev/loop0, because we wouldn't already have been using other loopbacks. Next step is to create the "merged" MBR + /dev/sdaN disk image using software RAID:</p>
<pre>
 modprobe linear
 mdadm --build --verbose /dev/md0 --chunk=16 --level=linear --raid-devices=2 /dev/loop0 /dev/sdaN
</pre>
							<p>The resulting /dev/md0 is what you will use as a qemu raw disk image (don't forget to set the permissions so that the emulator can access it). The last (and somewhat tricky) step is to set the disk configuration (disk geometry and partitions table) so that the primary partition start point in the MBR matches the one of /dev/sdaN inside /dev/md0 (an offset of exactly 16 * 512 = 16384 bytes in this example). Do this using fdisk on the host machine, not in the emulator: the default raw disc detection routine from qemu often results in non kilobyte-roundable offsets (such as 31.5 KB, as in the previous section) that cannot be managed by the software RAID code. Hence, from the the host:</p>
<pre>
 fdisk /dev/md0
</pre>
							<p>There, create a single primary partition corresponding to /dev/sdaN, and play with the 's'ector command from the 'x'pert menu until the first cylinder (where the first partition starts), matches to the size of the MBR. Finally, 'w'rite the result to the file: you are done. You now have a partition you can mount directly from your host, as well as part of a qemu disk image:</p>
<pre>
 qemu -hdc /dev/md0 [...]
</pre>
							<p>You can of course safely set any bootloader on this disk image using qemu, provided the original /boot/sdaN partition contains the necessary tools.</p>



				<h4>Using the QEMU Accelerator Module</h4>

							<p>The developers of qemu have created an optional kernel module to accelerate qemu to sometimes near native levels. This should be loaded with the option</p>
<pre>
major=0
</pre>
							<p>to automate the creation of the required /dev/kqemu device. The following command</p>
<pre>
echo "options kqemu major=0" >> /etc/modules
</pre>
							<p>This will amend modprobe.conf to ensure that the module option is added every time the module is loaded.</p>

<pre>
qemu [...] -kernel-kqemu
</pre>
							<p>This enables full virtualization and thus improves speed considerably.</p>

				<h4>To activate qemu:</h4>
<pre>
qemu -cdrom /tmp/pkg/sidux-debug.iso -net nic -net user -m 512
</pre>
							<p><a href="http://bellard.org/qemu/qemu-doc.html">The official documentation of the QEMU Project </a> </p>

							<p><a href="http://wiki.archlinux.org/index.php/Qemu">Some content for QEMU for the sidux-manual was accessed off this site under GNU Free Documentation License 1.2 and modified for the sidux-manual</a> </p>

		
	</div>
	<div id="rev">Page last revised 24/04/2009 0300hrs UTC</div>

</div>
</body>
</html>
