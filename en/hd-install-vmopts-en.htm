<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<title>sidux Manuals - VM Installation Options</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<style type="text/css" media="all">@import url("../lib/css-js/content.css");</style>
        <style type="text/css" media="all">@import url("../lib/css-js/menu.css");</style>
        <style type="text/css" media="print">@import url("../lib/css-js/print.css");</style>
        <link rel ="shortcut icon" href="../lib/favicon/manual.ico" />
        <script type="text/javascript" src="../lib/css-js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-6_override.css">
        <![endif]-->
</head>
<body>
<!-- Last translation revision by bluewater 22/04/2009 1350hrs UTC -->
<div id="menu"> <!-- menu starts here en lang maintainer bluewater-->
<!--sidux-manual Operating System Manual menu-version-02.05.2010.04.10 -->
<!-- menu last updated by bluewater 2010.04.10 1300 hrs UTC -->
	<div id="menu-header">
	      <a href="http://sidux.com/"><img src="../lib/logos/manual-sidux-logo.png" title="To sidux.com forums and wiki" alt="sidux.com logo" /></a>
	</div>
	<ul id="top-list">
		<li><a href="manual-search-en.htm#search-on"> <img src="../lib/logos/manual-search-22x22.png" title="Search Manual" alt="Search" />Search online - offline</a> </li>
		<li><a href="http://manual.sidux.com/meta-manual">Community Software Selections</a></li>
	</ul>
	<div id="flags-2">
			<a href="../flag-index.html"><img src="../lib/logos/sidux-lang-100x64.png" title="Choose another language" alt="lang-switch" /></a>
	</div>
	<ul>
		<li  onmouseover="showHide( 1 );" onmouseout="startTime();" ><a href="welcome-en.htm">sidux OS Manual</a>
			<ul class="sub-menu" id="sm1">
				<li><a href="welcome-en.htm#welcome-gen">sidux OS Manual</a></li>
				<li><a href="welcome-en.htm#how-to">How to use this manual</a></li>
				<li><a href="welcome-en.htm#table-contents">Table of Contents</a></li>
				<li><a href="help-en.htm#help-gen">Where to get Help</a></li>
				<li><a href="help-en.htm#paste">IRC !paste</a></li>
				<li><a href="credits-en.htm#cred-team">Credits</a></li>
				<li><a href="wel-quickstart-en.htm#welcome-quick">sidux Quick Start Guide</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 2 );" onmouseout="startTime();" ><a href="cd-dl-burning-en.htm">ISO Content, Releases, Download Mirrors and Burning</a>
			<ul class="sub-menu" id="sm2">
				<li><a href="cd-content-en.htm#cd-content">ISO Content and system requirements</a></li>
				<li><a href="sys-admin-release-en.htm#rolling">Release Notes</a></li>
				<li><a href="cd-dl-burning-en.htm#download-sidux">sidux Mirrors, Downloading and Burning</a></li>
				<li><a href="cd-dl-burning-en.htm#md5">md5 Checksum</a></li>
				<li><a href="cd-dl-burning-en.htm#burn-nero">Burning in Windows</a></li>
				<li><a href="cd-dl-burning-en.htm#burn-linux">Burning in Linux</a></li>
				<li><a href="cd-no-gui-burn-en.htm#burning-no-gui">burniso script</a></li>
				<li><a href="cd-no-gui-burn-en.htm#burn-no-gui-gen">Burning without a GUI</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 3 );" onmouseout="startTime();" ><a href="live-mode-en.htm">Live Mode</a>
			<ul class="sub-menu" id="sm3">
				<li><a href="live-mode-en.htm#rootpw">Root-password on the sidux-Live ISO</a></li>
				<li><a href="live-mode-en.htm#live-cd-installsoft">Installing software whilst on a Live-ISO</a></li>
				<li><a href="live-mode-en.htm#ntfs-3g">Writing on NTFS-partitions with ntfs-3g</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 4 );" onmouseout="startTime();" ><a href="term-konsole-en.htm">The Terminal/Konsole</a>
			<ul class="sub-menu" id="sm4">
				<li><a href="term-konsole-en.htm#sux"> sux / sudo</a></li>
				<li><a href="term-konsole-en.htm#term-kon"> Terminal/Konsole</a></li>
				<li><a href="term-konsole-en.htm#cli-help">Command Line Help</a></li>
				<li><a href="help-en.htm#init3-tools">Tools to know in text mode (tty) - init 3</a></li>
				<li><a href="term-konsole-en.htm#term-cmds">Linux Terminal Commands List</a></li>
				<li><a href="term-konsole-en.htm#shell-scripts">Installing Scripts.sh</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 5 );" onmouseout="startTime();" ><a href="cheatcodes-en.htm">CheatCodes</a>
			<ul class="sub-menu" id="sm5">
				<li><a href="cheatcodes-en.htm#cheatcodes">sidux specific Live-ISO Cheatcodes</a></li>
				<li><a href="cheatcodes-en.htm#cheatcodes-linux">Linux generic Cheatcodes</a></li>
				<li><a href="cheatcodes-vga-en.htm#vga">VGA Codes</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 6 );" onmouseout="startTime();" ><a href="part-gparted-en.htm">Partitioning Your Hard Drive</a>
			<ul class="sub-menu" id="sm6">
				<li><a href="part-gparted-en.htm#partition">Partitioning your HD using GParted</a></li>
				<li><a href="part-gparted-en.htm#ntfs">NTFS partition Resizing using GParted</a></li>
				<li><a href="part-uuid-en.htm#uuid">UUID, Partition Labelling and fstab</a></li>
				<li><a href="part-cfdisk-en.htm#disknames">Disk Naming in brief</a></li>
				<li><a href="part-cfdisk-en.htm#partition">Partitioning  your HD using cfdisk</a></li>
				<li><a href="part-cfdisk-en.htm#formating">Formatting after partitioning with cfdisk</a></li>
				<li><a href="part-size-examp-en.htm#part-example">Partition Size Examples</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 7 );" onmouseout="startTime();" ><a href="hd-install-en.htm">Installation options</a>
			<ul class="sub-menu" id="sm7">
				<li><a href="hd-install-en.htm#Inst-prep">Install Preparation</a></li>
				<li><a href="hd-install-en.htm#Installation">Installing to your HD</a></li>
				<li><a href="hd-install-en.htm#first-hd-boot">First Boot Up</a></li>
				 <li><a href="hd-install-opts-en.htm#fromiso">Booting fromiso - Overview</a></li>
				<li><a href="hd-install-opts-en.htm#fromiso-grub-leg">Booting 'fromiso' with grub-legacy</a></li>
				<li><a href="hd-install-opts-en.htm#grub2-fromiso">Booting 'fromiso' with Grub 2</a></li>
				<li><a href="hd-install-opts-en.htm#fromiso-persist">fromiso and persist</a></li>
				<li><a href="hd-install-opts-en.htm#usb-hd">Installing on a USB-HD - sidux specific - sidux-on-stick</a></li>
				<li><a href="hd-ins-opts-oos-en.htm#raw-usb">Writing sidux to a USB/SSD stick with any Linux, MS Windows or Mac OS X system</a></li>
				<li><a href="nbdboot-en.htm#nbd1">Booting sidux over a network</a></li>
				<li><a href="hd-install-vmopts-en.htm#vm">Virtual Machine installation options</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 8 );" onmouseout="startTime();" ><a href="hw-dev-hw-dri-en.htm">Graphic Cards, Monitors, Xorg &amp; Miscellaneous Drivers</a>
			<ul class="sub-menu" id="sm8">
				<li><a href="hw-dev-hw-dri-en.htm#hd-ntfs3g">Writing on NTFS-partitions with ntfs-3g</a></li>
				<li><a href="hw-dev-mon-en.htm#mon-res">Screen Resolution and Monitors</a></li>
				<li><a href="hw-dev-mon-en.htm#xrandr">Dual Monitors and xrandr</a></li>
				<li><a href="hw-dev-mon-en.htm#mon-binary">Dual Monitors (using binaries)</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free-3d">Binary, non-free drivers for Nvidia &amp; xorg.conf</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free-3d-2">non-free drivers for ATI, Radeon and others</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free-firmware">Hardware needing non-free firmware drivers</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#non-free">Adding non-free to Sources List</a></li>
				<li><a href="hw-dev-hw-dri-en.htm#native-nv-ati">FOSS xorg drivers for nVidia, ATI, Radeon, Intel &amp; xorg.conf</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 9 );" onmouseout="startTime();" ><a href="wm-kde-en.htm">Window Managers</a>
			<ul class="sub-menu" id="sm9">
				<li><a href="wm-xfce-en.htm#xfce-notes">Useful Xfce extras</a></li>
				<li><a href="wm-kde-en.htm#install-add">Useful extra KDE Apps</a></li>
				<li><a href="wm-kde-en.htm#desk-freeze">Desktop Freezes</a></li>
				<li><a href="wm-kde-en.htm#kde-login">Cant login in KDE</a></li>
				<li><a href="wm-kde-en.htm#ch-th">Changing Themes</a></li>
				<li><a href="wm-kde-en.htm#dm">Display Managers - dm</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 10 );" onmouseout="startTime();" ><a href="lamp-apache-en.htm">sidux LAMP Stack</a>
			<ul class="sub-menu" id="sm10">
				<li><a href="lamp-apache-en.htm#serv-apache">sidux LAMP Stack</a></li>
				<li><a href="lamp-apache-en.htm#serv-ftp">FTP Clients</a></li>
				<li><a href="lamp-apache-en.htm#serv-sec">Security Protocols</a></li>
				<li><a href="lamp-apache-en.htm#serv-ssl">SSL</a></li>
				<li><a href="lamp-sql-en.htm#serv-mysql">MySQL Setup</a></li>
				<li><a href="lamp-ppp-en.htm#serv-php">PHP in Apache</a></li>
				<li><a href="ntp-server-en.htm#ntp-server">Timeserver Setup</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 11 );" onmouseout="startTime();" ><a href="internet-connecting-en.htm">Internet and Networking</a>
			<ul class="sub-menu" id="sm11">
				<li><a href="tor-privoxy-en.htm#tor">Tor</a></li>
				<li><a href="tor-privoxy-en.htm#privoxy">Privoxy</a></li>
				<li><a href="internet-connecting-en.htm#firewalls">Firewalls</a></li>
				<li><a href="samba-en.htm#configure">Configuring SAMBA (Windows)</a></li>
				<li><a href="samba-en.htm#setup">Samba-Server Setup</a></li>
				<li><a href="ssh-en.htm#ssh-fs">SSH Remote Mounting</a></li>
				<li><a href="ssh-en.htm#ssh-x">X Window Apps via SSH</a></li>
				<li><a href="ssh-en.htm#ssh-f">GUI SSH with Konqueror</a></li>
				<li><a href="ssh-en.htm#ssh-w">SSH X-Forwarding from Windows-PC</a></li>
				<li><a href="ssh-en.htm#ssh">SSH and Security</a></li>
				<li><a href="internet-connecting-en.htm#dial-mod">56k Modems</a></li>
				<li><a href="inet-wpagui-en.htm#wpa-roaming-gui">WiFi - WPA_GUI</a></li>
				<li><a href="inet-setup-en.htm#net-set1">WiFi - Setting up for WiFi Roaming</a></li>
				<li><a href="internet-connecting-wpa-en.htm#wpa">WiFi - wpasupplicant</a></li>
				<li><a href="inet-ifplug-en.htm#hotswitch">Network switching between WiFi and Cable</a></li>
				<li><a href="internet-connecting-en.htm#netcardconfig">Getting Online - Ceni</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 12 );" onmouseout="startTime();" ><a href="sys-admin-apt-en.htm">dist-upgrade and Package Management</a>
			<ul class="sub-menu" id="sm12">
				<li><a href="sys-admin-apt-en.htm#apt-cook">APT-Guide Cookbook and Sources list</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-install">Installing a new package</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-delete">Deleting a package</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-downgrade">Package Hold and downgrading</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-cache">Package searching with apt-cache</a></li>
				<li><a href="sys-admin-apt-en.htm#gui-pacsea">GUI Package searching</a></li>
				<li><a href="sys-admin-upgrade-en.htm#live-cd-upgrade">Upgrading by Live-ISO</a></li>
				<li><a href="sys-admin-apt-locarmirr-en.htm#approx">dist-upgrade of multiple PCs on a LAN</a></li>
				<li><a href="sys-admin-kern-upg-en.htm#kern-upgrade">Upgrading the kernel</a></li>
				<li><a href="sys-admin-kern-upg-en.htm#dmakms">Installing kernel modules dynamically with dmakms</a></li>
				<li><a href="sys-admin-apt-en.htm#apt-upgrade">Upgrade an Installed System -  dist-upgrade - Overview</a></li>
				<li><a href="sys-admin-apt-en.htm#du-st">Upgrade an Installed System -  dist-upgrade - The Steps</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 13 );" onmouseout="startTime();" ><a href="sys-admin-gen-en.htm">System Administration</a>
			<ul class="sub-menu" id="sm13">
				<li><a href="hd-install-en.htm#adduser">Adding a new user</a></li>
				<li><a href="home-en.htm#home-bu">Moving /home</a></li>
				<li><a href="sys-admin-rdiff-en.htm#rdiff">Back-Up with rdiff</a></li>
				<li><a href="sys-admin-rsync-en.htm#rsync">Back-Up with rsync</a></li>
				<li><a href="vir-rkits-en.htm#virus-rkits">Virus and Rootkit Scanners</a></li>
				<li><a href="sys-admin-gen-en.htm#start-services">Services enable/disable</a></li>
				<li><a href="sys-admin-gen-en.htm#pw-lost">Lost root passwords</a></li>
				<li><a href="sys-admin-gen-en.htm#fonts">Fonts</a></li>
				<li><a href="sys-admin-gen-en.htm#cups">CUPS - Printing System</a></li>
				<li><a href="sys-admin-gen-en.htm#sound">Sound Mixers</a></li>
				<li><a href="sys-admin-gen-en.htm#init">sidux runlevels - init</a></li>
				<li><a href="bios-freedos-en.htm#bois-prep">Upgrading the BIOS with FreeDOS</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#boot-grub-floppy">Creating a Boot-Floppy</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#mbr-grub-boot">Grub1 - MBR Overwritten bootsector</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#dual-boot">Grub1 Dual and Multibooting</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#what-is-grub">Grub the boot manager</a></li>
				<li><a href="sys-admin-grub-bootman2-en.htm#remove-grub">Removing grub from MBR</a></li>
				<li><a href="sys-admin-grub2-en.htm#mbr-over-grub2">Grub2 - MBR Overwritten</a></li>
				<li><a href="sys-admin-grub2-en.htm#multi-os">Grub2 - Dual and Multibooting</a></li>
				<li><a href="sys-admin-grub2-en.htm#grub1-grub2">Grub2 -Upgrading from Grub1</a></li>
				<li><a href="sys-admin-grub2-en.htm#grub2">Grub2 - Overview</a></li>
			</ul>
		</li>
	</ul>
<!-- menu ends here --> </div>
<div id="main-page">
		<div class="divider" id="vmopts">
				<h2 id="top-header">Virtual Machine options</h2>

						<ul>
							<li><a href="hd-install-vmopts-en.htm#kvm">KVM for Intel VT or AMD-V</a></li>
							<li><a href="hd-install-vmopts-en.htm#vbox">Virtualbox</a></li>
							<li><a href="hd-install-vmopts-en.htm#qemu">QEMU</a></li>

						</ul>
		      </div>
		      <div class="divider" id="kvm">
				<h2>Booting and installing sidux to a KVM Virtual Machine</h2>
							<p>KVM is full virtualisation solution for Linux on x86 hardware containing virtualisation extensions (Intel VT or AMD-V).</p>

				      <h3>Prerequisites</h3>

							<p>To ascertain whether your hardware supports KVM, ensure that KVM is enabled in the BIOS (in some cases on an Intel VT or AMD-V system it may not evident as to where the switch is, therefore assume that it is in a KVM state). The way to check is in a console run:</p>
<pre>
cat /proc/cpuinfo | egrep --color=always 'vmx|smx'
</pre>
							<p>If you see <span class="highlight-3">smx</span> or <span class="highlight-3">vmx</span> in the cpu flags field, your system supports KVM. (Otherwise go back to the BIOS if you believe it is supported and check again, else search the internet as to where in the BIOS menus KVM 'enable' could be hiding).</p>

							<p>Should your BIOS not support KVM refer to <a href="hd-install-vmopts-en.htm#vbox">Virtualbox</a>
							 or <a href="hd-install-vmopts-en.htm#qemu">QEMU</a></p>

							<p>To install and run KVM, firstly ensure that Virtualbox modules are not loaded, (--purge them is the best option), then depending on your chipset:</p>

							<p>For <span class="highlight-3">vmx</span>:</p>
<pre>
apt-get install qemu-kvm
modprobe kvm_intel
</pre>
							<p>For <span class="highlight-3">smx</span>:</p>
<pre>
apt-get install qemu-kvm
modprobe kvm_amd
</pre>
							 <p>Another option is reboot as the qemu-kvm initscripts will take care of loading the modules.</p>

					  <h4>Using KVM to boot a sidux-*.iso</h4>

							<p><span class="highlight-2">As user:</span></p>
<pre>
$ kvm -net nic,model=virtio -net user -soundhw ac97 -m 512 -monitor stdio -cdrom &lt;sidux.iso&gt;
</pre>

				<h5>Installing a sidux-*.iso to a KVM image</h5>
							<p>First create a hard disk image, (this image will be minimal and only grow as required due to qcow2 compression ratios):</p>
<pre>
$ qemu-img create -f qcow2 sidux-20xx-*-.img 12G
</pre>

							<p>Boot the sidux-*.iso with the following parameters to enable KVM to recognise that there is an QEMU hard disk image available:</p>

<pre>
$ kvm -net nic,model=virtio -net user -soundhw ac97 -m 512 -monitor stdio -cdrom &lt;/path/to/sidux.iso&gt; -boot d &lt;/path/to/sidux-20xx-*-.img&gt;
</pre>

							<p>Once the cdrom has booted up click on the sidux installer icon to activate the installer, (or use the menu), click on the Partitioning tab and you should see on the left hand side a box that has a disk ready for partitioning and formatting, most likely noted as <span class="highlight-3"> /dev/sda</span>. Underneath that are the options for partitioning, choose gparted.</p>

	<div class="screenshot"><img src="../lib/images-common/images-vm/kvm-gparted02.png" title="gparted kvm hard disk naming" alt="gparted kvm hard disk naming" /></div>
	<div class="spacer02"></div>

							<p>In the Gparted menu you can confirm that Gparted sees the image with <span class="highlight-3">View>Device Information</span> which should state it is a <span class="highlight-3">ATA QEMU Harddisk</span> and most likely noted as <span class="highlight-3"> /dev/sda</span>,(in this example), as this will be crucial when moving back to the installer and choosing where to put Grub, as it needs to go to <span class="highlight-3"> /dev/sda</span>.</p>

							<p>Next, in the <span class="highlight-3">Partition</span> menu choose <span class="highlight-3"> Device>Create Partiton Table</span> and create the partition table. </p>

							<p>Then format the partition table with ext4 and also include a swap of 2 gig. The formatting will take time so be patient.</p>

							<p>After formatting has completed, click OK to be returned to the installer and proceed as if you are performing a standard install, (again, be patient). <span class="highlight-2">Note: Install the Grub to /dev/sda</span>.</p>

							<p>You now have a sidux-*-VM ready for use:</p>

<pre>
$ kvm -net nic,model=virtio -net user -soundhw ac97 -m 512 -monitor stdio -drive if=virtio,boot=on,file=&lt;absolute/path/to/sidux-20xx-*.img&gt;
</pre>

							<p>If the guest does not support virtio, or you do not specify an absolute path,  use:</p>
<pre>
$ kvm -net nic,model=virtio -net user -soundhw ac97 -m 512 -monitor stdio -hda &lt;/path/to/sidux-20xx-*.img&gt;
</pre>
							<p>See also:</p>
<pre>
$ man kvm
</pre>
				<h5>Managing your KVM virtual machine installations</h5>
<pre>
apt-get install aqemu
</pre>
							<p>When using AQEMU ensure that you choose the KVM mode from the drop down box for 'Emulator Type' in the 'General' tab. (Documentation for AQEMU is basically non existent, therefore a few 'trials by error' will be required to figure out the easy to use GUI, however a good start is to use first use the 'VM' menu followed by the 'General' tab.</p>

	</div>
	<div class="divider" id="vbox">
		<h2>Booting and installing sidux to a VirtualBox Virtual Machine</h2>
							<p>The Steps.</p>
						<ul>
 							<li>1. create a harddiskimage for VirtualBox</li>
 							<li>2. boot the iso with VirtualBox</li>
 							<li>3. install on the image</li>
						</ul>

				<h4>Requirements</h4>
							<p><span class="highlight-3">Recommended ram: 1 gig </span>: Ideally 512 MB for the guest and 512 MB for the host. (it can be run on less, but do not expect to have good performance).</p>

							<p><span class="highlight-3">Hard disk space:</span> While VirtualBox itself is very lean (a typical installation will only need about 30 MB of hard disk space), the virtual machines will require fairly huge files on disk to represent their own hard disk storage. So, to install MS Windows XP (TM), for example, you will need a file that will easily grow to several GB in size. To have sidux in VirtualBox you need to allocate a 5 gig image plus a swap allocation.</p>

				<h3>Installation:</h3>

<pre>
apt-get update
apt-get install virtualbox-ose-qt virtualbox-ose-source dmakms module-assistant
</pre>
							<p>Then prepare the module:</p>
<pre>
m-a prepare
m-a a-i virtualbox-ose-source
</pre>
							<p>Then activate Dynamic Module-Assistant Kernel Module Support for virtualbox, so that the next time the Linux kernel is updated a virtualbox module is prepared for it too, without manual intervention. To do that, add <span class="highlight-3">virtualbox-ose-source</span> to the <span class="highlight-3">/etc/default/dmakms </span>configuration file. </p>
<pre>
mcedit /etc/default/dmakms
virtualbox-ose-source
</pre>

							<p>Then reboot the computer.</p>

							<p><a href="sys-admin-kern-upg-en.htm#dmakms">This is essential reading on dmakms</a></p>

			<h3>Installing sidux to the virtual machine</h3>
							<p>Use virtualbox's wizard to create a new virtual machine for sidux, then follow the instructions for a regular sidux-installation.</p>

							<p><a href="http://www.virtualbox.org/">VirtualBox has a comprehesive PDF Help, that you can download</a> </p>


	</div>
	<div class="divider" id="qemu">
		<h2>Booting and installing sidux to a QEMU Virtual Machine</h2>

						<ul>
 							<li>1. create a harddiskimage for QEMU</li>
 							<li>2. boot the iso with QEMU</li>
 							<li>3. install on the image</li>
						</ul>

							<p>A QT GUI tool is available to help configure QEMU:</p>
<pre>
apt-get install qtemu
</pre>

 				<h4>Creating the hard disk image</h4>

							<p>To run qemu you will probably need a hard disk image. This is a file which stores the contents of the emulated hard disk.</p>

							<p>Use the command:</p>
<pre>
qemu-img create -f qcow sidux.qcow 3G
</pre>
							<p>To create the image file named "sidux.qcow". The "3G" parameter specifies the size of the disk - in this case 3 GB. You can use suffix M for megabytes (for example "256M"). You shouldn't worry too much about the size of the disk - the qcow format compresses the image so that the empty space doesn't add up to the size of the file.</p>


				<h4>Installing the operating system</h4>

							<p>This is the first time you will need to start the emulator. <span class="highlight-3">One thing to keep in mind: when you click inside qemu window, the mouse pointer is grabbed. To release it press :</span></p>
<pre>
Ctrl+Alt
</pre>

							<p>If you need to use a bootable floppy, run Qemu with:</p>
<pre>
qemu -floppy sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
							<p>If your CD-ROM is bootable, run Qemu with:</p>
<pre>
qemu -cdrom sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
							<p>Now install sidux as if you were going to install it on a real HD</p>


				<h4>Running the system</h4>

							<p>To run the system simply type:</p>
<pre>
qemu [hd_image]
</pre>
							<p>A good idea is to use overlay images. This way you can create hard disk image once and tell Qemu to store changes in external file. You get rid of all the instability, because it is so easy to revert to previous system state.</p>

							<p>To create an overlay image, type:</p>
<pre>
qemu-img create -b [[base''image]] -f qcow [[overlay''image]]
</pre>
							<p>Substitute the hard disk image for base_image (in our case sidux.qcow). After that you can run qemu with:</p>
<pre>
qemu [overlay_image]
</pre>
							<p>The original image will be left untouched. One hitch, the base image cannot be renamed or moved, the overlay remembers the base's full path.</p>


				<h4>Using any real partition as the single primary partition of a hard disk image</h4>

							<p>Sometimes, you may wish to use one of your system partition from within qemu (for instance, if you wish booting both your real machine or qemu using a given partition as root). You can do this using software RAID in linear mode (you need the linear.ko kernel driver) and a loopback device: the trick is to dynamically prepend a master boot record (MBR) to the real partition you wish to embed in a qemu raw disk image.</p>

							<p>Suppose you have a plain, unmounted /dev/sdaN partition with some filesystem on it you wish to make part of a qemu disk image. First, you create some small file to hold the MBR:</p>
<pre>
dd if=/dev/zero of=/path/to/mbr count=32
</pre>
							<p>Here, a 16 KB (32 * 512 bytes) file is created. It is important not to make it too small (even if the MBR only needs a single 512 bytes block), since the smaller it will be, the smaller the chunk size of the software RAID device will have to be, which could have an impact on performance. Then, you setup a loopback device to the MBR file:</p>
<pre>
losetup -f /path/to/mbr
</pre>
							<p>Let's assume the resulting device is /dev/loop0, because we wouldn't already have been using other loopbacks. Next step is to create the "merged" MBR + /dev/sdaN disk image using software RAID:</p>
<pre>
 modprobe linear
 mdadm --build --verbose /dev/md0 --chunk=16 --level=linear --raid-devices=2 /dev/loop0 /dev/sdaN
</pre>
							<p>The resulting /dev/md0 is what you will use as a qemu raw disk image (don't forget to set the permissions so that the emulator can access it). The last (and somewhat tricky) step is to set the disk configuration (disk geometry and partitions table) so that the primary partition start point in the MBR matches the one of /dev/sdaN inside /dev/md0 (an offset of exactly 16 * 512 = 16384 bytes in this example). Do this using fdisk on the host machine, not in the emulator: the default raw disc detection routine from qemu often results in non kilobyte-roundable offsets (such as 31.5 KB, as in the previous section) that cannot be managed by the software RAID code. Hence, from the the host:</p>
<pre>
 fdisk /dev/md0
</pre>
							<p>There, create a single primary partition corresponding to /dev/sdaN, and play with the 's'ector command from the 'x'pert menu until the first cylinder (where the first partition starts), matches to the size of the MBR. Finally, 'w'rite the result to the file: you are done. You now have a partition you can mount directly from your host, as well as part of a qemu disk image:</p>
<pre>
 qemu -hdc /dev/md0 [...]
</pre>
							<p>You can of course safely set any bootloader on this disk image using qemu, provided the original /boot/sdaN partition contains the necessary tools.</p>



				<h4>Using the QEMU Accelerator Module</h4>

							<p>The developers of qemu have created an optional kernel module to accelerate qemu to sometimes near native levels. This should be loaded with the option</p>
<pre>
major=0
</pre>
							<p>to automate the creation of the required /dev/kqemu device. The following command</p>
<pre>
echo "options kqemu major=0" >> /etc/modules
</pre>
							<p>This will amend modprobe.conf to ensure that the module option is added every time the module is loaded.</p>

<pre>
qemu [...] -kernel-kqemu
</pre>
							<p>This enables full virtualization and thus improves speed considerably.</p>

				<h4>To activate qemu:</h4>
<pre>
qemu -cdrom /tmp/pkg/sidux-debug.iso -net nic -net user -m 512
</pre>
							<p><a href="http://www.nongnu.org/qemu/user-doc.html">The official documentation of the QEMU Project </a> </p>

							<p><a href="http://wiki.archlinux.org/index.php/Qemu">Some content for QEMU for the sidux-manual was accessed off this site under GNU Free Documentation License 1.2 and modified for the sidux-manual</a> </p>


	</div>
	<div id="rev">Page last revised 13/04/2010 1450 UTC</div>

</div>
</body>
</html>
