<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="ja">
<head>
	<title>sidux Manuals - Other Installation Options</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<style type="text/css" media="all">@import url("../lib/css-js/content.css");</style>
        <style type="text/css" media="all">@import url("../lib/css-js/menu.css");</style>
        <style type="text/css" media="print">@import url("../lib/css-js/print.css");</style>
        <link rel ="shortcut icon" href="../lib/favicon/manual.ico" />
        <script type="text/javascript" src="../lib/css-js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-6_override.css">
        <![endif]-->
</head>
<body>
<!-- Last translation revision by muchan 17/Sep/2009 1130 UTC -->
<div id="menu"><!-- menu starts here ja lang maintainer muchan-->
<!--sidux-manual Operating System Manual menu-version-02.04.2010.02.21 -->
<!-- menu last updated by bluewater 2010.02.21 0430 hrs UTC -->
	<div id="menu-header">
	      <a href="http://sidux.com/"><img src="../lib/logos/manual-sidux-logo.png" title="To sidux.com, Forum and Wiki" alt="logo" /></a>
	</div>
	<ul id="top-list">
		<li><a href="manual-search-ja.htm#search-on"><img src="../lib/logos/manual-search-22x22.png" title="Search Manual" alt="Search" /> サーチ Online Offline</a> </li>
		<li><a href="http://manual.sidux.com/meta-manual">Community Software Selections</a></li>
	</ul>
	<div id="flags-2">
			<a href="../flag-index.html"><img src="../lib/logos/sidux-lang-100x64.png" title="Choose another language" alt="lang-switch" /></a>
	</div>
	<ul>
		<li  onmouseover="showHide( 1 );" onmouseout="startTime();" ><a href="welcome-ja.htm">sidux OSマニュアル</a>
			<ul class="sub-menu" id="sm1">
				<li><a href="welcome-ja.htm#welcome-gen">sidux OSマニュアル</a></li>
				<li><a href="welcome-ja.htm#how-to">このマニュアルの使い方</a></li>
				<li><a href="welcome-ja.htm#table-contents">内容一覧</a></li>
				<li><a href="help-ja.htm#help-gen">困った時は...</a></li>
				<li><a href="help-ja.htm#paste">IRC !paste</a></li>
				<li><a href="credits-ja.htm#cred-team">siduxチーム</a></li>
				<li><a href="wel-quickstart-ja.htm#welcome-quick">sidux Quick Start Guide</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 2 );" onmouseout="startTime();" ><a href="cd-dl-burning-ja.htm">ISO の内容、リリース、ダウンロードミラーとCDの焼き付け</a>
			<ul class="sub-menu" id="sm2">
				<li><a href="cd-content-ja.htm#cd-content">ISO の内容と最小限必要な仕様</a></li>
				<li><a href="sys-admin-release-ja.htm#rolling">ローリングノート</a></li>
				<li><a href="cd-dl-burning-ja.htm#download-sidux">siduxのミラー, ダウンロードとISOの作成</a></li>
				<li><a href="cd-dl-burning-ja.htm#md5">md5のチェックサム</a></li>
				<li><a href="cd-dl-burning-ja.htm#burn-nero">WindowsでISOを焼くには</a></li>
				<li><a href="cd-dl-burning-ja.htm#burn-linux">LinuxでISOを焼くには</a></li>
				<li><a href="cd-no-gui-burn-ja.htm#burning-no-gui">burniso スクリプト</a></li>
				<li><a href="cd-no-gui-burn-ja.htm#burn-no-gui-gen">GUIなしでISOを焼くには</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 3 );" onmouseout="startTime();" ><a href="live-mode-ja.htm">Live Mode</a>
			<ul class="sub-menu" id="sm3">
				<li><a href="live-mode-ja.htm#rootpw">sidux-LiveISOのRootパスワード</a></li>
				<li><a href="live-mode-ja.htm#live-cd-installsoft">Live-ISO作動中にソフトをインストール</a></li>
				<li><a href="live-mode-ja.htm#ntfs-3g">ntfs-3gを使ってNTFSパーティションに書く</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 4 );" onmouseout="startTime();" ><a href="term-konsole-ja.htm">ターミナル/コンソール</a>
			<ul class="sub-menu" id="sm4">
				<li><a href="term-konsole-ja.htm#sux">  sux / sudo</a></li>
				<li><a href="term-konsole-ja.htm#term-kon"> ターミナル/コンソール</a></li>
				<li><a href="term-konsole-ja.htm#cli-help">コマンドラインヘルプCommand Line Help</a></li>
				<li><a href="help-ja.htm#init3-tools">テキストモード(tty)で便利な道具 - init 3</a></li>
				<li><a href="term-konsole-ja.htm#term-cmds">Linuxターミナルのコマンド一覧</a></li>
				<li><a href="term-konsole-ja.htm#shell-scripts">Scripts.shのインストール</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 5 );" onmouseout="startTime();" ><a href="cheatcodes-ja.htm">チートコード</a>
			<ul class="sub-menu" id="sm5">
				<li><a href="cheatcodes-ja.htm#cheatcodes">siduxだけのLive-ISO用チートコード</a></li>
				<li><a href="cheatcodes-ja.htm#cheatcodes-linux">Linux一般のチートコード</a></li>
				<li><a href="cheatcodes-vga-ja.htm#vga">VGAコード</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 6 );" onmouseout="startTime();" ><a href="part-gparted-ja.htm">ハードディスクのパーティショニング</a>
			<ul class="sub-menu" id="sm6">
				<li><a href="part-gparted-ja.htm#partition">GPartedでHDをパーティショニング</a></li>
				<li><a href="part-gparted-ja.htm#ntfs">GPartedでNTFSパーティションのサイズ変更</a></li>
				<li><a href="part-uuid-ja.htm#uuid">UUID, パーティションのラベルとfstab</a></li>
				<li><a href="part-cfdisk-ja.htm#disknames">ディスクの名前について</a></li>
				<li><a href="part-cfdisk-ja.htm#partition">cfdiskでHDをパーティショニング</a></li>
				<li><a href="part-cfdisk-ja.htm#formating">cfdiskでパーティション後のフォーマッティング</a></li>
				<li><a href="part-size-examp-ja.htm#part-example">パーティションの例</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 7 );" onmouseout="startTime();" ><a href="hd-install-ja.htm">インストールオプション</a>
			<ul class="sub-menu" id="sm7">
				<li><a href="hd-install-ja.htm#Inst-prep">インストールの準備</a></li>
				<li><a href="hd-install-ja.htm#Installation"> HDへのインストール</a></li>
				<li><a href="hd-install-ja.htm#first-hd-boot">初めての起動</a></li>
				<li><a href="hd-install-opts-ja.htm#fromiso">'fromiso'からの起動 - Overview</a></li>
				<li><a href="hd-install-opts-ja.htm#fromiso-grub-leg">古いGRUBから 'fromiso' で起動するには</a></li>
				<li><a href="hd-install-opts-ja.htm#grub2-fromiso">GRUB２ から 'fromiso' で起動するには</a></li>
				<li><a href="hd-install-opts-ja.htm#fromiso-persist">fromisoと持続モード</a></li>
				<li><a href="hd-install-opts-ja.htm#usb-hd">USB-HDへのインストール - sidux specific - sidux-on-stick</a></li>
				<li><a href="hd-ins-opts-oos-ja.htm#raw-usb">Writing sidux to a USB/SSD stick with any Linux, MS Windows or Mac OS X system</a></li>
				<li><a href="nbdboot-ja.htm#nbd1">ネットワークから sidux を起動する</a></li>
				<li><a href="hd-install-opts-ja.htm#vtbox">VirtualBoxにsiduxをインストール</a></li>
				<li><a href="hd-install-opts-ja.htm#qemu">QEMUにsiduxをインストール</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 8 );" onmouseout="startTime();" ><a href="hw-dev-hw-dri-ja.htm">グラフィックカード ハードウェアデバイスとドライバ  &amp; Xorg</a>
			<ul class="sub-menu" id="sm8">
				<li><a href="hw-dev-hw-dri-ja.htm#hd-ntfs3g">ntfs-3gを使ってNTFSパーティションに書く</a></li>
				<li><a href="hw-dev-mon-ja.htm#mon-res">モニターとスクリーンの解像度</a></li>
				<li><a href="hw-dev-mon-ja.htm#xrandr">デュアルモニターとxrandr</a></li>
				<li><a href="hw-dev-mon-ja.htm#mon-binary">デュアルモニター(バイナリー)</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free-3d">Nvidiaと用のバイナリーnon-freeドライバー  &amp; xorg.conf</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free-3d-2">ATI、Radeon その他の non-fre ドライバー</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free-firmware">non-free のファームウェアが必要なハードウェア</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free">non-free のレポジトリーを加える</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#native-nv-ati">nVidia, ATI, Radeon, Intel 用のFOSSドライバー &amp; xorg.conf</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 9 );" onmouseout="startTime();" ><a href="wm-kde-ja.htm">ウィンドウマネージャ</a>
			<ul class="sub-menu" id="sm9">
				<li><a href="wm-xfce-ja.htm#xfce-notes">Useful Xfce extras</a></li>
				<li><a href="wm-kde-ja.htm#install-add">Useful extra KDE Apps</a></li>
				<li><a href="wm-kde-ja.htm#desk-freeze">デスクトップが反応しなくなった時は</a></li>
				<li><a href="wm-kde-ja.htm#kde-login">Cant login in KDEにログインできない時は</a></li>
				<li><a href="wm-kde-ja.htm#ch-th">Themesの変更</a></li>
				<li><a href="wm-kde-ja.htm#dm">ディスプレイマネージャー - dm</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 10 );" onmouseout="startTime();" ><a href="lamp-apache-ja.htm">siduxのLAMPセット</a>
			<ul class="sub-menu" id="sm10">
				<li><a href="lamp-apache-ja.htm#serv-apache">siduxのLAMPセット</a></li>
				<li><a href="lamp-apache-ja.htm#serv-ftp">FTPクライアント</a></li>
				<li><a href="lamp-apache-ja.htm#serv-sec">セキュリティプロトコル</a></li>
				<li><a href="lamp-apache-ja.htm#serv-ssl">SSL</a></li>
				<li><a href="lamp-sql-ja.htm#serv-mysql">MySQLの設定</a></li>
				<li><a href="lamp-ppp-ja.htm#serv-php">ApacheとPHP</a></li>
				<li><a href="ntp-server-ja.htm#ntp-server">タイムサーバーの設定</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 11 );" onmouseout="startTime();" ><a href="internet-connecting-ja.htm">インターネット/ネットワーク</a>
			<ul class="sub-menu" id="sm11">
				<li><a href="tor-privoxy-ja.htm#tor">Tor</a></li>
				<li><a href="tor-privoxy-ja.htm#privoxy">Privoxy</a></li>
				<li><a href="internet-connecting-ja.htm#firewalls">Firewalls</a></li>
				<li><a href="samba-ja.htm#configure">SAMBAの環境設定 (Windowsとの接続)</a></li>
				<li><a href="samba-ja.htm#setup">SAMBAサーバーの設定</a></li>
				<li><a href="ssh-ja.htm#ssh-fs">SSH リモートマウント</a></li>
				<li><a href="ssh-ja.htm#ssh-x">SSHを通じてX Windowのアプリを</a></li>
				<li><a href="ssh-ja.htm#ssh-f">KonquerorでGUIのSSH</a></li>
				<li><a href="ssh-ja.htm#ssh-w">WindowsのPCからSSH X フォワーディング</a></li>
				<li><a href="ssh-ja.htm#ssh">SSHとセキュリティ</a></li>
				<li><a href="internet-connecting-ja.htm#dial-mod">56kモデム</a></li>
				<li><a href="inet-wpagui-ja.htm#wpa-roaming-gui">WiFi - WPA_GUI</a></li>
				<li><a href="inet-setup-ja.htm#net-set1">WiFi - Setting up for WiFi Roaming</a></li>
				<li><a href="internet-connecting-wpa-ja.htm#wpa">WiFi - wpasupplicant</a></li>
				<li><a href="inet-ifplug-ja.htm#hotswitch">Network switching between WiFi and Cable</a></li>
				<li><a href="internet-connecting-ja.htm#netcardconfig">インターネットに接続 -Ceni</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 12 );" onmouseout="startTime();" ><a href="sys-admin-apt-ja.htm">dist-upgrade とパッケージ管理</a>
			<ul class="sub-menu" id="sm12">
				<li><a href="sys-admin-apt-ja.htm#apt-cook">APTの手引き、ソースリストについて</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-install">新しいパッケージのインストール</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-delete">パッケージの除去</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-downgrade">ダウングレードとホールド</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-cache">apt-cacheでパッケージをさがす</a></li>
				<li><a href="sys-admin-apt-ja.htm#gui-pacsea">GUI のパッケージ検索</a></li>
				<li><a href="sys-admin-upgrade-ja.htm#live-cd-upgrade">アップグレード用のLive- ISO</a></li>
				<li><a href="sys-admin-apt-locarmirr-ja.htm#approx">一つのLAN上のいくつかのPCを dist-upgrade する時</a></li>
				<li><a href="sys-admin-kern-upg-ja.htm#kern-upgrade">カーネルのアップグレード</a></li>
				<li><a href="sys-admin-kern-upg-ja.htm#dmakms">Installing kernel modules dynamically with dmakms</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-upgrade">システムのアップグレード -- dist-upgrade - Overview</a></li>
				<li><a href="sys-admin-apt-ja.htm#du-st">システムのアップグレード -- dist-upgrade - The Steps</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 13 );" onmouseout="startTime();" ><a href="sys-admin-gen-ja.htm">システムアドミン</a>
			<ul class="sub-menu" id="sm13">
				<li><a href="hd-install-ja.htm#adduser">新しいユーザーを加える</a></li>
				<li><a href="home-ja.htm#home-bu"> /home の引越し</a></li>
				<li><a href="sys-admin-rdiff-ja.htm#rdiff">rdiffでバックアップ</a></li>
				<li><a href="sys-admin-rsync-ja.htm#rsync">rsyncでバックアップ</a></li>
				<li><a href="vir-rkits-ja.htm#virus-rkits">ウィルスとルートキットスキャナ</a></li>
				<li><a href="sys-admin-gen-ja.htm#start-services">サービスの自動スタート設定</a></li>
				<li><a href="sys-admin-gen-ja.htm#pw-lost">rootパスワードを忘れたら</a></li>
				<li><a href="sys-admin-gen-ja.htm#fonts">フォント</a></li>
				<li><a href="sys-admin-gen-ja.htm#cups">CUPS - Printing System</a></li>
				<li><a href="sys-admin-gen-ja.htm#sound">Sound Mixers</a></li>
				<li><a href="sys-admin-gen-ja.htm#init">siduxのランレベル - init</a></li>
				<li><a href="bios-freedos-ja.htm#bois-prep">FreeDOSでBIOSのアップグレード</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#boot-grub-floppy">ブート・フロッピーの作成</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#mbr-grub-boot">Grub1 - MBR ブートセクターへの上書き</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#dual-boot">Grub1 - デュアルブートまたはマルチブート</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#remove-grub">MBRからGRUBを消去する</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#what-is-grub">Grub - ブートマネージャ</a></li>
				<li><a href="sys-admin-grub2-ja.htm#mbr-over-grub2">Grub2 - MBR が上書きされた時</a></li>
				<li><a href="sys-admin-grub2-ja.htm#multi-os">Grub2 - マルチブーティング</a></li>
				<li><a href="sys-admin-grub2-ja.htm#grub1-grub2">Grub2 -Grub1からのアップデート</a></li>
				<li><a href="sys-admin-grub2-ja.htm#grub2">Grub2 - 概説</a></li>
			</ul>
		</li>
	</ul>
<!-- menu ends here --> </div>
<div id="main-page">
	<div class="divider" id="fromiso">
		<!--- ####
		<h2 id="top-header">Booting with "fromiso" - Overview</h2>
		#### -->
		<h2 id="top-header">"fromiso"で起動する - Overview</h2>
							<!--- ####
							<p  class="highlight-2">For normal use we recommend the ext4 file system. It is the default file system for sidux .</p>
							#### -->
							<p  class="highlight-2">普通のユーザーにはext4を勧めます; しっかりメンテナンスされていて、siduxのデフォルトのファイルシステムです。</p>

							<!--- ####
							<p>With this cheatcode you can start from an iso out of a partition ,(ext2/3/4), which is much faster then from a CD (HD installations with "fromiso" only takes a fraction of time,).</p>
							#### -->
							<p>このチートコード(起動オプション)でext2/3/4のパーティション上のisoファイルから起動することができ、CDから起動するよりずっと速く動きます。 (ハードディスクへのインストールも"fromiso"を使えばずっと早く終わります)。</p>

							<!--- ####
							<p>'fromiso' is of course much faster then from the CD- /DVD-drive and keeps the drive available. As an alternative you could use QEMU as well.</p>
							#### -->
							<p>"fromiso"はCDやDVDドライブよりずっと早く、また起動中にCD/DVDドライブを他の目的に使える利点があります。 他の方法としてQEMUを使うこともできます。</p>

				<!--- ####
				<h5>Requirements:</h5>
				#### -->
				<h5>必要条件:</h5>

							<!--- ####
							<p>* a functioning grub (on a floppy, a HD-Installation or the Live-CD)<br />
							#### -->
							<p>* ちゃんと作動するGrub (フロッピー、ハードドライブ上、またはライブCD)<br />
							<!--- ####
							* a sidux ISO Image e.g.: sidux.iso and a linux file system like ext2/3/4 <br />
							#### -->
							* siduxのISOイメージ: sidux.isoとext2/3/4などのLinuxふぁいるシステム <br />
							<!--- ####
							* If you rename your image to sidux.ISO you will need to alter the commands accordingly as a unix file naming system is case sensitive.</p>
							#### -->
							* Unixのファイルシステムはケースセンシティブなので、もしイメージファイルの名がsidux.ISOのように変更されていたらコマンドもその通りに変える必要があります。</p>
</div>
<div class="divider" id="grub2-fromiso">
			<h2>fromiso with Grub2</h2>
							<p>sidux has provided a grub2 file named 60_fll-fromiso to generate a fromiso entry to the grub2 menu.  The only file to configure fromiso is called <span class="highlight-3">grub2-fll-fromiso</span> and is found in <span class="highlight-3">/etc/default/grub2-fll-fromiso.</span>.</p>

							<p> First open a terminal and become root with:</p>
<pre>
sux
apt-get update
apt-get install grub2-fll-fromiso
</pre>
							<p>Then open an editor, which may be kwrite, mcedit, vim or another that you prefer:</p>

<pre>
mcedit /etc/default/grub2-fll-fromiso
</pre>
							 <p>Next uncomment (remove the<span class="highlight-2"> # </span>) the lines you need to be operative and replace the default instructions within the <span class="highlight-3">"quote marks"</span> with your preferences.</p>

							 <p>For example, compare this altered grub2-fll-fromiso with the default, (the <span class="highlight-3">highlighted lines</span> are the changed lines for instructional purposes):</p>
<pre>
# Defaults for grub2-fll-fromiso update-grub helper
# sourced by grub2's update-grub
# installed at /etc/default/grub2-fll-fromiso by the maintainer scripts

#
# This is a POSIX shell fragment
#

# specify where to look for the ISO
# default: /srv/ISO <span  class="highlight-1">### Note: This is the path to the directory that contains the ISO,<br /> it is not to include the actual sidux-*.iso file.###</span>
<span  class="highlight-3">FLL_GRUB2_ISO_LOCATION="/media/disk1part4/sidux-iso"</span>

# array for defining ISO prefices --> sidux-*.iso
# default: "sidux- fullstory-"
<span  class="highlight-3">FLL_GRUB2_ISO_PREFIX="sidux-"</span>

# set default language
# default: en_US
<span  class="highlight-3">FLL_GRUB2_LANG="en_AU"</span>

# override the default timezone.
# default: UTC
<span  class="highlight-3">FLL_GRUB2_TZ="Australia/Melbourne"</span>

# kernel framebuffer resolution, see
# http://manual.sidux.com/de/cheatcodes-vga-de.htm#vga
# default: 791
#FLL_GRUB2_VGA="791"

# additional cheatcodes
# default: noeject
<span  class="highlight-3">FLL_GRUB2_CHEATCODE="noeject nointro"</span>
</pre>


						      <p>Save and close the editor, then run in the terminal</p>
<pre>
update-grub
</pre>
						      <p>Your grub2 grub.cfg will be updated to see the different ISOs you have placed in the directory you specified and will be available on your next boot up.</p>
	    </div>
	    <div class="divider" id="fromiso-grub-leg">
			<h2>fromiso with grub-legacy</h2>

<!--- ####
				<h4 class="highlight-3">Process:</h4>
#### -->
				<h4 class="highlight-3">手順:</h4>
<!--- ####
							<p>Choose a place for the iso and 2 files we need, so we get shorter names. Therefore create a base-directory: for example "/media/sdaX", (sda1 or, 2, or 5, or 6, or whatever, for example) create the directory "sidux" and copy the iso into it:</p>
#### -->
							<p>必要なISOファイルとあと２つのファイルを置く場所を選びます。あまり長くならないように、ベースになるディレクトリを決めます。ここでは例として"/media/sdaX"としましょう。(sda1, sda2, 3, 4, 5,...と何でも構いませんが)"sidux"というディレクトリを作ってここにISOファイルをコピーします:</p>
<pre>$ sux
mkdir -p /media/sdaX/sidux
mv sidux.iso /media/sdaX/sidux
</pre>
<!--- ####
							<p>Now mount the ISO image (Alternatively mc [midnight commander] can be used, as it transparently auto-mounts .iso files and lets you copy out the files needed.):</p>
#### -->
							<p>次にISOイメージをマウントします:</p>

<pre>
mount -t iso9660 -o loop,ro /media/sdaX/sidux/sidux.iso /mnt
</pre>
							<p>(もう一つの方法としてmc [midnight commander]を使って自動マウントして中から必要なファイルをコピーすることもできます。)</p>
<!--- ####
							<p>Now copy the vmlinuz and initrd.img files from the mounted iso image to the directory <span class="highlight-3">and the HD is YOUR known variable::This is an example only :</span></p>
#### -->
							<p>マウントされたISOイメージの中からvmlinuzとinitrd.imgの二つのファイルを先ほど作ったディレクトリにコピーします。 <span class="highlight-3">ここではsda5を例として使っていますが実際に使っているHDの名前に替えてください:</span></p>

<pre>
cp /mnt/boot/vmlinuz0.686 /media/sda5/sidux/vmlinuz0.686
cp /mnt/boot/initrd0.686 /media/sda5/sidux/initrd0.686
umount /mnt
</pre>
<!--- ####
							<p>Next you have to customise grub. Therefore edit the file<span class="highlight-3"> /boot/grub/menu.lst </span> and add the following lines <span class="highlight-3"> AFTER the ### END DEBIAN AUTOMAGIC KERNELS LIST</span>: <span class="highlight-2">NOTE no wildcards on grub line for filenames allowed! </span> <span class="highlight-3">The HD is YOUR known variable::This is an example only:</span> </p>
#### -->
							<p>次にGRUBのファイルを編集します。<span class="highlight-3"> /boot/grub/menu.lst </span>をエディタで開いて次の行を<span class="highlight-3"> ### END DEBIAN AUTOMAGIC KERNELS LISTの行の下に</span>入力してください: <span class="highlight-2">注意: GRUBの行ではファイル名のワイルドカードは使えません! </span> <span class="highlight-3">ここでも(hd0,4)はsda5の場合の例であり、実際のハードディスクに替えてください:</span> </p>
<pre>
### ISO boot
title sidux 32bit from ISO
kernel (hd0,4)/sidux/vmlinuz0.686 boot=fll quiet vga=791 fromiso=/sidux/sidux.iso
initrd (hd0,4)/sidux/initrd0.686
</pre>
<!--- ####
							<p>With next boot you have a new menu item in grub to start the iso image. Should you upgrade your sidux.iso, vmlinuz and intird.img files with later releases, grub's menu.lst does not need to be altered.</p>
#### -->
							<p>次にシステムを再起動するとGRUBメニューにISOイメージから起動する行が表示されます。<br />(ISOファイル名をsidux.isoとしてコピーしてあったら後にISOイメージとvmlinuzとintird.imgをアップデートしたときGRUBメニューは変更しないでそのまま使えます。） </p>
	</div>
	<div class="divider" id="fromiso-persist">
<!--- ####
		<h2>General information on fromiso with persist</h2>
#### -->
		<h2>fromiso と persist について</h2>

<!--- ####
				<h3>fromiso and persist on a HD</h3>
#### -->
				<h3>ハードディスクからの fromiso と persist</h3>

<!--- ####
							<p>You can have a persistent live system on a writable disc by combining a fromiso setup with the persist cheatcode. When the fromiso uses ext2/ext3/ext4 system the default is simply:</p>
#### -->
							<p>fromiso の設定と persist の起動オプションを組み合わせれば、ハードディスクを使った持続的なライブシステムができます。デフォルトとして使う起動オプションは:</p>

<pre>
persist
</pre>

							<!--- ####
							<p>When the fromiso uses a vfat filesystem, then you must use a file that contains a linux filesystem and the cheatcode will look like:</p>
#### -->
							<p>fromiso が VFATのファイルシステムを使う場合は Linux のファイルシステムを内容としてふくむファイルを使う必要があります。起動オプションは次のようになります:</p>
<pre>
persist=/sidux/sidux-rw
</pre>

<!--- ####
							<p>sidux uses aufs to enable what is known as "copy on write" over your ISO to allow you to write new files and folders and update existing ones by keeping the new files in memory. The <span class="highlight-3">persist</span> cheatcode, will store your new files on the same hard drive partition as you use to store your fromiso ISO image.</p>
#### -->
							<p>sidux は aufs を使って、いわゆる "copy on write" (書き込み時コピー)という方法で新しいファイルをメモリーに保存することで、 ISOイメージ上のファイルシステムに新しいファイルやフォルダーを作成したり、もとからあるファイルに変更を加えたりできるようにしています。起動オプションに <span class="highlight-3">persist</span> を使うと、新しいファイルをハードディスクの fromiso のISOイメージのあるのと同じパーティションに保存します。</p>

<!--- ####
							<p><span class="highlight-3">fromiso</span> gives you a live system which performs all the automatic features of the sidux live ISO. This has the benefit of doing things like automatically configuring the hardware but it also means  that it will recreate the same files each time you boot up unless you use additional codes.</p>
#### -->
							<p><span class="highlight-3">fromiso</span> でライブシステムを起動すると sidux のライブISOの自動機能が実行され、ハードウェアが自動的に設定されたりする利点がありますが、それは同時に、起動のたびに同じファイルを繰り返し作成している、ということです。</p>

<!--- ####
							<p>Using <span class="highlight-3">persist</span> along with other sidux specific cheatcodes such as noxorgconf, nonetwork, means that it will not recreate the same files each time you boot up. </p>
#### -->
							<p>ところが起動オプションに、noxorgconf, nonetwork といった sidux 独自のオプションと合わせて <span class="highlight-3">persist</span> を使うことで、同じファイルを起動のたびに作成する必要がなくなります。</p>

<!--- ####
							<p>Using persist also means that you can install packages from apt and have the application and any data you have saved available for you to access at next boot up.</p>
#### -->
							<p>起動オプションに persist を使うということは、apt を使ってパッケージをインストールしたり、プログラムや保存したデータを次に起動したときにも使えるということでもあります。</p>
	</div>
	<div class="divider" id="persist-post">
				<!--- ####
				<h2>fromiso and persist on a bootable USB-sticks/SSD-cards</h2>
#### -->
				<h2>USB-sticks/SSD-cardsキーからの fromiso と persist</h2>
<!--- ####
							<p>Perhaps the ideal use of persistence is in conjunction with the install-usb-gui tool to create your own bootable flash drive with your files and the software you need. Your files will be stored in a subfolder on the drive.</p>
#### -->
							<p>持続モードの理想的な使い方は install-usb-gui ツールを使って必要なファイルやソフトウェアをあらかじめ用意した起動フラッシュメモリを作ることかもしれません。 Your files will be stored in a subfolder on the drive.</p>

<!--- ####
							<p>Your files will be stored in a subfolder on your drive. This subfolder is created if it does not exist when the <span class="highlight-3">fromiso </span> and <span class="highlight-3">persist</span> cheatcodes are used together. </p>
#### -->
							<!--<p>新しく作られたファイルはUSBドライブのサブフォルダに保存されます。<span class="highlight-3">fromiso </span> と <span class="highlight-3">persist</span> が一緒に使われたとき、このサブフォルダがUSBドライブ上にあるかチェックされ、ないときは自動的に作成されます。 </p>-->

<!--- ####
							<p><span class="highlight-3">persist</span> on a FAT filesystem, as commonly used for dos/Windows 9x installations and usually found by default on flash devices, requires you to create a single large file to use as a loop device, you then format this file.</p>
#### -->
							<p><span class="highlight-3">persist</span> を市販のフラッシュドライブのデフォルトで、DOSやWindows9xで広く使われていた FAT ファイルシステムで使うにはひとつの大きなファイルをループデバイスとして作成し、フォーマットします。</p>

<!--- ####
							<p><span class="highlight-3">On USB sticks, ext2 and vfat are the recommended file systems and most likely to give better cross platform ability for data rescue when needed most, as an MS Windows&#8482; driver is available for data-swapping. Read/Writes to flash type drives are contingent on the specifications of your USB stick.</span></p>
#### -->
							<p><span class="highlight-3"> USB-sticks/SSD-cardsフラッシュドライブでは ext2 と VFAT システムを推薦します。MS Windows&#8482;用のドライバもあるためデータ交換に使うときより多くのプラットフォームで使うことができ、またもしもの場合のデータ救済の可能性も高いでしょう。Read/Writes to flash type drives are contingent on the specifications of your USB USB-sticks/SSD-cards.</span></p>

<!--- ####
					<h6>ext2/3 file systems</h6>
#### -->
					<h6>ext2 ファイルシステム</h6>
<!--- ####
							<p>With ext2 the full partition will be used, the current root is taken and a directory /fll is created which is used for the persist allowing the usage of all free place in the device for the persist system.</p>
#### -->
							<p> ext2/3 の場合、パーティション全体が使われます。現行システムのrootが使われ ライブモードのメカニズムとして/fll というディレクトリが作成され残りのスペースが持続モードのファイル保存用に使われます。</p>

<!--- ####
					<h6>vfat file system</h6>
#### -->
					<h6>VFAT ファイルシステム</h6>
<!--- ####
							<p>When vfat is used, persistance is made through a file that can be maximum 2GB  but not less than 100MB (as it would be of no use). This file should be named <span class="highlight-3">sidux-rw</span>. Assuming the disc you want to use is mounted and writable on /media/sdb1 and you want to create a 1GB file to use as your persistent drive you could use the following commands (no need for root if you can write to the file).</p>
#### -->
							<p>VFAT が使われると、持続モードのファイル保存スペースとして最大２Gb、最小100Mbが使えます。(それ以下では役にたたないでしょう)　このファイルに<span class="highlight-3">sidux-rw</span>.</p>

					 <h4>Example of creating persist after initial installation</h4>
							<p>If you are not sure of the mount point, mount the stick and run <span class="highlight-3">ls -lh /media</span> to provide a list of all your system mount points. Look for something like <span class="highlight-3">drwxr-xr-x  6 username root 4.0K Jan  1  1970 disk</span>. If your output states differently then replace <span class="highlight-3">"/media/disk"</span> in line with your requirement, (for example "/media/sdc1"):</p>

<pre>
disk="/media/disk"
</pre>

							<p>Set the size of the persist partition:</p>
<pre>
size=1024
</pre>
							<p>Make a directory on the stick:</p>
<pre>
mkdir $disk/sidux
</pre>
							<p>Run the code to make the persist partition:</p>

<pre>
dd if=/dev/zero of=$disk/sidux/sidux-rw bs=1M count=$size &amp;&amp;  echo 'y' | LANG=C /sbin/mkfs.ext2 $disk/sidux/sidux-rw &amp;&amp;  tune2fs -c 0 "$disk/sidux/sidux-rw"
</pre>

							<p class="highlight-2">Windows NT/2000/XP(TM)のインストールに使われている NTFS システムでは持続モードはできません。</p>

	</div>
	<div class="divider" id="usb-hd">
<!--- ####
		<h2>Installation of sidux on USB/SSD devices</h2>
#### -->
		<h2>siduxを USB/SSD devices ドライブにインストール</h2>

<!--- ####
							<p>To do an installation of sidux on a USB-stick/SSD-card is as easy as a normal HD-Install. Just follow this simple guideline.</p>
#### -->
							<p>sidux をUSBスティックやUSBハードディスクにインストールするのは普通のハードディスクにインストールするのと同じように簡単です。</p>

							<!--- ####
				<h5>Requirements:</h5>
#### -->
				<h5>必要条件:</h5>
				<!--- ####
							<p>Any PC that has a USB 2.0 protocol and supports booting from USB/SSD.</p>
#### -->
							<p>USB 2.0 プロトコルとUSB/SSDからの起動をサポートしているPC。</p>

							<!--- ####
							<p>A sidux.iso image.</p>
#### -->
							<p>siduxのISOファイル.</p>

				<h5>3 kinds of installation to USB/SSD</h5>
					  <ul>
							<li>1) <a href="hd-install-opts-ja.htm#usb-from1">fromiso </a>; sidux specific: sidux-on-a-stick</li>
							<li>2) <a href="hd-install-opts-ja.htm#usb-hdd"> Full</a> (the full installation to a USB/SSD behaves as normal HD installation and is done through the normal installer).</li>
							<li>3) <a href="hd-ins-opts-oos-ja.htm#raw-usb"> RAW device </a> write. This is ideal when using any Linux, MS Windows or Mac OS X operating system and wish to install sidux-on-a-stick, (with caveats).</li>
					  </ul>

	    </div>
	    <div class="divider" id="usb-from1">
				<h3>USB/SSD fromiso Installation, sidux-on-a-stick</h3>
#### -->
				<h3>USB/SSD への fromiso インストール</h3>
				<!--- ####
							<p> <span class="highlight-3">Pre format your usb device with ext2 or fat32 before proceeding (at least a 2 gig capacity) . The device should have 1 partition only and as some BIOSes are temperamental this must be marked bootable.</span></p>
#### -->
							<p> <span class="highlight-3">まず準備としてUSB/SSDデバイスを ext2 または FAT32 にフォーマットします。(２GB以上) このデバイスにはパーティションが一つだけになるようにして、このパーティションを起動可能にします。(BIOSによってはこれをしないと起動できないことがあるため) 。</span></p>

							<p>If using a GUI formatting application like gparted, please ensure that you first delete the existing partition, then recreate the partition before formatting.</p>

							<!--- ####
							<p>The <span class="highlight-3">fromiso</span> installation is done through <span class="highlight-3">Menu>System>install-sidux-to-usb</span>. On a LIVE-CD you can also click on <span class="highlight-3">sidux Installer Icon</span> and choose <span class="highlight-3">Install to USB</span>.</p>
#### -->

				<h5>USB fromiso from a HD sidux installed system:</h5>

							<p><span class="highlight-3">fromiso USB </span> インストールはハードディスクにインストールされたシステムからは<span class="highlight-3">Menu>System>install-sidux-to-usb</span></p>

				<h5>USB fromiso from a sidux-*.iso:</h5>

							<p>で実行できます。ライブCDの場合は<span class="highlight-3">sidux Installer アイコン</span> からインストーラを実行して、<span class="highlight-3">Install to USB</span>を選びます。</p>

			      <h6>Options:</h6>

<!--- ####
							<p>You are given the opportunity to make language, timezone and other bootcodes choices and whether or not to activate persist via a checkbox.</p>
#### -->
							<p>デフォルトで使用する言語、タイムゾーンその他のオプションや persist モードで起動するかなどをチェックボックスで設定します。</p>

<!--- ####
							<p>You now have a bootable USB stick. If you did not activate persist you are able to turn it on by adding <span class="highlight-3">persist</span> on the grubline of the grub screen. (If vfat, it is probably best to start again though).</p>
#### -->
							<p>これで機動可能なUSB/SSDデバイスができました。あとからpersist モードを使いたくなった場合は機動時のGRUBのコマンド行に <span class="highlight-3">persist</span> を加えるか、または menu.lst の #kopt= の行に persist と書き込みます。. . (If vfat, it is probably best to start again though).</p>


<!--- ####
						<h6>Terminal example:</h6>
#### -->
						<h6>コンソールからのインストールの一例</h6>
<pre>
 fll-iso2usb -D /dev/sdb -f none --iso /home/sidux/sidux.iso -p -- lang=no tz=Pacific/Auckland
</pre>

<!--- ####
							<p>This installs  the  iso  image  to  the  USB device <span class="highlight-3">sdb</span> with persist, Norwegian language localisation and Pacific/Auckland (NZL) time on the grub default line.</p>
#### -->
							<p>このコマンドは ISO イメージを<span class="highlight-3">sdb</span>にあたる USB デバイスに parsist と のオプションで、ノルウェー語とニュージーランドの太平洋/オークランド時間をGRUBのデフォルトに設定してインストールします。</p>

<!--- ####
							<p>Your X (video card, keyboard, mouse) configuration or your network interfaces file  have not been stored, which makes it ideal to use on other computers.</p>
#### -->
							<p>Xウィンドウズの設定(ビデオカード、キーボード、マウスなど）やネットワークインターフェイスファイルは保存されないので、いろいろなコンピュータで起動するライブシステムに最適です。</p>

<!--- ####
							<p>For more documentation including customisation options see:</p>
#### -->
							<p>カスタマイズオプションなどの詳細は次のコマンドのmanページを見てください:</p>

<pre>
$ man fll-iso2usb
</pre>

<!--- ####
			<h3>Full installation to a USB/SSD (behaves as normal HD installation)</h3>
#### -->
			<h3>USB/SSD への通常の(ハードディスクへのインストールと同じ)フルインストール</h3>
			<!--- ####
							<p>The recommended mininmum size of a USB-stick/SSD-card is:<br />
#### -->
							<p>最小限のサイズとしてUSB/SSD デバイスは:<br />
							<!--- ####
							sidux "LITE" needs 2.5 gig PLUS you need data space,<br />
#### -->
							"LITE" バージョンのsiduxはシステムに2.5GB <br />
							<!--- ####
							sidux "FULL" needs 4 gig PLUS you need data space</p>
#### -->
							"FULL" バージョンのsidux はシステムに 4 GBe</p>
							<p>程度は必要でしょう。これにユーザーとして必要なデータスペースを計算してサイズを決めてください。</p>
							<!--- ####
							<p> <span class="highlight-3">Pre format your device with</span> <span class="highlight-2">ext2 </span><span class="highlight-3">and partition the USB-stick/SSD-card as you would a standard PC.</span></p>
#### -->
							<p> <span class="highlight-3">準備としてデバイスを</span> <span class="highlight-2">ext2 </span><span class="highlight-3">にフォーマットしてから普通のハードディスクと同じようにパーティションします。</span></p>

							<!--- ####
							<p>Start the installation from the Live-ISO and choose the partition on the USB/SSD-device, where sidux is to be installed, for example <span class="highlight-3">sdbX </span>and follow the sidux installer prompts. Read <a href="hd-install-ja.htm#Installation">Installing to your HD</a></p>
#### -->
							<p>ライブCDからインストーラを起動してUSB/SSDデバイスのパーティションを sidux のインストール先として選びます。インストーラのダイアログ上で例としてば<span class="highlight-3">sdbX </span>を選び、インストーラの指示に従ってインストールします。詳しくは<a href="hd-install-ja.htm#Installation">ハードディスクへのインストール</a>を参照。</p>

<!--- ####
							<p><span class="highlight-3">To boot from your USB/SSD 'Boot from USB' must be enabled in your BIOS.</span></p>
#### -->
							<p><span class="highlight-3">USB/SSDデバイスから起動するには BIOS の設定で 'Boot from USB' が有効になっていなくてはなりません。</span></p>

							<!--- ####
							<p><span class="highlight-3">Other note worthy points are: </span></p>
#### -->
							<p><span class="highlight-3">その他のポイントとして: </span></p>
						<ul>
						<!--- ####
							<li>A USB-stick/SSD-card install will be usually be bound to the PC that initiated the original installation. If it is your intention to be able to use the USB/SSD stick on other PCs, it should not have non-free graphics drivers and cheatcodes pre configured, with the exception to probably have the vesa cheatcode hardcoded into the menu.lst, (all to be attended to after a successful installation).</li>
#### -->
							<li>USB/SSD へのフルインストールは通常インストールを行ったPCのみで使えます。他のPCでも使いたい場合はnon-freeのグラフィックドライバーは使わず、特別な起動オプションも使わないようにします。例外として起動オプションに vesa を使うのはハードウェアの違うPCで起動するのに便利です。(これらの設定はますインストールがうまくいってから起動後に設定します。) </li>

							<!--- ####
							<li>After booting the USB-stick/SSD-card to another PC, you will need to alter fstab to access the PCs hard drives.</li>
#### -->
							<li>他のPCで USB/SSD から起動する場合、そのPCのハードディスクにアクセスするにはfstabを修正する必要があるでしょう。</li>

							<!--- ####
							<li>"fromiso" with "persist" is a better option should portability be the intention.</li>
#### -->
							<li>他のPCからも起動することを念頭に入れている場合は "fromiso" と "persist" のオプションを使うほうがいいでしょう。</li>
						</ul>
	</div>
	<div class="divider" id="usb-hdd">
	<!--- ####
				<h3>Full installation to a USB Hard Disk Drive like an installation to a partition</h3>
#### -->
				<h3>USBのハードディスクのパーティションにフルインストールする</h3>

				<!--- ####
							<p>A USB Hard Disk Drive has one quite good and appealing application, (particularly to new users coming from MS or another distro), and that is you can install sidux to a USB HDD, plug it in without needing to configure a PC for dual boot (repartitioning, grub alterations etcetera).</p>
#### -->
							<p>USB ハードディスクへのインストールには（とくにMSや他のディストロから来た新しいユーザーにとって）魅力があります。sidux をUSB ハードディスクにインストールすれば、そのPCを複数のシステムで起動するための(パーティショニング、GRUB設定などの)ややこしい作業を避けることができるからです。</p>

							<!--- ####
							<p>Start the installation from the Live-ISO, (or from a USB-stick/SSD-card), <span class="highlight-3">as a standard install, not a USB install</span> and choose the partition on the device, where sidux is to be installed, for example <span class="highlight-3">sdbX </span>and follow the sidux installer prompts. Grub must be written to the USB HDD partition.</p>
#### -->
							<p>ライブモードからインストーラを起動して <span class="highlight-3">USBインストールではなく、普通のインストールをはじめて</span> sidux システムをインストールしたいパーティション、例として <span class="highlight-3">sdbX </span> を選び、インストーラの指示に従います。GRUBはUSBハードディスクのパーティションにインストールします。</p>

							<!--- ####
							<p>Read <a href="hd-install-ja.htm#Installation">Installing to your HD</a></p>
#### -->
							<p>詳しくは<a href="hd-install-ja.htm#Installation">ハードディスクへのインストール</a>参照。</p>

							<!--- ####
							<p><span class="highlight-3">Other note worthy points are: </span></p>
#### -->
							<p><span class="highlight-3">その他のポイントとして: </span></p>

						<ul>
						<!--- ####
							<li>A USB HDD install will be usually be bound to the PC that initiated the original installation. If it is your intention to be able to use the USB HDD on other PCs, the USB HDD should not have non-free graphics drivers and cheatcodes pre configured, with the exception to probably have the vesa cheatcode hardcoded into the menu.lst, (all to be attended to after a successful installation).</li>
#### -->
							<li>USB/SSD へのフルインストールは通常インストールを行ったPCのみで使えます。他のPCでも使いたい場合はnon-freeのグラフィックドライバーは使わず、特別な起動オプションも使わないようにします。例外として起動オプションに vesa を使うのはハードウェアの違うPCで起動するのに便利です。(これらの設定はますインストールがうまくいってから起動後に設定します。) </li>

							<!--- ####
							<li>If you want to use the installation on another machine be aware that you must make some adjustments. You will need to alter fstab to access the PCs hard drives, maybe xorg.conf and probably the network configuration.</li>
#### -->
							<li>このシステムを他のPCでも使いたい場合は、ハードディスクのアクセスのため fstab を変更したり、X ウィンドウの設定のため xorg.conf を修正したり、ネットワーク設定を変更したりする必要があるでしょう。</li>
						</ul>
	</div>
	<div class="divider" id="vtbox">
		<!--- ####
		<h2>Installing sidux with VirtualBox</h2>
		#### -->
		<h2>siduxをVirtualBoxにインストールする</h2>
							<!--- ####
							<p>The Steps:.</p>
							#### -->
							<p>The Steps:</p>
						<ul>
								<!--- ####
 							<li>1. create a harddiskimage for VirtualBox</li>
								#### -->
 							<li>1. VirtualBox用のハードディスクイメージを作ります。</li>
								<!--- ####
 							<li>2. boot the iso with VirtualBox</li>
								#### -->
 							<li>2. VirtualBoxをISOファイルから起動します。</li>
								<!--- ####
 							<li>3. install on the image</li>
								#### -->
 							<li>3. ハードディスクイメージにインストールします。</li>
						</ul>

				<!--- ####
				<h4>Requirements</h4>
				#### -->
				<h4>最低限必要な条件</h4>
							<!--- ####
							<p><span class="highlight-3">Recommended ram: 1 gig </span>: Ideally 512 MB for the guest and 512 MB for the host. (it can be run on less, but do not expect to have good performance).</p>
							#### -->
							<p><span class="highlight-3">RAMのサイズ: 1GB(推奨) </span>: 理想的にはホストに512MBとゲストに512 MB。 (それ以下のRAMでも使えますが、あまり良いパフォーマンスは期待できません)。</p>

							<!--- ####
							<p><span class="highlight-3">Hard disk space:</span> While VirtualBox itself is very lean (a typical installation will only need about 30 MB of hard disk space), the virtual machines will require fairly huge files on disk to represent their own hard disk storage. So, to install MS Windows XP (TM), for example, you will need a file that will easily grow to several GB in size. To have sidux in VirtualBox you need to allocate a 5 gig image plus a swap allocation.</p>
							#### -->
							<p><span class="highlight-3">ハードディスクスペース:</span> VirtualBoxそのものはとても小さいプログラムです(普通にインストールすれば30MB程度のスペースしか使いません)が、バーチャルマシンはハードディスクの代わりとしてディスク上にかなり大きいファイルを必要とします。 そのため、例えばMS Windows XP(TM)をインストールするには何GBものスペースが必要になるでしょう。 siduxをVirtualBoxのゲストOSとして使うのには５GBのイメージとスワップスペースがあればいいでしょう。</p>

				<h3>Installation:</h3>

<pre>
apt-get update
apt-get install virtualbox-ose-qt virtualbox-ose-source dmakms module-assistant
</pre>
							<p>Then prepare the module:</p>
<pre>
m-a prepare
m-a a-i virtualbox-ose-source
</pre>
							<p>Then activate Dynamic Module-Assistant Kernel Module Support for virtualbox, so that the next time the Linux kernel is updated a virtualbox module is prepared for it too, without manual intervention. To do that, add <span class="highlight-3">virtualbox-ose-source</span> to the <span class="highlight-3">/etc/default/dmakms </span>configuration file. </p>
<pre>
mcedit /etc/default/dmakms
virtualbox-ose-source
</pre>

							<p>Then reboot the computer.</p>

							<p><a href="sys-admin-kern-upg-ja.htm#dmakms">This is essential reading on dmakms</a></p>

						      <!--<p>virtualbox-ose-source will pull in dkms,  which will build the modules and automatically re-build and update the modules when virtualbox, dkms or the kernel updates.</p>

							<p>Reboot your PC for the kernel to access the module after the initial installation.</p>

							<p>When the kernel is upgraded you will need to activate the module before starting virtualbox to avoid error messages. To avoid manual intervention each time the kernel updates, edit with your preferred editor as root <span class="highlight-3">/etc/rc.local</span> to look like this:</p>
<pre>
# By default this script does nothing.
modprobe vboxdrv
exit 0
</pre>
							<p>dkms and dmakms can coexist on the same installation, read:</p>
<pre>
man dkms
man dmakms
</pre>-->

					<!--- ####
					<h3>Installing sidux to the virtual machine</h3>
					#### -->
					<h3>siduxをバーチャルマシンにインストールする</h3>
							<!--- ####
							<p>Use virtualbox's wizard to create a new virtual machine for sidux. then follow the instructions for a regular sidux-installation.</p>
							#### -->
							<p>VirtualBoxのウィザードを使ってsiduxが使うバーチャルマシンを作り、続いて通常のsiduxのインストールの手順を踏みます。</p>

							<!--- ####
							<p><a href="http://www.virtualbox.org/">VirtualBox has a comprehesive PDF Help, that you can download</a> </p>
							#### -->
							<p><a href="http://www.virtualbox.org/">VirtualBoxにはダウンロードできる詳しいヘルプPDFがあります</a> </p>

	</div>
	<div class="divider" id="qemu">
		<!--- ####
		<h2>Installing sidux with QEMU</h2>
		#### -->
		<h2>QEMUにsiduxをインストールする</h2>

		<ul>
				<!--- ####
 			<li>1. create a harddiskimage for QEMU</li>
				#### -->
 			<li>1. QEMUのためのハードディスクイメージを作る。</li>
				<!--- ####
 			<li>2. boot the iso with QEMU</li>
				#### -->
 			<li>2. QEMUをISOから起動する。</li>
				<!--- ####
 			<li>3. install on the image</li>
				#### -->
 			<li>3. ハードディスクイメージにインストールする。</li>
		</ul>

							<p>A QT GUI tool is available to help you configure QEMU:</p>
<pre>
apt-get install qtemu
</pre>

 				<!--- ####
 			<h4>Creating the hard disk image</h4>
				#### -->
 			<h4>ハードディスクイメージを作る</h4>

				<!--- ####
				<p>To run qemu you will probably need a hard disk image. This is a file which stores the contents of the emulated hard disk.</p>
				#### -->
				<p>QEMUを使うためにはハードディスクイメージを作る必要があります。 このファイルをハードディスクの代わりとしてバーチャルマシンのファイルを保存するために使います。</p>

				<!--- ####
				<p>Use the command:</p>
				#### -->
				<p>そのためには:</p>
<pre>
qemu-img create -f qcow sidux.qcow 3G
</pre>
				<!--- ####
				<p>To create the image file named "sidux.qcow". The "3G" parameter specifies the size of the disk - in this case 3 GB. You can use suffix M for megabytes (for example "256M"). You shouldn't worry too much about the size of the disk - the qcow format compresses the image so that the empty space doesn't add up to the size of the file.</p>
				#### -->
				<p>このコマンドで"sidux.qcow"という名のイメージファイルtを作ります。 "3G"というパラメータはディスクのサイズ-この場合３GBを指定しています。 Mを使えばメガバイトの表示も使えます(例、"256M"とかけば256MB) あまりイメージサイズを気にすることはありません。 qcowフォーマットはイメージを圧縮するため空白のスペースのためにファイルが大きくなってしまうことはありません。</p>

			<!--- ####
			<h4>Installing the operating system</h4>
			#### -->
			<h4>オペレーションシステムのインストール</h4>

				<!--- ####
				<p>This is the first time you will need to start the emulator. <span class="highlight-3">One thing to keep in mind: when you click inside qemu window, the mouse pointer is grabbed. To release it press :</span></p>
				#### -->
				<p>初めてエミュレータを使うとき<span class="highlight-3">注意すべきこと: 一度QEMUのウィンドウの中をクリックするとマウスはバーチャルマシンに捕まります。 これを解放するには:</span></p>

<pre>
Ctrl+Alt
</pre>

				<!--- ####
				<p>If you need to use a bootable floppy, run Qemu with:</p>
				#### -->
				<p>起動フロッピーが必要ならばQEMUを次のコマンドで起動します:</p>
<pre>
qemu -floppy sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
				<!--- ####
				<p>If your CD-ROM is bootable, run Qemu with:</p>
				#### -->
				<p>CD-ROMから起動できる場合はQEMUを次のコマンドで起動します:</p>
<pre>
qemu -cdrom sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
				<!--- ####
				<p>Now install sidux as if you were going to install it on a real HD</p>
				#### -->
				<p>siduxを本物のハードディスクへの場合と同じ用にインストールします</p>


			<h4>システムの作動</h4>

				<p>システムを作動するには単純に:</p>
<pre>
qemu [hd_image]
</pre>
				<!--- ####
				<p>A good idea is to use overlay images. This way you can create hard disk image once and tell Qemu to store changes in external file. You get rid of all the instability, because it is so easy to revert to previous system state.</p>
				#### -->
				<p>オーバーレイイメージを使ってみるのもいい考えです。 この方法だと一度ハードディスクイメージを作って、その後の変化は外部のファイルに保存します。 何か問題が起こったとき簡単に以前の状態に戻せるため安定して使うことができます。</p>

				<!--- ####
				<p>To create an overlay image, type:</p>
				#### -->
				<p>オーバーレイイメージを作るには:</p>
<pre>
qemu-img create -b [[base''image]] -f qcow [[overlay''image]]
</pre>
				<!--- ####
				<p>Substitute the hard disk image for base_image (in our case sidux.qcow). After that you can run qemu with:</p>
				#### -->
				<p>ハードディスクイメージをベースイメージ(ここではsidux.qcow)と取り替えます。 これから先はQEMUをスタートするのに:</p>
<pre>
qemu [overlay_image]
</pre>
				<p>のコマンドを使います。</p>
				<!--- ####
				<p>The original image will be left untouched. One hitch, the base image cannot be renamed or moved, the overlay remembers the base's full path.</p>
				#### -->
				<p>もとのイメージはそのまま手をつけずに保存されます。 このベースイメージの名前と場所はオーバーレイに記憶されるので、けっして変更してはいけません。</p>


			<!--- ####
			<h4>Using any real partition as the single primary partition of a hard disk image</h4>
			#### -->
			<h4>本当のパーティションをハードディスクイメージのプライマリパーティションとして使う</h4>

				<!--- ####
				<p>Sometimes, you may wish to use one of your system partition from within qemu (for instance, if you wish booting both your real machine or qemu using a given partition as root). You can do this using software RAID in linear mode (you need the linear.ko kernel driver) and a loopback device: the trick is to dynamically prepend a master boot record (MBR) to the real partition you wish to embed in a qemu raw disk image.</p>
				#### -->
				<p>時にはシステムパーティションの一つをQEMUの内部から使いたいことがあります。 (同じパーティションをルートとして実際に起動したりQEMUから起動したりしたい場合など)。 ソウトウェアRAIDをリニアモードで使い(そのためにはカーネルモジュールlinear.koが必要です)合わせてループバックデバイスを使うことで実現できます: QEMUのディスクイメージに埋め込みたい本物のパーティションの先頭にマスターブートレコード(MBR)をダイナミックに差し込むのがトリックです。</p>

				<!--- ####
				<p>Suppose you have a plain, unmounted /dev/sdaN partition with some filesystem on it you wish to make part of a qemu disk image. First, you create some small file to hold the MBR:</p>
				#### -->
				<p>仮にまだマウントされていないパーティション /dev/sdaN があって、何らかのファイルシステムにフォーマットされていて、これをQEMUのディスクイメージの一部に取り込みたいとします。 まず、MBRを保持する小さいファイルを作ります:</p>
<pre>
dd if=/dev/zero of=/path/to/mbr count=32
</pre>
				<!--- ####
				<p>Here, a 16 KB (32 * 512 bytes) file is created. It is important not to make it too small (even if the MBR only needs a single 512 bytes block), since the smaller it will be, the smaller the chunk size of the software RAID device will have to be, which could have an impact on performance. Then, you setup a loopback device to the MBR file:</p>
				#### -->
				<p>これで16 KB(32x512バイ)のファイルが作られました。 (MBRが必要なのは512バイトブロックが一つだけではあるけれど)このファイルのサイズが小さすぎないことが大切です。 あまり小さいとソフトウェアRAIDデバイスのチャンクサイズも小さくなってしまい、パフォーマンスに影響がでます。 ではMBRファイルのループバックデバイスを設定します:</p>
<pre>
losetup -f /path/to/mbr
</pre>
				<!--- ####
				<p>Let's assume the resulting device is /dev/loop0, because we wouldn't already have been using other loopbacks. Next step is to create the "merged" MBR + /dev/sdaN disk image using software RAID:</p>
				#### -->
				<p>すでにループデバイスが存在するとは限らないので仮にこれから作るループデバイスを /dev/loop0 としましょう。 次のステップはソフトウェアRAIDを使ってMBRとディスクイメージ/dev/sdaNを合併することです:</p>
<pre>
 modprobe linear
 mdadm --build --verbose /dev/md0 --chunk=16 --level=linear --raid-devices=2 /dev/loop0 /dev/sdaN
</pre>
				<!--- ####
				<p>The resulting /dev/md0 is what you will use as a qemu raw disk image (don't forget to set the permissions so that the emulator can access it). The last (and somewhat tricky) step is to set the disk configuration (disk geometry and partitions table) so that the primary partition start point in the MBR matches the one of /dev/sdaN inside /dev/md0 (an offset of exactly 16 * 512 = 16384 bytes in this example). Do this using fdisk on the host machine, not in the emulator: the default raw disc detection routine from qemu often results in non kilobyte-roundable offsets (such as 31.5 KB, as in the previous section) that cannot be managed by the software RAID code. Hence, from the the host:</p>
				#### -->
				<p>こうして作られた /dev/md0 をQEMUのディスクイメージファイルとして使います。 (エミュレータがアクセスで切るようにパーミッションを設定するのを忘れないように)。 最後の(一番トリッキーな)ステップはディスク設定(ディスクの形状とパーティションテーブル)においてMBRのプライマリパーティションのスタートポイントが /dev/md0 のなかの /dev/sdaN のポイントと一致するように(この例ではオフセットが16 x 512 = 16384バイトちょうどになるように)設定することです。 この作業はエミュレータの中では行わず、ホストマシーンの上でfdiskを使って行いましょう。 QEMUのデフォルトのロウディスク認識ルーチンはしばしばキロバイトで割り切れないオフセット(上の例だと31.5Kb)を出力するため、ソフトウェアRAIDコードでは扱えません。 だからホスト上で行います:</p>
<pre>
 fdisk /dev/md0
</pre>
				<!--- ####
				<p>There, create a single primary partition corresponding to /dev/sdaN, and play with the 's'ector command from the 'x'pert menu until the first cylinder (where the first partition starts), matches to the size of the MBR. Finally, 'w'rite the result to the file: you are done. You know have a partition you can mount directly from your host, as well as part of a qemu disk image:</p>
				#### -->
				<p>このプラグラムで /dev/sdaN に対応する単一のプライマリパーティションを作成し、XpertメニューのSectorコマンドを試しながら最初のシリンダ(初めのセクターが始まるところ)ばMBRのサイズと一致する設定を探し、Writeコマンドで結果を書き込んで終わりです。 これでこのパーティションをホストからでもQEMUのディスクイメージの一部としてでも使えるようになりました:</p>
<pre>
 qemu -hdc /dev/md0 [...]
</pre>
				<!--- ####
				<p>You can of course safely set any bootloader on this disk image using qemu, provided the original /boot/sdaN partition contains the necessary tools.</p>
				#### -->
				<p>もちろんこのディスクイメージにQEMUを使って(元の/boot/sdaNパーティションに必要なツールさえあれば)どんなブートローダでも設定できます。</p>


			<!--- ####
			<h4>Using the QEMU Accelerator Module</h4>
			#### -->
			<h4>QEMUのアクセレータモジュールを使う</h4>

				<!--- ####
				<p>The developers of qemu have created an optional kernel module to accelerate qemu to sometimes near native levels. This should be loaded with the option</p>
				#### -->
				<p>QEMUの開発者はQEMUを時にはネイティブに近い早さまで加速する追加のカーネルモジュールを作っています。 これをロードするには:</p>
<pre>
major=0
</pre>
				<!--- ####
				<p>to automate the creation of the required /dev/kqemu device. The following command</p>
				#### -->
				<p>必要な/dev/kqemuデバイスを自動的につくるには:</p>
<pre>
echo "options kqemu major=0" >> /etc/modprobe.conf
</pre>
				<!--- ####
				<p>This will amend modprobe.conf to ensure that the module option is added every time the module is loaded.</p>
				#### -->
				<p>このコマンドでmodprobe.confを修正して、モジュールがロードされる度にこのオプションが追加されるように設定されます。</p>

<pre>
qemu [...] -kernel-kqemu
</pre>
				<!--- ####
				<p>This enables full virtualization and thus improves speed considerably.</p>
				#### -->
				<p>これで最大限のバーチャリゼイションになりスピードがかなり早くなります。</p>

			<!--- ####
			<h4>To activate qemu:</h4>
			#### -->
			<h4>qemuをアクティブにするには:</h4>
<pre>
qemu -cdrom /tmp/pkg/sidux-debug.iso -net nic -net user -m 512
</pre>
		<!--- ####
		<p><a href="http://fabrice.bellard.free.fr/qemu/qemu-doc.html">QEMU Project </a> </p>
		#### -->
		<p><a href="http://www.nongnu.org/qemu/user-doc.html">QEMUプロジェクトの公式ドキュメント </a> </p>
		<!--- ####
		<p><a href="http://wiki2.archlinux.org/index.php/Qemu">Some content for QEMU for the sidux-manual was accessed off this site under GNU Free Documentation License 1.2 and modified for the sidux-manual</a> </p>
		#### -->
		<p><a href="http://wiki.archlinux.org/index.php/Qemu">QEMUについての内容の一部はこのサイトからGNU Free Documentation License 1.2に基づいて取得されsidux-manual用に変更されています</a> </p>


	</div>
	<div id="rev">Page last revised 13/03/2010 1140 UTC</div>

</div>
</body>
</html>
