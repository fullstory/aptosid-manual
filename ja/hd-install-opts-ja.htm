<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="ja">
<head>
	<title>sidux Manuals - Other Installation Options</title>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<style type="text/css" media="all">@import url("../lib/css-js/content.css");</style>
        <style type="text/css" media="all">@import url("../lib/css-js/menu.css");</style>
        <style type="text/css" media="print">@import url("../lib/css-js/print.css");</style>
        <link rel ="shortcut icon" href="../lib/favicon/manual.ico" />
        <script type="text/javascript" src="../lib/css-js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-6_override.css">
        <![endif]-->
</head>
<body>
<!-- Last translation revision by muchan 19/Apr/2008 2121 UTC -->
<div id="menu"><!-- menu starts here ja lang maintainer muchan-->
<!--Welcome to the  sidux-manual Operating System Manual version-01.73.2008.02.25 -->
<!-- menu last updated by muchan 26/04/2008 1145 hrs AEST 26/04/2008 2145 hrs UTC -->
<a href="http://sidux.com/"><img src="../lib/logos/sidux-logo.png" title="To sidux.com, Forum and Wiki" alt="logo" id="menu-header" /></a>
	<ul id="top-list">
		<li><a href="wel-quickstart-ja.htm#welcome-quick">sidux Quick Start Guide</a></li>
		<li><a href="http://manual.sidux.com/meta-manual">sidux メタマニュアル </a></li>
	</ul>
	<div id="flags-2">
			<a href="../flag-index.html"><img src="../lib/logos/sidux-language-64.png" title="Choose another language" alt="lang-switch" /></a>
	</div>
	<ul>
		<li  onmouseover="showHide( 1 );" onmouseout="startTime();" ><a href="welcome-ja.htm">sidux OSマニュアル</a>
			<ul class="sub-menu" id="sm1">
				<li><a href="welcome-ja.htm#welcome-gen">sidux OSマニュアル</a></li>
				<li><a href="welcome-ja.htm#how-to">このマニュアルの使い方</a></li>
				<li><a href="welcome-ja.htm#table-contents">内容一覧</a></li>
				<li><a href="help-ja.htm#help-gen">困った時は...</a></li>
				<li><a href="help-ja.htm#paste">IRC !paste</a></li>
				<li><a href="credits-ja.htm#cred-team">siduxチーム</a></li>
				<li><a href="wel-quickstart-ja.htm#welcome-quick">sidux Quick Start Guide</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 2 );" onmouseout="startTime();" ><a href="cd-content-ja.htm">CDの内容</a>
			<ul class="sub-menu" id="sm2">
				<li><a href="cd-content-ja.htm#cd-content">CDの内容</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 3 );" onmouseout="startTime();" ><a href="cd-dl-burning-ja.htm">ミラー, ダウンロードと CDの作成</a>
			<ul class="sub-menu" id="sm3">
				<li><a href="cd-dl-burning-ja.htm#download-sidux">siduxのミラー, ダウンロードとCDの作成</a></li>
				<li><a href="cd-dl-burning-ja.htm#md5">md5のチェックサム</a></li>
				<li><a href="cd-dl-burning-ja.htm#burn-nero">WindowsでCDを焼くには</a></li>
				<li><a href="cd-dl-burning-ja.htm#burn-linux">LinuxでCDを焼くには</a></li>
				<li><a href="cd-dl-burning-ja.htm#xdelta">xdeltaパッチング</a></li>
				<li><a href="cd-no-gui-burn-ja.htm">GUIなしでCDを焼くには</a></li>
				<li><a href="wel-quickstart-ja.htm#welcome-quick">sidux Quick Start Guide</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 4 );" onmouseout="startTime();" ><a href="live-mode-ja.htm">Live Mode</a>
			<ul class="sub-menu" id="sm4">
				<li><a href="live-mode-ja.htm#rootpw">sidux-LiveCDのRootパスワード</a></li>
				<li><a href="live-mode-ja.htm#live-cd-installsoft">Live-CD作動中にソフトをインストール</a></li>
				<li><a href="live-mode-ja.htm#ntfs-3g">ntfs-3gを使ってNTFSパーティションに書く</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 5 );" onmouseout="startTime();" ><a href="term-konsole-ja.htm">ターミナル/コンソール</a>
			<ul class="sub-menu" id="sm5">
				<li><a href="term-konsole-ja.htm#sux"> sux</a></li>
				<li><a href="term-konsole-ja.htm#term-kon"> ターミナル/コンソール</a></li>
				<li><a href="term-konsole-ja.htm#cli-help">コマンドラインヘルプCommand Line Help</a></li>
				<li><a href="term-konsole-ja.htm#term-cmds">Linuxターミナルのコマンド一覧</a></li>
				<li><a href="term-konsole-ja.htm#shell-scripts">Scripts.shのインストール</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 6 );" onmouseout="startTime();" ><a href="cheatcodes-ja.htm">チートコード</a>
			<ul class="sub-menu" id="sm6">
				<li><a href="cheatcodes-ja.htm#cheatcodes">siduxだけのLive-CD用チートコード</a></li>
				<li><a href="cheatcodes-ja.htm#cheatcodes-linux">Linux一般のチートコード</a></li>
				<li><a href="cheatcodes-vga-ja.htm#vga">VGAコード</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 7 );" onmouseout="startTime();" ><a href="part-gparted-ja.htm">ハードディスクのパーティショニング</a>
			<ul class="sub-menu" id="sm7">
				<li><a href="part-gparted-ja.htm#partition">GPartedでHDをパーティショニング</a></li>
				<li><a href="part-gparted-ja.htm#ntfs">GPartedでNTFSパーティションのサイズ変更</a></li>
				<li><a href="part-uuid-ja.htm#uuid">UUID, パーティションのラベルとfstab</a></li>
				<li><a href="part-cfdisk-ja.htm#disknames">ディスクの名前について</a></li>
				<li><a href="part-cfdisk-ja.htm#partition">cfdiskでHDをパーティショニング</a></li>
				<li><a href="part-cfdisk-ja.htm#formating">cfdiskでパーティション後のフォーマッティング</a></li>
				<li><a href="part-size-examp-ja.htm#part-example">パーティションの例</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 8 );" onmouseout="startTime();" ><a href="hd-install-ja.htm">インストールオプション</a>
			<ul class="sub-menu" id="sm8">
				<li><a href="hd-install-ja.htm#Inst-prep">インストールの準備</a></li>
				<li><a href="hd-install-ja.htm#Installation"> HDへのインストール</a></li>
				<li><a href="hd-install-ja.htm#first-hd-boot">初めての起動</a></li>
				<li><a href="hd-install-opts-ja.htm#fromiso">'fromiso'からの起動</a></li>
				<li><a href="hd-install-opts-ja.htm#fromiso-persist">fromisoと持続モード</a></li>
				<li><a href="hd-install-opts-ja.htm#usb-hd">USB-HDへのインストール</a></li>
				<li><a href="hd-install-opts-ja.htm#vtbox">VirtualBoxにsiduxをインストール</a></li>
				<li><a href="hd-install-opts-ja.htm#qemu">QEMUにsiduxをインストール</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 9 );" onmouseout="startTime();" ><a href="hw-dev-hw-dri-ja.htm">グラフィックカード ハードウェアデバイスとドライバ</a>
			<ul class="sub-menu" id="sm9">
				<li><a href="hw-dev-hw-dri-ja.htm#hd-ntfs3g">NTFSに書き込む</a></li>
				<li><a href="hw-dev-mon-ja.htm#mon-res">モニターとスクリーンの解像度</a></li>
				<li><a href="hw-dev-mon-ja.htm#xrandr">デュアルモニターとxrandr</a></li>
				<li><a href="hw-dev-mon-ja.htm#mon-binary">デュアルモニター(バイナリー)</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free-3d">NvidiaとATI用のバイナリーnon-freeドライバー</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#native-nv-ati">ATI, Radeon, Intel用のxorgのfreeドライバー</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free">non-freeが必要なハードウェア</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 10 );" onmouseout="startTime();" ><a href="wm-kde-ja.htm">ウィンドウマネージャ</a>
			<ul class="sub-menu" id="sm10">
				<li><a href="wm-kde-ja.htm#desk-freeze">KDEデスクトップが反応しなくなった時は</a></li>
				<li><a href="wm-kde-ja.htm#kde-login">Cant login in KDEにログインできない時は</a></li>
				<li><a href="wm-kde-ja.htm#ch-th">Themesの変更</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 11 );" onmouseout="startTime();" ><a href="lamp-apache-ja.htm">siduxのLAMPセット</a>
			<ul class="sub-menu" id="sm11">
				<li><a href="lamp-apache-ja.htm#serv-apache">siduxのLAMPセット</a></li>
				<li><a href="lamp-apache-ja.htm#serv-ftp">FTPクライアント</a></li>
				<li><a href="lamp-apache-ja.htm#serv-sec">セキュリティプロトコル</a></li>
				<li><a href="lamp-apache-ja.htm#serv-ssl">SSL</a></li>
				<li><a href="lamp-sql-ja.htm#serv-mysql">MySQLの設定</a></li>
				<li><a href="lamp-ppp-ja.htm#serv-php">ApacheとPHP</a></li>
				<li><a href="ntp-server-ja.htm#ntp-server">タイムサーバーの設定</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 12 );" onmouseout="startTime();" ><a href="internet-connecting-ja.htm">インターネット/ネットワーク</a>
			<ul class="sub-menu" id="sm12">
				<li><a href="tor-privoxy-ja.htm#tor">Tor</a></li>
				<li><a href="tor-privoxy-ja.htm#privoxy">Privoxy</a></li>
				<li><a href="internet-connecting-ja.htm#firewalls">Firewalls</a></li>
				<li><a href="samba-ja.htm#configure">SAMBAの環境設定 (Windowsとの接続)</a></li>
				<li><a href="samba-ja.htm#setup">SAMBAサーバーの設定</a></li>
				<li><a href="ssh-ja.htm#ssh-fs">SSH リモートマウント</a></li>
				<li><a href="ssh-ja.htm#ssh-x">SSHを通じてX Windowのアプリを</a></li>
				<li><a href="ssh-ja.htm#ssh-f">KonquerorでGUIのSSH</a></li>
				<li><a href="ssh-ja.htm#ssh-w">WindowsのPCからSSH X フォワーディング</a></li>
				<li><a href="ssh-ja.htm#ssh">SSHとセキュリティ</a></li>
				<li><a href="internet-connecting-ja.htm#dial-mod">56kモデム</a></li>
				<li><a href="internet-connecting-ndis-ja.htm#ndiswrapper-basic">Ndiswrapperの準備</a></li>
				<li><a href="internet-connecting-ndis-ja.htm#ndiswrapper-advanced">Activating Ndiswrapper - 上級編</a></li>
				<li><a href="internet-connecting-wpa-ja.htm#wpa">WIFI-WLAN</a></li>
				<li><a href="internet-connecting-ja.htm#netcardconfig">インターネットに接続 -Ceni</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 13 );" onmouseout="startTime();" ><a href="sys-admin-apt-ja.htm">パッケージのインストール、除去とダウングレーディング</a>
			<ul class="sub-menu" id="sm13">
				<li><a href="sys-admin-apt-ja.htm#apt-cook">APTの手引き、ソースリストについて</a></li>
				<li><a href="sys-admin-meta-ja.htm#meta-pack">メタ・パッケージのインストーラーMeta-Package Installer</a></li>
				<li><a href="sys-admin-meta-ja.htm#meta-proxy">メタインストーラーとプロクシー</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-install">新しいパッケージのインストール</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-delete">パッケージの除去</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-downgrade">ダウングレードとホールド</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-cache">apt-cacheでパッケージをさがす</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-kio">kio-aptでパッケージをさがす</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-upgrade">システムのアップグレード -- dist-upgrade</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 14 );" onmouseout="startTime();" ><a href="smxi-ja.htm">システムアドミン</a>
			<ul class="sub-menu" id="sm14">
				<li><a href="smxi-ja.htm#sm">smxiスクリプト</a></li>
				<li><a href="siduxcc-ja.htm#siduxcc">sidux Control Centre</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-upgrade">システムのアップグレード - dist-upgrade</a></li>
				<li><a href="sys-admin-upgrade-ja.htm#live-cd-upgrade">アップグレード用のLive-CD</a></li>
				<li><a href="sys-admin-kern-upg-ja.htm#kern-upgrade">カーネルのアップグレード</a></li>
				<li><a href="sys-admin-rdiff-ja.htm#rdiff">rdiffでバックアップ</a></li>
				<li><a href="sys-admin-rsync-ja.htm#rsync">rsyncでバックアップ</a></li>
				<li><a href="vir-rkits-ja.htm#virus-rkits">ウィルスとルートキットスキャナ</a></li>
				<li><a href="sys-admin-gen-ja.htm#start-services">サービスの自動スタート設定</a></li>
				<li><a href="sys-admin-gen-ja.htm#pw-lost">rootパスワードを忘れたら</a></li>
				<li><a href="sys-admin-gen-ja.htm#fonts">フォント</a></li>
				<li><a href="sys-admin-gen-ja.htm#cups">CUPS</a></li>
				<li><a href="sys-admin-gen-ja.htm#init">siduxのランレベル - init</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#mbr-grub-boot">MBR ブートセクターへの上書き</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#dual-boot">デュアルブートまたはマルチブート</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#boot-grub-floppy">ブート・フロッピーの作成</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#remove-grub">MBRからGRUBを消去する</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#what-is-grub">Grub - ブートマネージャ</a></li>
			</ul>
		</li>
	</ul>
<!-- menu ends here --> </div>
<div id="main-page">
	<div class="divider" id="fromiso">
		<!--- ####
		<h2 id="top-header">Booting with "fromiso"</h2>
		#### -->
		<h2 id="top-header">"fromiso"で起動する</h2>
							<!--- ####
							<p  class="highlight-2">For normal use we recommend the ext3 file system. It is the default file system for sidux and well maintained.</p>
							#### -->
							<p  class="highlight-2">普通のユーザーにはext3を勧めます; しっかりメンテナンスされていて、siduxのデフォルトのファイルシステムです。</p>

							<!--- ####
							<p>With this cheatcode you can start from an iso out of a partition ,(ext2/3), which is much faster then from a CD (HD installations with "fromiso" only takes a fraction of time,).</p>
							#### -->
							<p>このチートコード(起動オプション)でext2/3のパーティション上のisoファイルから起動することができ、CDから起動するよりずっと速く動きます。 (ハードディスクへのインストールも"fromiso"を使えばずっと早く終わります)。</p>

							<!--- ####
							<p>'fromiso' is of course much faster then from the CD- /DVD-drive and keeps the drive available. As an alternative you could use QEMU as well.</p>
							#### -->
							<p>"fromiso"はCDやDVDドライブよりずっと早く、また起動中にCD/DVDドライブを他の目的に使える利点があります。 他の方法としてQEMUを使うこともできます。</p>

				<!--- ####
				<h5>Requirements:</h5>
				#### -->
				<h5>必要条件:</h5>

							<!--- ####
							<p>* a functioning grub (on a floppy, a HD-Installation or the Live-CD)<br />
							#### -->
							<p>* ちゃんと作動するGrub (フロッピー、ハードドライブ上、またはライブCD)<br />
							<!--- ####
							* a sidux ISO Image e.g.: sidux.iso and a linux file system like ext2/3 <br />
							#### -->
							* siduxのISOイメージ: sidux.isoとext2/3などのLinuxふぁいるシステム <br />
							<!--- ####
							* If you rename your image to sidux.ISO you will need to alter the commands accordingly as a unix file naming system is case sensitive.</p>
							#### -->
							* Unixのファイルシステムはケースセンシティブなので、もしイメージファイルの名がsidux.ISOのように変更されていたらコマンドもその通りに変える必要があります。</p>

				<h4 class="highlight-3">Process:</h4>
							<p><a href="http://debian.tu-bs.de/project/sidux/release/">First read the package manifest of the ISO</a> and find the linux-headers number, it will look something like this:</p>

<pre>
linux-headers-2.6.24-2.6.24.4.slh.5-common 
</pre>
							<p>Therefore the kernel number is:</p>
<pre>
2.6.24-2.6.24.4.slh.5
</pre>
							<p span class="highlight-3">Note it very carefully!</p>

							<!--- ####
							<p>Next we choose a place for the iso and 2 files we need, so we get shorter names. Therefore we create a base-directory: for example "/media/sdax", (sda1 or, 2, or 5, or 6, or  whatever, for example) create the directory "sidux" and copy the iso into it:</p>
							#### -->
							<p>まずisoファイルと他に必要な２つのファイルを置く場所を確保します。 ファイルのパスが短くなるように"/media/sdax" (xのかわりにsda1, または2, 5のような数字が入ります)のすぐ下に"sidux"というディレクトリを作り、そこにisoファイルをコピーします:</p>

<pre>
$ sux
mkdir -p /media/sdax/sidux
mv sidux.iso /media/sdax/sidux
</pre>

							<!--- ####
							<p>now we move to that directory and mount the ISO image:</p>
							#### -->
							<p>そのディレクトリに移ってISOイメージをマウントします:</p>

<pre>
mkdir -p /mnt/test
mount -t iso9660 -o loop,ro /media/sdax/sidux/sidux.iso /mnt/test
</pre>

							<!--- ####
							<p>Now copy the  vmlinuz and initrd.img  files from the mounted iso image to the directory where the kernel number is the kernel you acertained from the manifest, <span class="highlight-3">and the  HD is YOUR known variable:: This is an example only:</span></p>
							#### -->
							<p>マウントされたISOイメージからvmlinuzとinitrd.imgをコピーします。 (カーネルのバージョン番号とハードディスクのパーティション番号は実際のものと取り替えてください: where the kernel number is the kernel you acertained from the manifest, <span class="highlight-3">and the  HD is YOUR known variable:: This is an example only:</span></p>

<pre>
cp /mnt/test/boot/vmlinuz-2.6.24-2.6.24.4.slh.5  /media/sda5/sidux/
cp /mnt/test/boot/initrd.img-2.6.24-2.6.24.4.slh.5 /media/sda5/sidux/
</pre>

							<!--- ####
							<p>Next you have to customise grub.  Therefore  edit the file<span class="highlight-3"> /boot/grub/menu.lst </span> and add the following lines <span class="highlight-3"> AFTER the ### END DEBIAN AUTOMAGIC KERNELS LIST</span>: <span class="highlight-2">NOTE no wildcards on grub line for filenames allowed! </span><span class="highlight-3">The HD is YOUR known variable::This is an example only:</span></p>
							#### -->
							<p>次にGrubをカスタマイズします。 <span class="highlight-3"> /boot/grub/menu.lst </span>というファイルを編集し<span class="highlight-3"> AFTER the ### END DEBIAN AUTOMAGIC KERNELS LIST</span>という行の後に次の用に付け加えます: <span class="highlight-2">ノート: Grubのコマンド行にファイル名のワイルドカードは使えません!</span> <span class="highlight-3">The HD is YOUR known variable:: This is an example only:</span></p>

<pre>
### ISO boot
title sidux 32bit from ISO
kernel (hd0,4)/sidux/vmlinuz-2.6.24-2.6.24.4.slh.5 boot=fll quiet vga=791 fromiso=/sidux/sidux.iso
initrd (hd0,4)/sidux/initrd.img-2.6.24-2.6.24.4.slh.5
</pre>

							<!--- ####
							<p>With next boot you have a new menu item in grub to start the iso image.</p>
							#### -->
							<p>次回の起動の際にはISOイメージからスタートするメニューが現れるはずです。</p>

				<!--- ####
				<h6 class="highlight-3">Tartaros and Chaos Live-cds:</h6>
				#### -->

	</div>
	<div class="divider" id="fromiso-persist">
		<!--- ####
		<h2>fromiso and persist</h2>
		#### -->
		<h2>fromiso と persist (持続性モード  以降)</h2>

							<!--- ####
							<p>You can have a persistent live system on a writable disc by combining a fromiso setup with the persist cheatcode.</p>
							#### -->
							<p> 以降 の sidux のリリースでは fromiso の設定に加えて persist という起動オプションを使うことにより書き込み可能なディスク上に持続的なライブシステムを作ることができます。</p>

							<!--- ####
							<p>sidux uses aufs to enable what is known as "copy on write" over your cd to allow you to write new files and folders and update existing ones by keeping the new files in memory. With the <span class="highlight-3">persist</span> cheatcode, eros will store your new files on the same hard drive partition as you use to store your fromiso cd image.</p>
							#### -->
							<p>sidux は aufs を使って"copy on write"と言われることを実現しています。 新しいファイルやフォルダ、または内容の変更をメモリに保存することでまるでCDの上のシステムに書き込みしているようにふるまいます。 <span class="highlight-3">persist</span> を起動オプションに使うことで、fromisoのISOイメージを保持するのと同じパーティションに新しいファイルが保存されます。</p>

							<!--- ####
							<p>Using <span class="highlight-3">persist</span> gives you a live system which performs all the automatic features of the sidux live cd. This has the benefit of doing things like automatically configuring the hardware but it also means  that it will recreate the same files each time you boot up..</p> 
							#### -->
							<p><span class="highlight-3">persist</span>を使うことでsiduxのライブCDと同じ自動的認識などを行うシステムができます。ハードウェアの自動設定は利点ですが、一方で同じファイルを起動のたび毎に繰り返し作るという欠点もあります。</p> 
							

							<!--- ####
							<p><span class="highlight-3">For example it will not store your X (video card, keyboard, mouse) configuration or your network interfaces file  which makes it ideal for using on more then one computer, </span> but can get in the way if you need to configure some of these features</p>
							#### -->
							<p><span class="highlight-3">例としてあげれば、Xの設定(ビデオカード、キーボード、マウス)やネットワークインターフェイスなどを保存しません。 この特徴は複数のコンピュータで使うのにピッタリだといえます</span> ただし手動で設定しなくてはいけない項目があるときはとても不便で使いにくいシステムになります</p>

							<!--- ####
							<p>Perhaps the ideal use of persistence is in conjunction with the new install-usb-gui tool to create your own bootable flash drive with your files and the software you need.</p>
							#### -->
							<p>おそらく持続モードの理想的な使い方は新しいUSBインストールのGUIと一緒にあなたのファイルと必要なソフトウェアを搭載して起動できるフラッシュドライブを作ることでしょう。</p>

							<!--- ####
							<p>Your files will be stored in a subfolder on your drive. This subfolder is created if it does not exist when the <span class="highlight-3">fromiso </span> and <span class="highlight-3">persist</span> cheatcodes are used together. </p>
							#### -->
							<p>あなたのファイルはドライブのサブフォルダに作られます。 <span class="highlight-3">fromiso</span>と<span class="highlight-3">persist</span>の起動オプションが一緒に使われたとき、もしこのサブフォルダがなかったら自動的につくられます。</p>

							<!--- ####
							<p><span class="highlight-3">persist</span> on a FAT filesystem, as commonly used for dos/Windows 9x installations and usually found by default on flash devices, requires you to create a single large file to use as a loop device, you then format this file.</p>
							#### -->
							<p><span class="highlight-3">persist</span>をDOSやWindows9Xに使われて今でもフラッシュデバイスにデフォルトとして使われているFATシステム上で使うには、ループデバイスとして大きなファイルを一つ作り、このファイルをフォーマットすることが必要です。</p>

							<!--- ####
							<p><span class="highlight-3">As always sidux recommends using an ext3 partition to store your iso and all other files..</span></p>
							#### -->
							<p><span class="highlight-3">ここでもsiduxはISOファイルその他を保持するのにext3パーティションを推奨します。 </span></p>

							<!--- ####
							<p>This file should be named <span class="highlight-3">sidux-rw </span>and placed in the root directory of your fat drive. Assuming the disc you want to use is mounted and writable on /media/sdb1 and you want to create a 1GB file to use as your persistent drive you could use the following commands (no need for root if you can write to the file).</p>
							#### -->
							<p>このファイルは<span class="highlight-3">sidux-rw </span>と名づけFATドライブのルートディレクトリに置きます。 仮にこのドライブを/media/sdb1にマウントして、この上に1GBのファイルを持続性のドライブとして使う場合は次のコマンドを使います。 (ファイルの書き込み許可がある限りrootになる必要はありません)。</p>
<pre>
disc="/media/sdb1"
size=1024
dd if=/dev/zero of=${disc}/sidux-rw bs=1M count=${size} &amp;&amp; echo 'y' | /sbin/mkfs.ext3 ${disc}/sidux-rw
</pre>

							<!--- ####
							<p class="highlight-2">NTFS partitions, commonly used for Windows NT/2000/XP (TM)  installations, CANNOT be used at all for persistence.</p>
							#### -->
							<p class="highlight-2">Windows NT/2000/XP(TM)で使われているNTFSは持続性モードにはまったく使えません。</p>

	</div>
	<div class="divider" id="usb-hd">
		<!--- ####
		<h2>Full Installation of sidux on a USB-device</h2>
		#### -->
		<h2>USBドライブにsiduxをインストール</h2>

							<!--- ####
							<p>To do an installation of sidux on a USB-Stick or a USB-HD is as easy as a normal HD-Install now. Just follow this simple guideline.</p>
							#### -->
							<p>USBフラッシュメモリやUSBハードディスクにsiduxをインストールするのはハードディスクへの普通のインストールと同じ位簡単です。 次のガイドラインにしたがいましょう。</p>

							<!--- ####
							<p>The recommended mininmum size of a usb stick is:<br />
							#### -->
							<p>最低限必要なUSBスティックのサイズ:<br />
							<!--- ####
							sidux "LITE" needs 1.2gig PLUS you need data space,<br />
							#### -->
							sidux "LITE" には 最低1.2GBとさらにデータ用のスペースが必要です。<br />
							<!--- ####
							sidux "FULL" needs 2.1gig PLUS you need data space</p>
							#### -->
							sidux "FULL" には 最低2.1GBとさらにデータ用のスペースが必要です。</p>

							<!--- ####
							<p>We start with a normal installation and choose the partition on the USB-device, where sidux is to be installed - we speak of "sda1" here, but this is valid for any other partition on a USB-disk or device.</p>
							#### -->
							<p>普通の場合と同じようにインストールを始め、インストール先のパーティションにUSBドライブを選びます。 ここでは"sda1"と書きますがUSBドライブやその他のデバイスのパーティションも同じように選べます。</p>

							<!--- ####
							<p>The Partition must be formatted with a linux-filesystem. Recommended is the ext3 filesystem. An existing partition will be reformatted by the installer!</p>
							#### -->
							<p>インストール先のパーティションはLinuxのファイルシステムにフォーマットされていなければなりません。 推薦するのはext3ファイルシステムです。 使用されているパーティションもインストーラによってフォーマットされます!</p>

							<!--- ####
							<p class="highlight-2">All data on this partition will be lost during the reformat!</p>
							#### -->
							<p class="highlight-2">このパーティションのデータはすべてリフォーマットによって消されてしまします!</p>


							<!--- ####
							<p>Now you can boot from your USB-HD. 'Boot from USB' must be enabled in your BIOS.</p>
							#### -->
							<p>これでUSBドライブからsiduxを起動できます。 USBドライブから起動するようにBIOSを設定します。</p>

	</div>
	<div class="divider" id="vtbox">
		<!--- ####
		<h2>Installing sidux with VirtualBox</h2>
		#### -->
		<h2>siduxをVirtualBoxにインストールする</h2>
							<!--- ####
							<p>VirtualBox is ideal for 32bit machines. For 64bit use QEMU.</p>
							#### -->
							<p>VirtualBoxは32bitのシステムをVMで使うにはうってつけですが。 64bitの場合QEMUを使います。</p>
						<ul>
								<!--- ####
 							<li>1. create a harddiskimage for VirtualBox</li>
								#### -->
 							<li>1. VirtualBox用のハードディスクイメージを作ります。</li>
								<!--- ####
 							<li>2. boot the iso with VirtualBox</li>
								#### -->
 							<li>2. VirtualBoxをISOファイルから起動します。</li>
								<!--- ####
 							<li>3. install on the image</li>
								#### -->
 							<li>3. ハードディスクイメージにインストールします。</li>
						</ul>

				<!--- ####
				<h4>Requirements</h4>
				#### -->
				<h4>Requirements</h4>
							<!--- ####
							<p><span class="highlight-3">Recommended ram: 1 gig </span>: Ideally 512 MB for the guest and 512 MB for the host. (it can be run on less, but do not expect to have good performance).</p>
							#### -->
							<p><span class="highlight-3">RAMのサイズ: 1GB(推奨) </span>: 理想的にはホストに512MBとゲストに512 MB。 (それ以下のRAMでも使えますが、あまり良いパフォーマンスは期待できません)。</p>

							<!--- ####
							<p><span class="highlight-3">Hard disk space:</span> While VirtualBox itself is very lean (a typical installation will only need about 30 MB of hard disk space), the virtual machines will require fairly huge files on disk to represent their own hard disk storage. So, to install MS Windows XP (TM), for example, you will need a file that will easily grow to several GB in size. To have sidux in VirtualBox you need to allocate a 5 gig image plus a swap allocation.</p>
							#### -->
							<p><span class="highlight-3">ハードディスクスペース:</span> VirtualBoxそのものはとても小さいプログラムです(普通にインストールすれば30MB程度のスペースしか使いません)が、バーチャルマシンはハードディスクの代わりとしてディスク上にかなり大きいファイルを必要とします。 そのため、例えばMS Windows XP(TM)をインストールするには何GBものスペースが必要になるでしょう。 siduxをVirtualBoxのゲストOSとして使うのには５GBのイメージとスワップスペースがあればいいでしょう。</p>

							<!--- ####
							<p class="highlight-3">Make sure to dist-upgrade before you install virtual machine modules after installing a new kernel, or you'll get a gcc mismatch, failed module build error.(This applies to any external module) </p>
							#### -->
							<p class="highlight-3">新しくカーネルをインストールしたあとで、VirtualBoxのモジュールをインストールする前に必ず一度dist-upgradeを行ってください。 gccのバージョンが合っていないとモジュールの構築に失敗します。 (これはモジュールの構築全般について言えることです)</p>

						<!--- ####
						<h4>The mechanism:</h4>
						#### -->
						<h4>作業の手順:</h4>
<!--- ####
<pre>
Install the virtualbox package
Click Applications &gt; System Tools &gt;InnoTek VirtualBox - Virtual Machine
Make a VM, put a Operating System-CD into your CD drive and install.and reboot
</pre>
#### -->
<pre>
virtualboxパッケージのインストール
メニューからApplications &gt; System Tools &gt;InnoTek VirtualBox - Virtual Machineをクリック
バーチャルマシンの作成、OSのCDをCDドライブに入れスタート、インストール、再起動
</pre>

				<!--- ####
				<h3>Installation:</h3>
				#### -->
				<h3>VirtualBoxの(手動)インストール:</h3>
<pre>
apt-get update
apt-get install virtualbox-ose 
m-a a-i virtualbox-ose
</pre>

							<!--- ####
							<p>Then you store the information identifying the current operating system in the structure:</p> 
							#### -->
							<p>現行のOSの情報(カーネルバージョン)を次の形で記録します:</p> 
	<!-- echo virtualbox-ose-module-$(uname -r) -->
<pre>
virtualbox-ose-module-$(uname -r)
</pre>
							<!--- ####
							<p class="highlight-3">You will need to do the following:</p>
							#### -->
							<p class="highlight-3">新しいユーザーvboxusersを加える必要があります:</p>
<pre>
adduser &lt;username&gt; vboxusers 
</pre>

					<!--- ####
					<h3>Installing sidux to the virtual machine</h3>
					#### -->
					<h3>siduxをバーチャルマシンにインストールする</h3>
							<!--- ####
							<p>Use virtualbox's wizard to create a new virtual machine for sidux. then follow the instructions for a regular sidux-installation.</p>
							#### -->
							<p>VirtualBoxのウィザードを使ってsiduxが使うバーチャルマシンを作り、続いて通常のsiduxのインストールの手順を踏みます。</p>

							<!--- ####
							<p><a href="http://www.virtualbox.org/">VirtualBox has a comprehesive PDF Help, that you can download</a> </p>
							#### -->
							<p><a href="http://www.virtualbox.org/">VirtualBoxにはダウンロードできる詳しいヘルプPDFがあります</a> </p>

				<!--- ####
				<h3>Automated installation with svmi</h3>
				#### -->
				<h3>svmiを使って自動インストール</h3>
							<!--- ####
							<p>svmi is started by sidux-scripts. You can run the options manually, or use the auto install feature, non interactive mode, see <span class="highlight-3">svmi -h for autoinstall options</span>. svmi makes the vbox kernel module, it updates modules, it adds it to /etc/modules so it will start automatically (otherwise vbox won't run on reboot), and updates 'adduser'. To activate smvi as root in a konsole/terminal:</p>
							#### -->
							<!--- ####</span>
							#### -->
							<p>svmiはsidux-scriptsからスタートします。対話的にオプションを一つ一つ選んで実行する方法と、一気に自動インストールする方法とがあります。<span class="highlight-3">svmi -h</span> の表示の自動インストールオプションを見てください。svmiはvboxのカーネルモジュールを作成し、/etc/modulesに加え(これによって起動の際に自動的にスタートするようになります)さらに必要なユーザーを加えVirtualboxの作動環境を整えます。svmiを実行するにはrootとしてコンソールから:</p>
<pre>
svmi
</pre>

							<p>と入力します。</p>

		<div class="screenshot"><img src="../lib/images-ja/smxi-ja/smxi_virtual-ja.png" alt="smxi_virtual" /></div>


	</div>
	<div class="divider" id="qemu">
		<!--- ####
		<h2>Installing sidux with QEMU</h2>
		#### -->
		<h2>QEMUにsiduxをインストールする</h2>

		<ul>
				<!--- ####
 			<li>1. create a harddiskimage for QEMU</li>
				#### -->
 			<li>1. QEMUのためのハードディスクイメージを作る。</li>
				<!--- ####
 			<li>2. boot the iso with QEMU</li>
				#### -->
 			<li>2. QEMUをISOから起動する。</li>
				<!--- ####
 			<li>3. install on the image</li>
				#### -->
 			<li>3. ハードディスクイメージにインストールする。</li>
		</ul>

				<!--- ####
 			<h4>Creating the hard disk image</h4>
				#### -->
 			<h4>ハードディスクイメージを作る</h4>

				<!--- ####
				<p>To run qemu you will probably need a hard disk image. This is a file which stores the contents of the emulated hard disk.</p>
				#### -->
				<p>QEMUを使うためにはハードディスクイメージを作る必要があります。 このファイルをハードディスクの代わりとしてバーチャルマシンのファイルを保存するために使います。</p>

				<!--- ####
				<p>Use the command:</p>
				#### -->
				<p>そのためには:</p>
<pre>
qemu-img create -f qcow sidux.qcow 3G
</pre>
				<!--- ####
				<p>To create the image file named "sidux.qcow". The "3G" parameter specifies the size of the disk - in this case 3 GB. You can use suffix M for megabytes (for example "256M"). You shouldn't worry too much about the size of the disk - the qcow format compresses the image so that the empty space doesn't add up to the size of the file.</p>
				#### -->
				<p>このコマンドで"sidux.qcow"という名のイメージファイルtを作ります。 "3G"というパラメータはディスクのサイズ-この場合３GBを指定しています。 Mを使えばメガバイトの表示も使えます(例、"256M"とかけば256MB) あまりイメージサイズを気にすることはありません。 qcowフォーマットはイメージを圧縮するため空白のスペースのためにファイルが大きくなってしまうことはありません。</p>

			<!--- ####
			<h4>Installing the operating system</h4>
			#### -->
			<h4>オペレーションシステムのインストール</h4>

				<!--- ####
				<p>This is the first time you will need to start the emulator. <span class="highlight-3">One thing to keep in mind: when you click inside qemu window, the mouse pointer is grabbed. To release it press :</span></p>
				#### -->
				<p>初めてエミュレータを使うとき<span class="highlight-3">注意すべきこと: 一度QEMUのウィンドウの中をクリックするとマウスはバーチャルマシンに捕まります。 これを解放するには:</span></p>

<pre>
Ctrl+Alt
</pre>

				<!--- ####
				<p>If you need to use a bootable floppy, run Qemu with:</p>
				#### -->
				<p>起動フロッピーが必要ならばQEMUを次のコマンドで起動します:</p>
<pre>
qemu -floppy sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
				<!--- ####
				<p>If your CD-ROM is bootable, run Qemu with:</p>
				#### -->
				<p>CD-ROMから起動できる場合はQEMUを次のコマンドで起動します:</p>
<pre>
qemu -cdrom sidux.iso -net nic -net user -m 512 -boot d sidux.qcow
</pre>
				<!--- ####
				<p>Now install sidux as if you were going to install it on a real HD</p>
				#### -->
				<p>siduxを本物のハードディスクへの場合と同じ用にインストールします</p>


			<h4>システムの作動</h4>

				<p>システムを作動するには単純に:</p>
<pre>
qemu [hd_image]
</pre>
				<!--- ####
				<p>A good idea is to use overlay images. This way you can create hard disk image once and tell Qemu to store changes in external file. You get rid of all the instability, because it is so easy to revert to previous system state.</p>
				#### -->
				<p>オーバーレイイメージを使ってみるのもいい考えです。 この方法だと一度ハードディスクイメージを作って、その後の変化は外部のファイルに保存します。 何か問題が起こったとき簡単に以前の状態に戻せるため安定して使うことができます。</p>

				<!--- ####
				<p>To create an overlay image, type:</p>
				#### -->
				<p>オーバーレイイメージを作るには:</p>
<pre>
qemu-img create -b [[base''image]] -f qcow [[overlay''image]]
</pre>
				<!--- ####
				<p>Substitute the hard disk image for base_image (in our case sidux.qcow). After that you can run qemu with:</p>
				#### -->
				<p>ハードディスクイメージをベースイメージ(ここではsidux.qcow)と取り替えます。 これから先はQEMUをスタートするのに:</p>
<pre>
qemu [overlay_image]
</pre>
				<p>のコマンドを使います。</p>
				<!--- ####
				<p>The original image will be left untouched. One hitch, the base image cannot be renamed or moved, the overlay remembers the base's full path.</p>
				#### -->
				<p>もとのイメージはそのまま手をつけずに保存されます。 このベースイメージの名前と場所はオーバーレイに記憶されるので、けっして変更してはいけません。</p>


			<!--- ####
			<h4>Using any real partition as the single primary partition of a hard disk image</h4>
			#### -->
			<h4>本当のパーティションをハードディスクイメージのプライマリパーティションとして使う</h4>

				<!--- ####
				<p>Sometimes, you may wish to use one of your system partition from within qemu (for instance, if you wish booting both your real machine or qemu using a given partition as root). You can do this using software RAID in linear mode (you need the linear.ko kernel driver) and a loopback device: the trick is to dynamically prepend a master boot record (MBR) to the real partition you wish to embed in a qemu raw disk image.</p>
				#### -->
				<p>時にはシステムパーティションの一つをQEMUの内部から使いたいことがあります。 (同じパーティションをルートとして実際に起動したりQEMUから起動したりしたい場合など)。 ソウトウェアRAIDをリニアモードで使い(そのためにはカーネルモジュールlinear.koが必要です)合わせてループバックデバイスを使うことで実現できます: QEMUのディスクイメージに埋め込みたい本物のパーティションの先頭にマスターブートレコード(MBR)をダイナミックに差し込むのがトリックです。</p>

				<!--- ####
				<p>Suppose you have a plain, unmounted /dev/hdaN partition with some filesystem on it you wish to make part of a qemu disk image. First, you create some small file to hold the MBR:</p>
				#### -->
				<p>仮にまだマウントされていないパーティション /dev/hdaN があって、何らかのファイルシステムにフォーマットされていて、これをQEMUのディスクイメージの一部に取り込みたいとします。 まず、MBRを保持する小さいファイルを作ります:</p>
<pre>
dd if=/dev/zero of=/path/to/mbr count=32
</pre>
				<!--- ####
				<p>Here, a 16 KB (32 * 512 bytes) file is created. It is important not to make it too small (even if the MBR only needs a single 512 bytes block), since the smaller it will be, the smaller the chunk size of the software RAID device will have to be, which could have an impact on performance. Then, you setup a loopback device to the MBR file:</p>
				#### -->
				<p>これで16 KB(32x512バイ)のファイルが作られました。 (MBRが必要なのは512バイトブロックが一つだけではあるけれど)このファイルのサイズが小さすぎないことが大切です。 あまり小さいとソフトウェアRAIDデバイスのチャンクサイズも小さくなってしまい、パフォーマンスに影響がでます。 ではMBRファイルのループバックデバイスを設定します:</p>
<pre>
losetup -f /path/to/mbr
</pre>
				<!--- ####
				<p>Let's assume the resulting device is /dev/loop0, because we wouldn't already have been using other loopbacks. Next step is to create the "merged" MBR + /dev/hdaN disk image using software RAID:</p>
				#### -->
				<p>すでにループデバイスが存在するとは限らないので仮にこれから作るループデバイスを /dev/loop0 としましょう。 次のステップはソフトウェアRAIDを使ってMBRとディスクイメージ/dev/hdaNを合併することです:</p>
<pre>
 modprobe linear
 mdadm --build --verbose /dev/md0 --chunk=16 --level=linear --raid-devices=2 /dev/loop0 /dev/hdaN
</pre>
				<!--- ####
				<p>The resulting /dev/md0 is what you will use as a qemu raw disk image (don't forget to set the permissions so that the emulator can access it). The last (and somewhat tricky) step is to set the disk configuration (disk geometry and partitions table) so that the primary partition start point in the MBR matches the one of /dev/hdaN inside /dev/md0 (an offset of exactly 16 * 512 = 16384 bytes in this example). Do this using fdisk on the host machine, not in the emulator: the default raw disc detection routine from qemu often results in non kilobyte-roundable offsets (such as 31.5 KB, as in the previous section) that cannot be managed by the software RAID code. Hence, from the the host:</p>
				#### -->
				<p>こうして作られた /dev/md0 をQEMUのディスクイメージファイルとして使います。 (エミュレータがアクセスで切るようにパーミッションを設定するのを忘れないように)。 最後の(一番トリッキーな)ステップはディスク設定(ディスクの形状とパーティションテーブル)においてMBRのプライマリパーティションのスタートポイントが /dev/md0 のなかの /dev/hdaN のポイントと一致するように(この例ではオフセットが16 x 512 = 16384バイトちょうどになるように)設定することです。 この作業はエミュレータの中では行わず、ホストマシーンの上でfdiskを使って行いましょう。 QEMUのデフォルトのロウディスク認識ルーチンはしばしばキロバイトで割り切れないオフセット(上の例だと31.5Kb)を出力するため、ソフトウェアRAIDコードでは扱えません。 だからホスト上で行います:</p>
<pre>
 fdisk /dev/md0
</pre>
				<!--- ####
				<p>There, create a single primary partition corresponding to /dev/hdaN, and play with the 's'ector command from the 'x'pert menu until the first cylinder (where the first partition starts), matches to the size of the MBR. Finally, 'w'rite the result to the file: you are done. You know have a partition you can mount directly from your host, as well as part of a qemu disk image:</p>
				#### -->
				<p>このプラグラムで /dev/hdaN に対応する単一のプライマリパーティションを作成し、XpertメニューのSectorコマンドを試しながら最初のシリンダ(初めのセクターが始まるところ)ばMBRのサイズと一致する設定を探し、Writeコマンドで結果を書き込んで終わりです。 これでこのパーティションをホストからでもQEMUのディスクイメージの一部としてでも使えるようになりました:</p>
<pre>
 qemu -hdc /dev/md0 [...]
</pre>
				<!--- ####
				<p>You can of course safely set any bootloader on this disk image using qemu, provided the original /boot/hdaN partition contains the necessary tools.</p>
				#### -->
				<p>もちろんこのディスクイメージにQEMUを使って(元の/boot/hdaNパーティションに必要なツールさえあれば)どんなブートローダでも設定できます。</p>


			<!--- ####
			<h4>Using the QEMU Accelerator Module</h4>
			#### -->
			<h4>QEMUのアクセレータモジュールを使う</h4>

				<!--- ####
				<p>The developers of qemu have created an optional kernel module to accelerate qemu to sometimes near native levels. This should be loaded with the option</p>
				#### -->
				<p>QEMUの開発者はQEMUを時にはネイティブに近い早さまで加速する追加のカーネルモジュールを作っています。 これをロードするには:</p>
<pre>
major=0
</pre>
				<!--- ####
				<p>to automate the creation of the required /dev/kqemu device. The following command</p>
				#### -->
				<p>必要な/dev/kqemuデバイスを自動的につくるには:</p>
<pre>
echo "options kqemu major=0" >> /etc/modprobe.conf
</pre>
				<!--- ####
				<p>This will amend modprobe.conf to ensure that the module option is added every time the module is loaded.</p>
				#### -->
				<p>このコマンドでmodprobe.confを修正して、モジュールがロードされる度にこのオプションが追加されるように設定されます。</p>

<pre>
qemu [...] -kernel-kqemu
</pre>
				<!--- ####
				<p>This enables full virtualization and thus improves speed considerably.</p>
				#### -->
				<p>これで最大限のヴぁ-チャリЗ書んになりスピードがかなり早くなります。</p>

			<!--- ####
			<h4>To activate qemu:</h4>
			#### -->
			<h4>qemuをアクティブにするには:</h4>
<pre>
qemu -cdrom /tmp/pkg/sidux-debug.iso -net nic -net user -m 512
</pre>
		<!--- ####
		<p><a href="http://fabrice.bellard.free.fr/qemu/qemu-doc.html">QEMU Project </a> </p>
		#### -->
		<p><a href="http://fabrice.bellard.free.fr/qemu/qemu-doc.html">QEMUプロジェクトの公式ドキュメント </a> </p>
		<!--- ####
		<p><a href="http://wiki2.archlinux.org/index.php/Qemu">Some content for QEMU for the sidux-manual was accessed off this site under GNU Free Documentation License 1.2 and modified for the sidux-manual</a> </p>
		#### -->
		<p><a href="http://wiki2.archlinux.org/index.php/Qemu">QEMUについての内容の一部はこのサイトからGNU Free Documentation License 1.2に基づいて取得されsidux-manual用に変更されています</a> </p>

		
	</div>
	<div id="rev">Page last revised 22/05/2008 0800 UTC</div>

</div>
</body>
</html>
