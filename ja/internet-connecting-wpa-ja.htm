<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="ja">
<head>
	<title>sidux Manuals - Internet/Network WiFi WPA-Supplicant</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<style type="text/css" media="all">@import url("../lib/css-js/content.css");</style>
        <style type="text/css" media="all">@import url("../lib/css-js/menu.css");</style>
        <style type="text/css" media="print">@import url("../lib/css-js/print.css");</style>
        <link rel ="shortcut icon" href="../lib/favicon/manual.ico" />
        <script type="text/javascript" src="../lib/css-js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-6_override.css">
        <![endif]-->
</head>
<body>
<!-- Last translation revision by muchan 09/Oct/2008 23:20 UTC -->
<div id="menu"><!-- menu starts here ja lang maintainer muchan-->
<!--sidux-manual Operating System Manual menu-version-01.97.2009.11.23 -->
<!-- menu last updated by bluewater 2009.11.23 0300 hrs UTC -->
	<div id="menu-header">
	      <a href="http://sidux.com/"><img src="../lib/logos/manual-sidux-logo.png" title="To sidux.com, Forum and Wiki" alt="logo" /></a>
	</div>
	<ul id="top-list">
		<li><a href="manual-search-ja.htm#search-on"><img src="../lib/logos/manual-search-22x22.png" title="Search Manual" alt="Search" /> サーチ Online Offline</a> </li>
		<li><a href="http://manual.sidux.com/meta-manual">Community Software Selections</a></li>
	</ul>
	<div id="flags-2">
			<a href="../flag-index.html"><img src="../lib/logos/sidux-lang-100x64.png" title="Choose another language" alt="lang-switch" /></a>
	</div>
	<ul>
		<li  onmouseover="showHide( 1 );" onmouseout="startTime();" ><a href="welcome-ja.htm">sidux OSマニュアル</a>
			<ul class="sub-menu" id="sm1">
				<li><a href="welcome-ja.htm#welcome-gen">sidux OSマニュアル</a></li>
				<li><a href="welcome-ja.htm#how-to">このマニュアルの使い方</a></li>
				<li><a href="welcome-ja.htm#table-contents">内容一覧</a></li>
				<li><a href="help-ja.htm#help-gen">困った時は...</a></li>
				<li><a href="help-ja.htm#paste">IRC !paste</a></li>
				<li><a href="credits-ja.htm#cred-team">siduxチーム</a></li>
				<li><a href="wel-quickstart-ja.htm#welcome-quick">sidux Quick Start Guide</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 2 );" onmouseout="startTime();" ><a href="cd-dl-burning-ja.htm">ISO Content, Releases, Download Mirrors and Burning</a>
			<ul class="sub-menu" id="sm2">
				<li><a href="cd-content-ja.htm#cd-content">ISO Content and system requirements</a></li>
				<li><a href="sys-admin-release-ja.htm#rolling">ローリングノート</a></li>
				<li><a href="cd-dl-burning-ja.htm#download-sidux">siduxのミラー, ダウンロードとISOの作成</a></li>
				<li><a href="cd-dl-burning-ja.htm#md5">md5のチェックサム</a></li>
				<li><a href="cd-dl-burning-ja.htm#burn-nero">WindowsでISOを焼くには</a></li>
				<li><a href="cd-dl-burning-ja.htm#burn-linux">LinuxでISOを焼くには</a></li>
				<li><a href="cd-no-gui-burn-ja.htm#burning-no-gui">burniso スクリプト</a></li>
				<li><a href="cd-no-gui-burn-ja.htm#burning-no-gen">GUIなしでISOを焼くには</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 3 );" onmouseout="startTime();" ><a href="live-mode-ja.htm">Live Mode</a>
			<ul class="sub-menu" id="sm3">
				<li><a href="live-mode-ja.htm#rootpw">sidux-LiveISOのRootパスワード</a></li>
				<li><a href="live-mode-ja.htm#live-cd-installsoft">Live-ISO作動中にソフトをインストール</a></li>
				<li><a href="live-mode-ja.htm#ntfs-3g">ntfs-3gを使ってNTFSパーティションに書く</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 4 );" onmouseout="startTime();" ><a href="term-konsole-ja.htm">ターミナル/コンソール</a>
			<ul class="sub-menu" id="sm4">
				<li><a href="term-konsole-ja.htm#sux">  sux / sudo</a></li>
				<li><a href="term-konsole-ja.htm#term-kon"> ターミナル/コンソール</a></li>
				<li><a href="term-konsole-ja.htm#cli-help">コマンドラインヘルプCommand Line Help</a></li>
				<li><a href="help-ja.htm#init3-tools">Tools to know in text mode (tty) - init 3</a></li>
				<li><a href="term-konsole-ja.htm#term-cmds">Linuxターミナルのコマンド一覧</a></li>
				<li><a href="term-konsole-ja.htm#shell-scripts">Scripts.shのインストール</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 5 );" onmouseout="startTime();" ><a href="cheatcodes-ja.htm">チートコード</a>
			<ul class="sub-menu" id="sm5">
				<li><a href="cheatcodes-ja.htm#cheatcodes">siduxだけのLive-ISO用チートコード</a></li>
				<li><a href="cheatcodes-ja.htm#cheatcodes-linux">Linux一般のチートコード</a></li>
				<li><a href="cheatcodes-vga-ja.htm#vga">VGAコード</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 6 );" onmouseout="startTime();" ><a href="part-gparted-ja.htm">ハードディスクのパーティショニング</a>
			<ul class="sub-menu" id="sm6">
				<li><a href="part-gparted-ja.htm#partition">GPartedでHDをパーティショニング</a></li>
				<li><a href="part-gparted-ja.htm#ntfs">GPartedでNTFSパーティションのサイズ変更</a></li>
				<li><a href="part-uuid-ja.htm#uuid">UUID, パーティションのラベルとfstab</a></li>
				<li><a href="part-cfdisk-ja.htm#disknames">ディスクの名前について</a></li>
				<li><a href="part-cfdisk-ja.htm#partition">cfdiskでHDをパーティショニング</a></li>
				<li><a href="part-cfdisk-ja.htm#formating">cfdiskでパーティション後のフォーマッティング</a></li>
				<li><a href="part-size-examp-ja.htm#part-example">パーティションの例</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 7 );" onmouseout="startTime();" ><a href="hd-install-ja.htm">インストールオプション</a>
			<ul class="sub-menu" id="sm7">
				<li><a href="hd-install-ja.htm#Inst-prep">インストールの準備</a></li>
				<li><a href="hd-install-ja.htm#Installation"> HDへのインストール</a></li>
				<li><a href="hd-install-ja.htm#first-hd-boot">初めての起動</a></li>
				<li><a href="hd-install-opts-ja.htm#fromiso">'fromiso'からの起動</a></li>
				<li><a href="hd-install-opts-ja.htm#fromiso-persist">fromisoと持続モード</a></li>
				<li><a href="hd-install-opts-ja.htm#usb-hd">USB-HDへのインストール</a></li>
				<li><a href="hd-install-opts-ja.htm#vtbox">VirtualBoxにsiduxをインストール</a></li>
				<li><a href="hd-install-opts-ja.htm#qemu">QEMUにsiduxをインストール</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 8 );" onmouseout="startTime();" ><a href="hw-dev-hw-dri-ja.htm">グラフィックカード ハードウェアデバイスとドライバ  &amp; Xorg</a>
			<ul class="sub-menu" id="sm8">
				<li><a href="hw-dev-hw-dri-ja.htm#hd-ntfs3g">ntfs-3gを使ってNTFSパーティションに書く</a></li>
				<li><a href="hw-dev-mon-ja.htm#mon-res">モニターとスクリーンの解像度</a></li>
				<li><a href="hw-dev-mon-ja.htm#xrandr">デュアルモニターとxrandr</a></li>
				<li><a href="hw-dev-mon-ja.htm#mon-binary">デュアルモニター(バイナリー)</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free-3d">Nvidiaと用のバイナリーnon-freeドライバー  &amp; xorg.conf</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free-3d-2">non-free drivers for ATI, Radeon and others</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free-firmware">Hardware needing non-free firmware drivers</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#non-free">Adding non-free to Sources List</a></li>
				<li><a href="hw-dev-hw-dri-ja.htm#native-nv-ati">FOSS xorg drivers for nVidia, ATI, Radeon, Intel &amp; xorg.conf</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 9 );" onmouseout="startTime();" ><a href="wm-kde-ja.htm">ウィンドウマネージャ</a>
			<ul class="sub-menu" id="sm9">
				<li><a href="wm-xfce-ja.htm#xfce-notes">Useful Xfce extras</a></li>
				<li><a href="wm-kde-ja.htm#install-add">Useful extra KDE Apps</a></li>
				<li><a href="wm-kde-ja.htm#desk-freeze">デスクトップが反応しなくなった時は</a></li>
				<li><a href="wm-kde-ja.htm#kde-login">Cant login in KDEにログインできない時は</a></li>
				<li><a href="wm-kde-ja.htm#ch-th">Themesの変更</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 10 );" onmouseout="startTime();" ><a href="lamp-apache-ja.htm">siduxのLAMPセット</a>
			<ul class="sub-menu" id="sm10">
				<li><a href="lamp-apache-ja.htm#serv-apache">siduxのLAMPセット</a></li>
				<li><a href="lamp-apache-ja.htm#serv-ftp">FTPクライアント</a></li>
				<li><a href="lamp-apache-ja.htm#serv-sec">セキュリティプロトコル</a></li>
				<li><a href="lamp-apache-ja.htm#serv-ssl">SSL</a></li>
				<li><a href="lamp-sql-ja.htm#serv-mysql">MySQLの設定</a></li>
				<li><a href="lamp-ppp-ja.htm#serv-php">ApacheとPHP</a></li>
				<li><a href="ntp-server-ja.htm#ntp-server">タイムサーバーの設定</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 11 );" onmouseout="startTime();" ><a href="internet-connecting-ja.htm">インターネット/ネットワーク</a>
			<ul class="sub-menu" id="sm11">
				<li><a href="tor-privoxy-ja.htm#tor">Tor</a></li>
				<li><a href="tor-privoxy-ja.htm#privoxy">Privoxy</a></li>
				<li><a href="internet-connecting-ja.htm#firewalls">Firewalls</a></li>
				<li><a href="samba-ja.htm#configure">SAMBAの環境設定 (Windowsとの接続)</a></li>
				<li><a href="samba-ja.htm#setup">SAMBAサーバーの設定</a></li>
				<li><a href="ssh-ja.htm#ssh-fs">SSH リモートマウント</a></li>
				<li><a href="ssh-ja.htm#ssh-x">SSHを通じてX Windowのアプリを</a></li>
				<li><a href="ssh-ja.htm#ssh-f">KonquerorでGUIのSSH</a></li>
				<li><a href="ssh-ja.htm#ssh-w">WindowsのPCからSSH X フォワーディング</a></li>
				<li><a href="ssh-ja.htm#ssh">SSHとセキュリティ</a></li>
				<li><a href="internet-connecting-ja.htm#dial-mod">56kモデム</a></li>
				<li><a href="internet-connecting-wpagui-ja.htm#wpa-roaming-gui">WiFi - roaming WPA-GUI</a></li>
				<li><a href="internet-connecting-wpa-ja.htm#wpa-basic">WiFi - Basic setup guide</a></li>
				<li><a href="internet-connecting-wpa-ja.htm#wpa">WiFi - wpasupplicant</a></li>
				<li><a href="internet-connecting-ja.htm#netcardconfig">インターネットに接続 -Ceni</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 12 );" onmouseout="startTime();" ><a href="sys-admin-apt-ja.htm">dist-upgrade とパッケージ管理</a>
			<ul class="sub-menu" id="sm12">
				<li><a href="sys-admin-apt-ja.htm#apt-cook">APTの手引き、ソースリストについて</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-install">新しいパッケージのインストール</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-delete">パッケージの除去</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-downgrade">ダウングレードとホールド</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-cache">apt-cacheでパッケージをさがす</a></li>
				<li><a href="sys-admin-apt-ja.htm#gui-pacsea">GUI Package searching</a></li>
				<li><a href="siduxcc-ja.htm#hermes">sidux-hermes</a></li>
				<li><a href="sys-admin-upgrade-ja.htm#live-cd-upgrade">アップグレード用のLive- ISO</a></li>
				<li><a href="sys-admin-apt-locarmirr-ja.htm#approx">dist-upgrade of multiple PCs on a LAN</a></li>
				<li><a href="sys-admin-kern-upg-ja.htm#kern-upgrade">カーネルのアップグレード</a></li>
				<li><a href="sys-admin-apt-ja.htm#apt-upgrade">システムのアップグレード -- dist-upgrade - Overview</a></li>
				<li><a href="sys-admin-apt-ja.htm#du-st">システムのアップグレード -- dist-upgrade - The Steps</a></li>
			</ul>
		</li>
		<li  onmouseover="showHide( 13 );" onmouseout="startTime();" ><a href="sys-admin-gen-ja.htm">システムアドミン</a>
			<ul class="sub-menu" id="sm13">
				<li><a href="hd-install-ja.htm#adduser">Adding a new user</a></li>
				<li><a href="home-ja.htm#home-bu">Moving /home</a></li>
				<li><a href="siduxcc-ja.htm#siduxcc">sidux Control Centre</a></li>
				<li><a href="sys-admin-rdiff-ja.htm#rdiff">rdiffでバックアップ</a></li>
				<li><a href="sys-admin-rsync-ja.htm#rsync">rsyncでバックアップ</a></li>
				<li><a href="vir-rkits-ja.htm#virus-rkits">ウィルスとルートキットスキャナ</a></li>
				<li><a href="sys-admin-gen-ja.htm#start-services">サービスの自動スタート設定</a></li>
				<li><a href="sys-admin-gen-ja.htm#pw-lost">rootパスワードを忘れたら</a></li>
				<li><a href="sys-admin-gen-ja.htm#fonts">フォント</a></li>
				<li><a href="sys-admin-gen-ja.htm#cups">CUPS - Printing System</a></li>
				<li><a href="sys-admin-gen-ja.htm#sound">Sound Mixers</a></li>
				<li><a href="sys-admin-gen-ja.htm#init">siduxのランレベル - init</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#mbr-grub-boot">MBR ブートセクターへの上書き</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#dual-boot">デュアルブートまたはマルチブート</a></li>
				<li><a href="bios-freedos-ja.htm#bois-prep">FreeDOSでBIOSのアップグレード</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#boot-grub-floppy">ブート・フロッピーの作成</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#remove-grub">MBRからGRUBを消去する</a></li>
				<li><a href="sys-admin-grub-bootman2-ja.htm#what-is-grub">Grub - ブートマネージャ</a></li>
			</ul>
		</li>
	</ul>
<!-- menu ends here --> </div>
<div id="main-page">
	<div class="divider" id="wpa-basic">
<!--- ####
		<h2 id="top-header" >Basic Guide To Get Wireless Working - WiFi</h2>
#### -->
		<h2 id="top-header" >無線LANの基本 - WiFi</h2>

<!--- ####
							<p class="highlight-3">Due to the complexity of law, sidux will only provide dfsg-free software, <a href="hw-dev-hw-dri-ja.htm#non-free">please check this link for additional information on non-free sources for firmware</a></p>
#### -->
							<p class="highlight-3">法律的な理由のためsiduxはdfsg-freeのソフトウェアだけを提供しています。 <a href="hw-dev-hw-dri-ja.htm#non-free">non-freeのファームウェアについての詳細はこのリンクをチェックしてください。</a></p>

<!--- ####
							<p>To get wlan WiFi working, you need a wired connection for just a few minutes to download the appropriate firmware.</p>
#### -->
							<p>無線LANが使えるようにするためには、必要なファームウェアをダウンロードするため数分間、無線でないインターネットに接続する必要があります。</p>

<!--- ####
							<p>If a wired connection is not possible you will have to put the firmware on a removable device (pendrive e.g.) and install it as root from there using:</p>
#### -->
							<p>無線でない接続ができない場合はファームウェアをフラッシュドライブなど外部デバイスに保存し、rootとして次のコマンドでインストールします:</p>
<pre>
#dpkg -i &lt;firmware.deb&gt;
</pre>

<!--- ####
							<p>To find the appropriate firmware without knowing the make or brand of your wireless chip, you can use the command:</p>
#### -->
							<p>搭載されている無線LANチップのブランドや型番などの知識なしで必要なファームウェアを知るためには次のコマンドを使います。</p>
<pre>
#fw-detect
</pre>
<!--- ####
							<p>This will give you the following information:</p>
#### -->
							<p>次のような出力が表示されます:</p>
<pre>
#apt-get update
#apt-get install &lt;name of firmware&gt;
#modprobe -r &lt;modulename&gt;
#modprobe &lt;modulename&gt;
</pre>



							<p>Use the apt-get install line that fw-detect command gave you. After that is done, you need to issue some commands in konsole before configuring the device.</p>

							<p>別の方法として、fw-detectが表示したapt-getのコマンドを使ってインストールすることもできます。ただファームウェアを使える用にするためにその後コンソールでいくつかコマンドを実行する必要があります。</p>

<!--- ####
							<p>You have to load the module now in order to be able to configure your device.</p>
#### -->
							<p>デバイスを設定するためまずモジュールをインストールします。</p>

<!--- ####
							<p>As root in konsole do:</p>
#### -->
							<p>コンソールでrootとして:</p>
<pre>
modprobe -r &lt;モジュール名&gt;

modprobe &lt;モジュール名&gt;
</pre>
<!--- ####
							<p>As &lt;modulename&gt; uses the info that fw-detect gave you before. A helpful function of Konsole can be used here: bash completion: <br />
#### -->
							<p>&lt;モジュール名&gt;のところにfw-detectが表示したモジュール名を使います。その際コンソールで便利な機能、bashのコマンドコンプリーションが使えます。<br />
<!--- ####
							If you just write the first few letters of &lt;modulename&gt; and then hit the TAB key, it completes the module name (e.g. modprobe ipw TAB key) That also prevents misspelling.</p>
#### -->
							&lt;モジュール名&gt;の最初の文字をいくつかタイプしたところでTABキーを押すと、モジュール名の残りが自動的の表示されます。(例: modprobe ipw TABキー)こうすれば綴りの間違いを避けることができます。</p>

<!--- ####
							<p>Both modprobe commands dont give any output if successful, so if the normal prompt returns, the module got loaded fine.</p>
#### -->
							<p>modprobeのコマンドは成功の場合どちらも何も表示しません。もし次のプロンプトだけが表示されたらモジュールがちゃんとロードされたということです。</p>

<!--- ####
							<p>You can check this with:</p>
#### -->
							<p>これを確かめるには:</p>
<pre>
#lsmod | grep &lt;module&gt;
</pre>

							
<!--- ####
							<p>Now start Ceni from K-Menu - Internet or run it from konsole as root with <a href="internet-connecting-ja.htm#netcardconfig">Getting Online - Ceni</a>. Your wireless WiFi device should be shown now and is ready to be configured.</p>
#### -->
							<p>ここでK-Menu - InternetからCeniを実行します、またはコンソールからrootとしてCeniをスタートしてもかまいません。<a href="internet-connecting-ja.htm#netcardconfig">Getting Online - Ceni</a>. 搭載された無線LANデバイスが表示され、設定ができるようになっているはずです。</p>

<!--- ####
							<p>To set up a Wlan WiFi GUI see <a href="internet-connecting-wpagui-ja.htm#wpa-roaming-gui">WiFi - roaming WPA-GUI</a></p>
#### -->
							<p>無線LANをGUIで設定するには<a href="internet-connecting-wpagui-ja.htm#wpa-roaming-gui">WiFi - roaming WPA-GUI</a>を見てください。</p>
	</div>	
	<div class="divider" id="wpa">
<!--- ####
		<h2>Modes of Operation in wpasupplicant for Debian</h2>
#### -->
		<h2>Debianのwpasupplicantの使い方</h2>

<!--- ####
							<p class="highlight-3">Due to the complexity of law, sidux will only provide dfsg-free software, <a href="hw-dev-hw-dri-en.htm#non-free">please check this link for additional information on non-free sources for firmware</a></p>
#### -->
							<p class="highlight-3">法律的な理由のためsiduxはdfsg-freeのソフトウェアだけを提供しています。 <a href="hw-dev-hw-dri-ja.htm#non-free">non-freeのファームウェアについての詳細はこのリンクをチェックしてください。</a></p>

<!--- ####
							<p>The Debian wpasupplicant package provides two (2) convenient modes of operation that are closely integrated to the core networking infrastructure; ifupdown.</p>
#### -->
							<p>Debianの wpasupplicantパッケージはネットワークインフラストラクチャーの中核であるifupdownと密接に統合された二つの便利な使い方を提供します。</p>

<!--- ####
			<h4>Whats Covered</h4>
#### -->
			<h4>目次</h4>
　
<!--- ####
					<h6>1.  Specifying the wpa_supplicant driver backend</h6>
#### -->
					<h6>1.  wpa_supplicantドライバのバックエンドを指定する</h6>
<!--- ####
          						<p>* Table of supported drivers<br />
#### -->
          						<p>* サポートされているドライバ<br />
<!--- ####
         						* Common Driver Recommendations </p>
#### -->
         						* よく使われ推薦できるドライバ </p>

<!--- ####
					<h6>2. Mode #1: Managed Mode</h6>
#### -->
					<h6>2. Mode #1: マネージドモード</h6>
<!--- ####
          						<p>* Examples<br />
#### -->
          						<p>* 例<br />
<!--- ####
          						* Table of Common Options<br />
#### -->
          						* よく使われるオプション一覧<br />
<!--- ####
          						* Important Notes About Managed Mode<br />
#### -->
          						* マネージドモードについての重要事項<br />
<!--- ####
          						* How It Works </p>
#### -->
          						* 動作のしくみ</p>

<!--- ####
					<h6>3. Mode #2: Roaming Mode</h6>
#### -->
					<h6>3. Mode #2: ローミングモード</h6>
          						<p>* wpa_supplicant.conf<br />
          						* /etc/network/interfaces<br />
<!--- ####
          						* Interacting with wpa_supplicant with wpa_cli and wpa_gui<br />
#### -->
          						* wpa_supplicantをwpa_cliやwpa_guiで設定する<br />
<!--- ####
          						* Controlling the Roaming Daemon with wpa_action<br />
#### -->
          						* ローミングデーモンをwpa_actionでコントロールする<br />
<!--- ####
          						* Fine Tuning the Roaming Setup<br />
#### -->
          						* ローミングの微細設定<br />
<!--- ####
          						* The Logfile<br />
#### -->
          						* ログファイル<br />
<!--- ####
          						* Using External Mapping Scripts (e.g. guessnet)<br />
#### -->
          						* 外部のマッピングスクリプト(guessnetなど)を使う<br />
<!--- ####
          						* /etc/network/interfaces with external mapping</p>
#### -->
          						* /etc/network/interfacesと外部マッピング</p>

<!--- ####
					<h6>4. Troubleshooting</h6>
#### -->
					<h6>4. 困ったとき</h6>
<!--- ####
          						<p>* Hidden ssids</p>
#### -->
          						<p>* 隠れssids</p>

<!--- ####
					<h6>5. Security Considerations</h6>
#### -->
					<h6>5. 安全についての考察</h6>
<!--- ####
          						<p>* Configuration File Permissions</p> 
#### -->
          						<p>* 設定ファイルの読み書き許可</p> 

<!--- ####
			<h3>1. Specifying the wpa_supplicant driver backend</h3>
#### -->
			<h2>1. wpa_supplicantドライバのバックエンドを指定する</h2>

<!--- ####
							<p>The wext driver backend will be used for all interfaces that do not explicitly set 'wpa-driver' to the driver type required for that device. Users of linux  2.4 kernels, or 2.6 kernels less than 2.6.14 will be required to specify a wpa-driver type.</p>
#### -->
							<p>デバイスに必要なドライバとして'wpa-drover'を特別に設定しない限り、wextドライババックエンドが使われます。Linuxの2.4カーネルまたは2.6.14以前の2.6カーネルではwpa-driverタイプを指定する必要がありました。</p>

	</div>	
				<h3>サポートされているドライバ</h3>
	<div>
		<table>
			<tbody>
				<tr>
<!--- ####
					<th>Driver</th>
#### -->
					<th>ドライバ</th>
<!--- ####
					<th>Description</th>
#### -->
					<th>説明</th>
				</tr>
				<tr>
					<td>wext</td>
<!--- ####
					<td>Linux wireless extensions (generic)</td>
#### -->
					<td>Linux 無線エクステンション (ジェネリック)</td>
				</tr>
			</tbody>
		</table>
	</div>
	<div class="spacer05"></div>
		<h3>よく使われ推薦できるドライバ</h3>

<!--- ####
							<p>The Intel Pro Wireless adapters (ipw2100, ipw2200 and ipw3945) all use the 'wext' backend, unless your kernel is older than 2.6.14</p>
#### -->
							<p>Intel Pro 無線LANアダプター(ipw2100, ipw2200 and ipw3945)はカーネルが2.6.14以前のものでない限りどれも'wext'ドライバーバックエンドを使っています。 </p>

<!--- ####
							<p>Madwifi supports both the 'wext' and 'madwifi' driver backends. 'wext' is preferred, however 'madwifi' may work better in some circumstances.</p>っy
#### -->
							<p>Madwifiは'wext'と'madwifi'ドライバーバックエンドの両方が使えます。大抵の場合'wext'を選ぶべきですが、状況によっては'madwifi'のほうがいい場合もあります。</p>

<!--- ####
							<p>Ndiswrapper NO LONGER SUPPORTS the 'ndiswrapper' driver backend as of version 1.16. Therefore, 'wext' must be used unless you use an antiquated ndiswrapper release.</p>
#### -->
							<p>Ndiswrapperはバージョン1.16以降'ndiswrapper'ドライバーバックエンドを<b>サポートしなくなった</b>ためよほど古いものを使っている場合をのぞき、'wext'を選ばなければいけません。</p>

<!--- ####
							<p>Set the driver type in the interfaces(5) stanza for your device with the 'wpa-driver' option. For example:</p>
#### -->
							<p>interfaces(5)のデバイス設定部でwpa-driverオプションを設定するには次のようにします:</p>

<pre>
iface eth0 inet dhcp
	wpa-driver wext
	. . . . . more options
</pre>

			<h2>2. Mode #1: マネージドモード</h2>

<!--- ####
							<p>This mode provides the ability to establish a connection via wpa_supplicant to one known network. It is similar to how the wireless-tools package works. Each element required to establish the connection via wpa_supplicant is prefixed with 'wpa-' and followed by the value that will be used for that element.</p>
#### -->
							<p>このモードを使えばwpa_supplicantによって既知の無線LANに接続することができます。この方法は無線ツールのパッケージの使い方に似ています。wpa-supplicantを使って接続する要素一つ一つがwpa-の接頭辞で始まり、この要素によって使われる値が続きます。</p>

		<h6> Mode #1 の wpa.confファイルの例１.</h6>
<pre>
Mode #1 wpa.conf file - 例 1.
ノート: 'wpa-psk'の値は次の条件のいづれかを満たすときだけ有効です:

   1. 8文字から６３文字までの長さのプレインテキスト(ASCII)文字列であること
   2. ６４文字の16進数の文字列であること

# Connect to access point of ssid 'NETBEER' with an encryption type of 
# WPA-PSK/WPA2-PSK. It assumes the driver will use the 'wext' driver backend 
# of wpa_supplicant because no wpa-driver option has been specified. 
# The passphrase is given as a ASCII (plaintext) string. DHCP is used to 
# obtain a network address.
#
iface wlan0 inet dhcp

        wpa-ssid NETBEER
        # plaintext passphrase
        wpa-psk PlainTextSecret

# Connect to access point of ssid 'homezone' with an encryption type of 
# WPA-PSK/WPA2-PSK, using the 'wext' driver backend of wpa_supplicant. 
# The psk is given as an encoded hexadecimal string. DHCP is used to obtain 
# a network address.
#
iface wlan0 inet dhcp
wpa-driver wext
wpa-ssid homezone
# hexadecimal psk is encoded from a plaintext passphrase
wpa-psk 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f

# Connect to access point of ssid 'HotSpot1' and bssid of '00:1a:2b:3c:4d:5e' 
# with an encryption type of WPA-PSK/WPA2-PSK, using the the 'madwifi' driver 
# backend of wpa_supplicant. The passphrase is given as a plaintext string. 
# A static network address assignment is used. 
#
iface ath0 inet static

        wpa-driver madwifi
        wpa-ssid HotSpot1
        wpa-bssid 00:1a:2b:3c:4d:5e
        # plaintext passphrase
        wpa-psk madhotspot
        wpa-key-mgmt WPA-PSK
        wpa-pairwise TKIP CCMP
        wpa-group TKIP CCMP
        wpa-proto WPA RSN
        # static ip settings
        address 192.168.0.100
        netmask 255.255.255.0
        network 192.168.0.0
        broadcast 192.168.0.255
        gateway 192.168.0.1

# User supplied wpa_supplicant.conf is used for eth1. All network information 
# is contained within the user supplied wpa_supplicant.conf. No wpa-driver type 
# is specified, so wext is used. DHCP is used to obtain a network address. 
#
iface eth1 inet dhcp

wpa-conf /path/to/wpa_supplicant.conf
</pre>
	
	<div class="divider" id="wpa1">
<!--- ####
		<h2>Table of Common Options</h2>
#### -->
		<h2>よく使われるオプション一覧</h2>

<!--- ####
							<p>A brief summary of common 'wpa-' options that may be used in the /etc/network/interfaces stanza for a wireless device. See the 'Important Notes About Managed Mode' section for information about valid and invalid 'wpa-' values.</p>
#### -->
							<p>/etc/network/interfacesの無線LAN設定によく使われる'wpa-'オプションの概略です。'wpa-'のどの接地値が有効になるかについては、あとに続く「マネージドモードについての重要事項」の欄を見てください．</p>

							<p class="highlight-2">NOTE: ALL values are CASE SeNsItVe</p>

<pre>
要素            設定値の例              説明
=======         =============           ===========
wpa-ssid        plaintextstring         ネットワークssidの設定
wpa-bssid       00:1a:2b:3c:4d:5e       アクセスポイントのbssidの設定
wpa-psk         0123456789......        前もってシェアするwpaキー.
                                        パスフレーズとssidのペアから
                                        psk値の生成にはwpa_passphrase(8)を使う
wpa-key-mgmt    NONE, WPA-PSK, WPA-EAP, 使用できる認証キーマネジメントプロトコル
                IEEE8021X               
wpa-group       CCMP, TKIP, WEP104,     使用できるwpaのグループ暗号化方法
                WEP40
wpa-pairwise    CCMP, TKIP, NONE        使用できるペアワイズ暗号化方法
wpa-auth-alg    OPEN, SHARED, LEAP      許されているIEEE 802.11認証アルゴリズム
wpa-proto       WPA, RSN                使用できるプロトコル
wpa-identity    myplaintextname         ネットワーク管理者から与えられたユーザー名
                                        (EAP認証)
wpa-password    myplaintextpassword     パスワード(EAP認証)
wpa-scan-ssid   0 or 1                  特定のリクエストフレームをつかうssidの走査の
                                        オンオフ
wpa-ap-scan     0 or 1 or 2             wpa_supplicanの走査ロジックの設定
                                        

</pre>
<!--- ####
							<p>The complete functionality of wpa_cli(8) should be implemented. Anything missing is considered a bug and should be reported as such. Patches are always welcome.</p>
#### -->
							<p>wpa_cli(8)の機能のすべてが実装されているはずですが、何かかけている場合のバグ報告には感謝します。</p>


<!--- ####
			<h2>Important Notes About Managed Mode</h2>
#### -->
			<h2>マネージドモードについての重要事項</h2>

<!--- ####
							<p>Almost all 'wpa-' options require there is at least a ssid specified. Only a handful of options have a global effect. These are: 'wpa-ap-scan' and 'wpa-preauthenticate'.</p>
#### -->
							<p>ほとんどの'wpa-'オプションはssidが最低一つは指定されていることを前提にしています。"wpa-ap-scan"と"wpa-preauthenticate"の二つのみがこの条件なしで有効になります。</p>

<!--- ####
							<p>Any 'wpa-' option given for a device in the interfaces(5) file is sufficient to trigger the wpa_supplicant daemon into action.</p>
#### -->
							<p>interfaces(5)ファイルに'wpa-'オプションを設定するだけでwpa_supplicantのデーモンが実行されます。</p>

<!--- ####
							<p>The wpasupplicant ifupdown script makes assumptions about the 'type' of input that is valid for each option. For example, it assumes that some input is plaintext and wraps quotation marks around the input before passing it on to wpa_cli, which then adds the input to the network block being formed via the wpa_supplicant ctrl_interface socket.</p>
#### -->
							<p>wpasupplicantのifupdownスクリプトは各オプションの入力タイプが有効であるという推量に基づいて動作します。 例えば、プレインテキストの入力は文字列の前後を引用符で囲tってwpa_cliに送り、それがwpa_supplicantのctrl_interfaceソケットを通してネットワークブロックの入力として送られます。</p>

<!--- ####
							<p>Running ifup manually with the  '- -verbose' option will reveal all of the commands used to form the network block via wpa_cli. If the value you used for any wpa-* option in /etc/network/interfaces is surrounded by double quotes, than it has been assumed to be of "plaintext" or "ascii" type input.</p>
#### -->
							<p>ifupをコマンドラインから'--verbose'オプションをつけて実行するとwpa_cliを通じてネットワークブロックを形づくるコマンドがすべて表示されます。もし/etc/network/interfacesの'wpa-'オプションの値が""で囲まれて表示されていたら、これはASCIIまたはプレインテキストの文字列であると解釈されたということです。</p>

<!--- ####
							<p>Some input is assumed to be a hexadecimal string (eg. wpa-wep-key*). The value 'type' of the wpa-psk option however, is determined via a simple check for more than one non hexadecimal character.</p>
#### -->
							<p>16進数の文字列であると解釈される入力もあります。(例. wpa-wep-key*など). 一方でwpa-pskオプションの設定値のタイプは単純に16進数に使われない文字が現れるかどうかのチェックによって決められてます.</p>

			<h2>動作のしくみ</h2>

<!--- ####
							<p>As mentioned earlier, each wpa_supplicant specific element is prefixed with 'wpa-'. Each element correlates to a property of wpa_supplicant described in the wpa_supplicant.conf(5), wpa_supplicant(8) and wpa_cli(8) manpages.</p>
#### -->
							<p>上記のとおり、wpa_supplicantで指定するオプションはどれも'wpa-'ではじまります。それぞれのオプションはwpa_supplicant.conf(5), wpa_supplicant(8) and wpa_cli(8)のmanページに記述されたwpa_supplicantの属性のどれかに関係しています。</p>

<!--- ####
							<p>The supplicant is launched without any pre-configuration whatsoever, and wpa_cli forms a network configuration from the input provided by the 'wpa-*' lines. Initially, wpa_supplicant/wpa_cli does not directly set the properties of the device (like setting an essid with iwconfig, for example), rather it informs the device of what access point is suitable to associate with. Once the device has scanned the area, and found that the suitable access point is available for use, these properties are set.</p>
#### -->
							<p>wpa_supplicantは事前の設定なしで実行され、wpa_kliは'wpa-'オプションの行の入力にしたがってネットワークを設定します。初めの段階ではwpa_supplicantとwpa_cliは(たとえばiwconfigがessidを接地するような）直接デバイス属性の設定を行うのではなく、デバイスにどのアクセスポイントが望ましいかを伝えるだけです。デバイスが電波を走査してみて、この望ましいアクセスポイントが見つかったらデバイス属性を設定します。</p>

<!--- ####
							<p>The script that does all the work is located at:</p>
#### -->
							<p>この仕事を行うスクリプトは:</p>

<pre>
/etc/wpa_supplicant/ifupdown.sh
/etc/wpa_supplicant/functions.sh
</pre>

<!--- ####
							<p>ifupdown.sh is executed by run-parts, which in turn is invoked by ifupdown during the 'pre-up', 'pre-down' and 'post-down' phases.</p>
#### -->
							<p>ifupdown.shはrun-partsによって実行され,このrun-partsはまた逆に'pre-up'、 'pre-down'、 'post-down'の段階でifupdownによって実行されます。</p>


<!--- ####
							<p>In the 'pre-up' phase, a wpa_supplicant daemon is launched followed by a series of wpa_cli commands that set up a network configuration according to what 'wpa-' options were used in /etc/network/interfaces for the physical device.</p>
#### -->
							<p>'pre-up'の段階でwpa_supplicantデーモンがスタートし、/etc/network/interfacesの中のデバイス属性を設定する'wpa-'オプションに従がってネットワークを設定するwpa_kliのコマンドがつづきます。</p>

<!--- ####
							<p>If wpa-roam is used, a wpa_cli daemon is lauched in the 'post-up' phase.</p>
#### -->
							<p>wpa-roamが使われている場合、'post-up'の段階でwpa_cliデーモンがスタートします。</p>

<!--- ####
							<p>In the 'pre-down' phase, the wpa_cli daemon is killed if it exists.</p>
#### -->
							<p>'pre-down'の段階で、wpa_cliデーモンが作動中の場合ストップします。</p>

<!--- ####
							<p>In the 'post-down' phase, the wpa_supplicant daemon is killed.</p>
#### -->
							<p>'post-down'の段階で、wpa_supplicantデーモンがストップします。</p>

			<h2>3. Mode #2: ローミングモード</h2>

<!--- ####
							<p>A self contained, simplistic roaming mechanism is provided by this package. It is in the form of a wpa_cli action script, /sbin/wpa_action, and it assumes control of ifupdown once activated. The wpa_action(8) manpage describes its technical details in great depth.</p>
#### -->
							<p>このパッケージに控えめで単純なローミングメカニズムも提供されています。/sbin/wpa_actionというスクリプトで一度実行されるとifupdownのコマンドをコントロールします。詳細についてはwpa_action(8)のmanページに詳しく説明されています。</p>

<!--- ####
							<p>To activate a roaming interface, adapt the following example interfaces(5) stanza:</p>
#### -->
							<p>ローミングモードを活用するにはinterfaces(5)を次の例のように設定します:</p>

<pre>
iface eth1 inet manual
        wpa-driver wext
        wpa-roam /path/to/wpa_supplicant.conf
</pre>

<!--- ####
							<p>Two daemons are spawned from the above example; wpa_supplicant and wpa_cli. It is required to provide a wpa_supplicant.conf. A good starting point is provided by an example configuration file:</p>
#### -->
							<p>上の例の場合、wpa_supplicantとwpa_cliの二つのデーモンがスタートします。wpa_supplicant.confを用意する必要があります。設定ファイルのサンプルを読むことからスタートするのが良いでしょう:</p>

<!--- ####
<pre>
 # copy the template to /etc/wpa_supplicant/
        cp /usr/share/doc/wpasupplicant/examples/wpa-roam.conf \
                /etc/wpa_supplicant/wpa_supplicant.conf
        # allow only root to read and write to file
        chmod 0600 /etc/wpa_supplicant/wpa_supplicant.conf

NOTE: it is critical that the used wpa_supplicant.conf defines the location of
      the 'ctrl_interface' so that a communication socket is created for the 
      wpa_cli (wpa-roam daemon) to attach. The mentioned example configuration,
      /usr/share/doc/wpasupplicant/examples/wpa-roam.conf, has been set to a
      sane default.

</pre>
#### -->

<pre>
 # copy the template to /etc/wpa_supplicant/
        cp /usr/share/doc/wpasupplicant/examples/wpa-roam.conf \
                /etc/wpa_supplicant/wpa_supplicant.conf
        # allow only root to read and write to file
        chmod 0600 /etc/wpa_supplicant/wpa_supplicant.conf

ノート: 実際に使われるwpa_supplicant.confがwpa_cli(wpa_roamデーモン）が使用する
　　　ソケットを作るための'ctrl_interface'の場所を指定することが必要です。
　　　上の設定で使われる/usr/share/doc/wpasupplicant/examples/wpa-roam.confは
      健全なデフォルトに設定されています。
</pre>

<!--- ####
							<p>It is required to edit this configuration file, and add the network blocks for all known networks. If you do not understand what this means, start reading the wpa_supplicant.conf(5) manpage now.</p>
#### -->
							<p>この設定ファイルを編集し、既知の無線LANすべてのネットワークブロックを加える必要があります。これがどういう意味かわからない場合は今すぐwpa_supplicant.conf(5)のmanページを読みましょう。</p>

<!--- ####
							<p>For each network, you may specify a special option 'id_str'. It should be set to a simple text string. This text string forms the basis for network profiling; it correlates to a logical interface defined in the interfaces(5) file. When no 'id_str' is given for a network, wpa_action assumes it will use the 'default' logical interface as fallback. The fallback interface can be chosen via the 'wpa-default-iface' option.</p>
#### -->
							<p>一つ一つの無線LANごとに特別の'id_str'オプションを指定できます。シンプルな文字列を使いましょう。この文字列がネットワークプロファイリングの基礎となります。interfaces(5)ファイルに定義されるロジカルインターフェイスに対応します。無線LANに'id_str'があてがわられない場合、wpa_actionはデフォルトのロジカルインターフェイスをfallbackとして使うものと判断します。どのインターフェイスをfallbackをして使うかは'wpa-default-iface'オプションで指定します。</p>

<!--- ####
							<p>So what does all this mean? Lets illustrate it with a small example taken from the wpa_action(8) manpage.</p>
#### -->
							<p>と読んできましたが、いったいこれはどういうこと？と思うでしょうから、wpa_actionのmanページにでてくる一例を使って、実際の働きを見てみましょう。</p>

		<h6>wpa_supplicant.confの例</h6>			
<pre>
wpa_supplicant.conf example:
network={
        ssid="foo"
        key_mgmt=NONE
        # this id_str will notify /sbin/wpa_action to 'ifup uni'
        id_str="uni"
}

network={
        ssid="bar"
        psk=123456789...
        # this id_str will notify /sbin/wpa_action to 'ifup home_static'
        id_str="home_static"
}

network={
        ssid=""
        key_mgmt=NONE
        # no 'id_str' parameter is given, /sbin/wpa_action will 'ifup default'
}
</pre>

	</div>
	<div class="divider" id="wpa2">
		<h6>/etc/network/interfacesの例</h6>
<pre>
/etc/network/interfaces example:
# the roaming interface MUST use the manual inet method
# 'allow-hotplug' or 'auto' ensures the daemon starts automatically
allow-hotplug eth1
iface eth1 inet manual

        wpa-driver wext
        wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf

 
# no id_str, 'default' is used as the fallback mapping target
iface default inet dhcp


# id_str="uni"
iface uni inet dhcp

# id_str="home_static"
iface home_static inet static

        address 192.168.0.20
        netmask 255.255.255.0
        network 192.168.0.0

        broadcast 192.168.0.255
        gateway 192.168.0.1
</pre>

<!--- ####
							<p>A logical interface is brought up via ifup, and taken down via ifdown, as wpa_supplicant associates and de-associates with the network associated to it by the 'id_str' option used in the wpa_supplicant.conf configuration file.</p>
#### -->
							<p>wpa_supplicant.congの'id_str'オプションを読んでwpa_supplicantがネットワークをid_strに対応させ、ifupによってロジカルインターフェイスが起動され、ifdownによって停止されます。</p>

<!--- ####
							<p>A log of /sbin/wpa_action's actions is created at /var/log/wpa_action.log, please attach the log when reporting problems.</p>
#### -->
							<p>/sbin/wpa_actionのログが /var/log/wpa_action.logに記録されますから、問題点をリポートとするときにはこのファイルを添付してください。</p>

<!--- ####
			<h2>Interacting with wpa_supplicant with wpa_cli and wpa_gui</h2>
#### -->
			<h2>wpa_supplicantをwpa_cliやwpa_guiで設定する</h2>

<!--- ####
							<p>The wpa_supplicant process can be interacted with by members of the "netdev" group if the example roaming configuration was used as is (or by whatever group or gid specified by the GROUP= crtl_interface parameter).</p>
#### -->
							<p>デフォルトのローミング設定では"netdev"というグループのメンバーは(またはcntl_interfaceパラメータのGROUP=で設定されたグループのメンバーは)wpa_supplicantを対話的なプログラムを使って設定することができます。</p>
<pre>
# the default ctrl_interface option used in the example file
	# /usr/share/doc/wpasupplicant/examples/wpa-roam.conf
        ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
</pre>

<!--- ####
To interact with the supplicant, the wpa_cli (command line) and wpa_gui (QT)
have been provided. With these you may connect, disconnect, add/delete new
network blocks, provide required interactive security information and so on.
#### -->
       <p>対話的にsupplicantを設定するためにコマンドラインのwpa_cliまたはGUIのand wpa_gui(QT)といったプログラムが用意されています。これらのプログラムを使って無線LANに接続、停止、ネットワークブロックの追加、削除、セキュリティ情報の設定などができます。</p>
	
<!--- ####
<h2> Controlling the Roaming Daemon with wpa_action</h2>
#### -->
<h2>ローミングデーモンをwpa_actionでコントロールする</h2>

<!--- ####
							<p>Once the roaming daemon is started, it assumes control of ifupdown. That is; wpa_cli calls ifup when wpa_supplicant has successfully associated with an access point, and calls ifdown when the connection is lost or terminated. While the roaming daemon is active, ifupdown should not be controlled directly by manually issued commands, rather /sbin/wpa_action is supplied to stop and reload the roaming daemon. For example, to stop the romaing daemon on the device 'eth1':</p>
#### -->
							<p>一旦ローミングデーモンがスタートしたら、このデーモンがifupdownをコントロールします。つまり、wpa_supplicantに対応するアクセスポイントが見つかるとwpa_cliがifupを実行し、この接続が停止されるか失われるかすると自動的にifdownを実行します。ローミングデーモンの作動中は直接ifupdownのコマンドを使ってははいけません。代わりに/sbin/wpa_actionを使ってデーモンをストップしたり、再ロードしたりします。たとえばeth1デバイスのローミングデーモンをストップするには:</p>

<pre>
wpa_action eth1 stop
</pre>


<!--- ####
							<p>When it is required to update the roaming daemon with  a new networks details, it can be done without stopping it. Edit the wpa_supplicant.conf file that is being used by the daemon with the new networks details, add optional network settings to /etc/network/interfaces that are specific to the new network (linked by the 'id_str') and then 'reload' the daemon like so:</p>
#### -->
							<p>デーモンの作動中にネットワーク設定を変更したいときはデーモンを停止せず、wpa_supplicant.confファイルを新しい設定に編集し、必要な場合は/etc/network/interfacesも新しいネットワーク設定に合うように('id_str'のリンクなどを)編集し、デーモンを次のコマンドで'再ロード'します:</p>

<pre>
wpa_action eth1 reload
</pre>

<!--- ####
							<p>For the complete technical details of what wpa_action can do, read the wpa_action(8) manpage.</p>
#### -->
							<p>wpa_actionについての技術的詳細はwpa_action(8)のmanページを読んでください。</p>

	</div>
	<div class="divider" id="wpa3">
<!--- ####
		<h2>Fine Tuning the Roaming Setup</h2>
#### -->
		<h2>ローミングの微細設定</h2>

<!--- ####
							<p>You may face situations where multiple known access points are in close proximity. You can choose which one is preferred manually, with wpa_cli or wpa_gui, or you can give each network its own priority. This is provided by the 'priority' option of wpa_supplicant.conf.</p>
#### -->
							<p>既知の無線LANがいくつか重なり合う状況もあるでしょう。どの無線LANに優先的に接続するか,優先度をwpa_cliまたはwpa_guiで手動設定することができます。wpa_supplicant.confの'priority'オプションで設定します。</p>

	</div>
	<div class="divider" id="wpa4">
<!--- ####
		<h2>The Logfile</h2>
#### -->
		<h2>ログファイル</h2>

<!--- ####
							<p>All activity of the roaming dameon is logged to /var/log/wpa_action.log. The following information is logged:</p>
#### -->
							<p>ローミングデーモンの行動はすべて /var/log/wpa_action.log に記録されます。次の情報が記録されます:</p>

<!--- ####
							<p>*time and date<br />
#### -->
							<p>* 日時<br />
<!--- ####
							*interface name and action event<br />
#### -->
							* インターフェイス名とアクションイベント名<br />
<!--- ####
							*values of enviromental variables (WPA_ID, WPA_ID_STR, WPA_CTRL_DIR)<br />
#### -->
							* 環境変数の値 (WPA_ID, WPA_ID_STR, WPA_CTRL_DIR)<br />
<!--- ####
							*ifupdown command executed<br />
#### -->
							* 実行されたifupdownコマンド<br />
<!--- ####
							*wpa_cli status (based on WPA-PSK, network may display different info)<br />
#### -->
							* wpa_cliステータス(WPA-PSKに基づくステータス, networkステータスの表示と違うことがある)<br />
							* bssid<br />
							* bssid<br />
							* ssid<br />
							* id<br />
							* id_str<br />
							* pairwise_cipher<br />
							* group_cipher<br />
							* key_mgmt<br />
							* wpa_state<br />
<!--- ####
							*ip_address</p>
#### -->
							* IPアドレス</p>
	
	</div>
	<div class="divider" id="wpa5">	
<!--- ####
		<h2>Using External Mapping Scripts (e.g. guessnet)</h2>
#### -->
		<h2>外部のマッピングスクリプト(guessnetなど)を使う</h2>

<!--- ####
							<p>In addition to the internal mapping of logical interfaces via 'id_str', wpa_action can call external mapping scripts. A mapping script should return the name of the logical interface which should be brought up. Any mapping script that works from ifupdowns mapping mechanism (see man interfaces) should also work when called from wpa_action.</p>
#### -->
							<p>'id_str'によるロジカルインターフェイスの内部マッピングに加えて、wpa_actionは外部のマッピングスクリプトを使うこともできます。マッピングスクリプトは接続するべきロジカルインターフェイスの名前を出力するスクリプトプログラムです。ifupdownのマッピングメカニズム(man interfacesを参照）から呼び出せるスクリプトであればwpa_actionからも呼び出すことができます。</p>

<!--- ####
							<p>To call a mapping script add a line 'wpa-mapping-script name-of-the-script' to  the interfaces stanza of the physical roaming device. (You may have to specify the absolute path to the mapping script.)</p>
#### -->
							<p>マッピングスクリプトを呼び出すには/etc/network/interfacesファイルの中のフィジカルローミングデバイスを設定する部門に'wpa-mapping-script スクリプトファイル'という書式の行を入れます。(スクリプトファイルはディレクトリの場所を含めた/から始まる完全なパスで記入します。) </p>


<!--- ####
							<p>The contents of lines starting with wpa-map are passed to stdin of the mapping  script. Since ifupdown allows only one wpa-map line you can append any number to wpa-map for additional lines. For example:</p>
#### -->
							<p>'wpa-map'から始まる行の内容はマッピングスクリプトのstdin入力として送られます。ifupdownは一行のwpa-mapしか読み込まないため、ここには安心して何行追加しても問題ありません。一例として:</p>

<pre>
iface wlan0 inet manual
        wpa-driver wext
        wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
        wpa-mapping-script guessnet-ifupdown
        wpa-map0 home
        wpa-map1 work
        wpa-map2 school
        # ... additional wpa-mapX lines as required
</pre>
<!--- ####
							<p>By default the mapping script will only be used when no 'id_str' is available for the current network. If you want to completely disable 'id_str' matching and use only an external mapping script, use the 'wpa-mapping-script-priority 1' option to override default behaviour.</p>
#### -->
							<p>デフォルトではアクセスできる無線LANの'id_str'が用意されていないときに限りマッピングスクリプトが使われますが、'id_str'による内部マッピングを完全に無効化して外部スクリプトのみ使いたい場合は'wpa-mapping-script-priority 1'オプションを加えてデフォルトの振る舞いを抑えます。</p>

<!--- ####
							<p>If the mapping script returns an empty string wpa_action will fallback to using the 'default' interface, unless an alternative is defined by the 'wpa-roam-default-iface' option.</p>
#### -->
							<p>マッピングスクリプトがインターフェイス名を出力しないときは'wpa-roam-default-ifce'オプションが指定されている場合をのぞき、フォールバックとしてデフォルトのインターフェイスが使われます。</p>

<!--- ####
							<p>Below is an advanced example, using guessnet-ifupdown as the external mapping script.</p>
#### -->
							<p>guessnet-ifupdownを外部マッピングスクリプトに使った上級の例を下に示します。</p>

					<h6>/etc/network/interfacesと外部マッピング</h6>
<pre>
/etc/network/interfaces with external mapping example:
allow-hotplug wlan0
iface wlan0 inet manual

        wpa-driver wext
        wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
        wpa-roam-default-iface default-wparoam
        wpa-mapping-script guessnet-ifupdown
        wpa-map default: default-guessnet
        wpa-map0 home_static
        wpa-map1 work_static


# school can only be chosen via 'id_str' matching
iface school inet dhcp

        # resolvconf
        dns-nameservers 11.22.33.44 55.66.77.88

iface home_static inet static

        address 192.168.0.20
        netmask 255.255.255.0

        network 192.168.0.0
        broadcast 192.168.0.255
        gateway 192.168.0.1
        test peer address 192.168.0.1 mac 00:01:02:03:04:05


iface work_static inet static

        address 192.168.3.200
        netmask 255.255.255.0
        network 192.168.3.0
        broadcast 192.168.3.255

        gateway 192.168.3.1
        test peer address 192.168.3.1 mac 00:01:02:03:04:05

iface default-guessnet inet dhcp

iface default-wparoam inet dhcp
</pre>

<!--- ####
							<p>In this example wpa_action will use guessnet for the selection of a suitable logical interface only when no 'id_str' option has been provided for the current network in the provided wpa_supplicant.conf.</p>
#### -->
							<p>この例ではwpa_supplicant.confに見つかった無線LANのネットワークの'id_str'オプションがないとき、wpa_actionはguessnetスクリプトを使ってロジカルインターフェイスを選択します。</p>

<!--- ####
							<p>The 'wpa-map' lines provide guessnet with the logical interfaces that are to be tested as well as the default interface to be used when all tests fail. The 'test' lines of each logical interface are used by guessnet to determine if we are actually connected to that network. For instance, guessnet will choose the logical interface 'home_static' if there's a device with an IP address of 192.168.0.1 and MAC of 00:01:02:03:04:05 on the current network. If all tests fail, the 'default-guessnet' interface will be configured.</p>
#### -->
							<p>'wpa-map'の行はguessnetの入力としてマッチングを試すべきロジカルインターフェイスと、該当するインターフェイスが見つからない場合のデフォルトインターフェイスが送られます。各ロジカルインターフェイスの'test'で始まる行は、ロジカルインターフェイスが今実際に接続しているネットワークに該当するかをguesnetが判断するのに使われます。たとえば、guessnetは接続しているネットワークにIPアドレスが192.168.0.1でMACが00:01:02:03:04:05であるデバイスがあったら、'home_static'をロジカルインターフェイスとして選びます。もしテストがすべて失敗した場合は'default-guessnet'インターフェイスが設定されます。</p>


							<p>詳しくはguessnet(8)のmanページを見てください。</p>

<!--- ####
			<h2>4. Troubleshooting</h2>
#### -->
			<h2>4. 困ったとき</h2>

<!--- ####
							<p>In order to debug connection, association and authentication problems, we suggest starting `wpa_cli -i &lt;interface&gt;` in a different shell, before starting the interface. Use the command 'level 0' first, to get all debug messages. Then use `ifup - -verbose &lt;interface&gt;` to get verbose debug messages from the script starting wpasupplicant.</p>
#### -->
							<p>無線LANへの接続、結合、認証の問題をデバッグするには、`wpa_cli -i &lt;interface&gt;`を別のシェルからスタートして、 まずデバッグメッセージをすべて表示するよう'level 0'コマンドを実行し、次に`ifup --verbose &lt;interface&gt;`を実行してwpa_supplicantをスタートするスクリプトのデバッグメッセージをすべて表示するようにします。</p>
	</div>
	<div class="divider" id="wpa6">
<!--- ####
		<h2>Hidden ssids</h2>
#### -->
		<h2>隠れssids</h2>

<!--- ####
							<p>For reference, see #358137. In order to be able to associate to hidden ssids, please try to set the option 'ap_scan=1' in the global section, and  'scan_ssid=1' in your network block section of your wpa_supplicant.conf file. If you are using the managed mode, you can do so by these stanzas:</p>
#### -->
							<p>参考までに(Debian bug)#358137を見てください。隠れssidに結合するにはwpa_supplicant.confファイルのグローバル部門に'ap_scan=1'を、ネットワークブロック部門に'scan_ssid=1'を加えます。マネージドモードを使う場合は次のようにします。</p>

<pre>
iface eth1 inet dhcp
wpa-conf managed
wpa-ap-scan 1
wpa-scan-ssid 1
# additional options for your setup
</pre>

<!--- ####
							<p>According to #368770, association can take a very long time to associate to WEP  secured networks. In some cases, setting the parameter 'ap_scan=2' in the config file, (or using a 'wpa-ap-scan 2' stanza, which is equivalent) can greatly help to speed up association.</p>
#### -->
							<p> #368770によるとWEPによって保護されているネットワークに結合させるのにかなりの時間がかかることがあります。場合によって、設定ファイルに'ap_scan'の行を加えること(または'wpa-ap-scan 2'の行をinterfacesに加えること)によって関係づけをスピードアップできることがあります。</p>

<!--- ####
 							<p>Please note that setting ap_scan to the value of 2 also requires that all networks have a precisely defined security policy for for key_mgmt, pairwise, group and proto network policy variables.</p>
#### -->
 							<p>ap_scanの値を2に設定するにはすべてのネットワークについてkey_mgmtのためのセキュリティポリシーや、ペア、グループ、またはプロトネットワークのポリシーが正確に定義されていなくてはなりません。</p>

	</div>	
	<div class="divider" id="wpa7">
<!--- ####
		<h2>5. Security Considerations</h2>
#### -->
		<h2>5. 安全についての考察</h2>
<!--- ####
				<h5>Configuration of File Permissions</h5>
#### -->
				<h5>設定ファイルの読み書き許可</h5>
<!--- ####
							<p>It is important to keep PSK's and other sensitive information concerning your network settings private, therefore ensure that important configuration files containing such data are only readable by their owner. For example:</p>
#### -->
							<p>PSKその他、ネットワーク関連のの秘匿すべき情報を保護するのは重要なことです。そのため、そのような情報を含んだファイルは所有者以外には読めないように設定します。一例:</p>

<pre>
chmod 0600 /etc/network/interfaces
# 実際のwpa_supplicant.confファイルのパスに編集すること
chmod 0600 /etc/wpa_supplicant/wpa_supplicant.conf
</pre>
<!--- ####
							<p>By default, /etc/network/interfaces is world readable, and thus unsuitable for containing secret keys and passwords.</p>
#### -->
							<p>デフォルトとして/etc/network/interfacesはだれでも読むことができるため,秘密のキーやパスワードを保存するには適していません。</p>

	</div>
			<div id="rev">Page last revised 08/07/2009 0230 UTC</div>

</div>
</body>
</html>
